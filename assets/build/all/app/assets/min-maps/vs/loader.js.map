{"version":3,"sources":["out-editor/vs/loader.js"],"sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.36.1(6c56744c3419458f0dd48864520b759d1a3a1ca8)\n * Released under the MIT license\n * https://github.com/microsoft/vscode/blob/main/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n            this._isElectronNodeIntegrationWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronNodeIntegrationWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isElectronNodeIntegrationWebWorker;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n            this._isElectronNodeIntegrationWebWorker = this._isWebWorker && (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'worker');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = /** @class */ (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = /** @class */ (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = /** @class */ (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n        return NullLoaderEventRecorder;\n    }());\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = /** @class */ (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\n                return obj;\n            }\n            if (!Array.isArray(obj) && Object.getPrototypeOf(obj) !== Object.prototype) {\n                // only clone \"simple\" objects\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        Utilities.NEXT_ANONYMOUS_ID = 1;\n        Utilities.PERFORMANCE_NOW_PROBED = false;\n        Utilities.HAS_PERFORMANCE_NOW = false;\n        return Utilities;\n    }());\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    function ensureError(err) {\n        if (err instanceof Error) {\n            return err;\n        }\n        var result = new Error(err.message || String(err) || 'Unknown Error');\n        if (err.stack) {\n            result.stack = err.stack;\n        }\n        return result;\n    }\n    AMDLoader.ensureError = ensureError;\n    ;\n    var ConfigurationOptionsUtil = /** @class */ (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.phase === 'loading') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.phase === 'factory') {\n                    console.error('The factory function of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.recordStats === 'undefined') {\n                options.recordStats = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (typeof options.preferScriptTags === 'undefined') {\n                options.preferScriptTags = false;\n            }\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n                    err.phase = 'configuration';\n                    options.onError(err);\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = /** @class */ (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            if (this._env.isNode) {\n                var isNodeModule = (this.options.amdModulesPattern instanceof RegExp\n                    && !this.options.amdModulesPattern.test(moduleId));\n                if (isNodeModule) {\n                    // This is a node module...\n                    if (this.isBuild()) {\n                        // ...and we are at build time, drop it\n                        return ['empty:'];\n                    }\n                    else {\n                        // ...and at runtime we create a `shortcut`-path\n                        return ['node|' + moduleId];\n                    }\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        Configuration.prototype.shouldInvokeFactory = function (strModuleId) {\n            if (!this.options.isBuild) {\n                // outside of a build, all factories should be invoked\n                return true;\n            }\n            // during a build, only explicitly marked or anonymous modules get their factories invoked\n            if (AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return true;\n            }\n            if (this.options.buildForceInvokeFactory && this.options.buildForceInvokeFactory[strModuleId]) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = /** @class */ (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                if (this._env.isWebWorker) {\n                    this._scriptLoader = new WorkerScriptLoader();\n                }\n                else if (this._env.isElectronRenderer) {\n                    var preferScriptTags = moduleManager.getConfig().getOptionsLiteral().preferScriptTags;\n                    if (preferScriptTags) {\n                        this._scriptLoader = new BrowserScriptLoader();\n                    }\n                    else {\n                        this._scriptLoader = new NodeScriptLoader(this._env);\n                    }\n                }\n                else if (this._env.isNode) {\n                    this._scriptLoader = new NodeScriptLoader(this._env);\n                }\n                else {\n                    this._scriptLoader = new BrowserScriptLoader();\n                }\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = /** @class */ (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browsers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            if (/^node\\|/.test(scriptSrc)) {\n                var opts = moduleManager.getConfig().getOptionsLiteral();\n                var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                var script = document.createElement('script');\n                script.setAttribute('async', 'async');\n                script.setAttribute('type', 'text/javascript');\n                this.attachListeners(script, callback, errorback);\n                var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\n                if (trustedTypesPolicy) {\n                    scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n                }\n                script.setAttribute('src', scriptSrc);\n                // Propagate CSP nonce to dynamically created script tag.\n                var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n                if (cspNonce) {\n                    script.setAttribute('nonce', cspNonce);\n                }\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        };\n        return BrowserScriptLoader;\n    }());\n    function canUseEval(moduleManager) {\n        var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\n        try {\n            var func = (trustedTypesPolicy\n                ? self.eval(trustedTypesPolicy.createScript('', 'true'))\n                : new Function('true'));\n            func.call(self);\n            return true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    var WorkerScriptLoader = /** @class */ (function () {\n        function WorkerScriptLoader() {\n            this._cachedCanUseEval = null;\n        }\n        WorkerScriptLoader.prototype._canUseEval = function (moduleManager) {\n            if (this._cachedCanUseEval === null) {\n                this._cachedCanUseEval = canUseEval(moduleManager);\n            }\n            return this._cachedCanUseEval;\n        };\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            if (/^node\\|/.test(scriptSrc)) {\n                var opts = moduleManager.getConfig().getOptionsLiteral();\n                var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n                var pieces = scriptSrc.split('|');\n                var moduleExports_2 = null;\n                try {\n                    moduleExports_2 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_2; });\n                callback();\n            }\n            else {\n                var trustedTypesPolicy_1 = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\n                var isCrossOrigin = (/^((http:)|(https:)|(file:))/.test(scriptSrc) && scriptSrc.substring(0, self.origin.length) !== self.origin);\n                if (!isCrossOrigin && this._canUseEval(moduleManager)) {\n                    // use `fetch` if possible because `importScripts`\n                    // is synchronous and can lead to deadlocks on Safari\n                    fetch(scriptSrc).then(function (response) {\n                        if (response.status !== 200) {\n                            throw new Error(response.statusText);\n                        }\n                        return response.text();\n                    }).then(function (text) {\n                        text = text + \"\\n//# sourceURL=\" + scriptSrc;\n                        var func = (trustedTypesPolicy_1\n                            ? self.eval(trustedTypesPolicy_1.createScript('', text))\n                            : new Function(text));\n                        func.call(self);\n                        callback();\n                    }).then(undefined, errorback);\n                    return;\n                }\n                try {\n                    if (trustedTypesPolicy_1) {\n                        scriptSrc = trustedTypesPolicy_1.createScriptURL(scriptSrc);\n                    }\n                    importScripts(scriptSrc);\n                    callback();\n                }\n                catch (e) {\n                    errorback(e);\n                }\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = /** @class */ (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData) {\n                return;\n            }\n            if (this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request, options) {\n                    return Module._resolveFilename(request, mod, false, options);\n                };\n                require.resolve.paths = function paths(request) {\n                    return Module._resolveLookupPaths(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang and create wrapper function\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n                // create script\n                var recorder = moduleManager.getRecorder();\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n                var options = { filename: filename };\n                var hashData;\n                try {\n                    var data = that._fs.readFileSync(cachedDataPath);\n                    hashData = data.slice(0, 16);\n                    options.cachedData = data.slice(16);\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                }\n                catch (_e) {\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                }\n                var script = new that._vm.Script(scriptSource, options);\n                var compileWrapper = script.runInThisContext(options);\n                // run script\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                // cached data aftermath\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_3 = null;\n                try {\n                    moduleExports_3 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_3; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var scriptSource;\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n                    }\n                    else {\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n                    }\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\n                });\n            }\n        };\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\n            var recorder = moduleManager.getRecorder();\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\n            var script = new this._vm.Script(contents, options);\n            var ret = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\n            if (!this._env.isElectronRenderer) {\n                return path;\n            }\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n            if (driveLetterMatch) {\n                // windows\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n            }\n            else {\n                // nix\n                return \"file://\" + path;\n            }\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').update(process.arch, '').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // cached data got rejected -> delete and re-create\n                this._fs.unlink(cachedDataPath, function (err) {\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n                    if (err) {\n                        moduleManager.getConfig().onError(err);\n                    }\n                });\n            }\n            else if (createCachedData) {\n                // no cached data, but wanted\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n            }\n        };\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\n            var _this = this;\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n            var lastSize = -1;\n            var iteration = 0;\n            var hashData = undefined;\n            var createLoop = function () {\n                setTimeout(function () {\n                    if (!hashData) {\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                    }\n                    var cachedData = script.createCachedData();\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                        // done\n                        return;\n                    }\n                    if (cachedData.length < lastSize) {\n                        // less data than before: skip, try again next round\n                        createLoop();\n                        return;\n                    }\n                    lastSize = cachedData.length;\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\n                        createLoop();\n                    });\n                }, timeout * (Math.pow(4, iteration++)));\n            };\n            // with some delay (`timeout`) create cached data\n            // and repeat that (with backoff delay) until the\n            // data seems to be not changing anymore\n            createLoop();\n        };\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\n            if (!cachedDataPath) {\n                // no cached data case\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n            }\n            else {\n                // cached data case: read both files in parallel\n                var source_1 = undefined;\n                var cachedData_1 = undefined;\n                var hashData_1 = undefined;\n                var steps_1 = 2;\n                var step_1 = function (err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else if (--steps_1 === 0) {\n                        callback(undefined, source_1, cachedData_1, hashData_1);\n                    }\n                };\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\n                    source_1 = data;\n                    step_1(err);\n                });\n                this._fs.readFile(cachedDataPath, function (err, data) {\n                    if (!err && data && data.length > 0) {\n                        hashData_1 = data.slice(0, 16);\n                        cachedData_1 = data.slice(16);\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                    }\n                    else {\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                    }\n                    step_1(); // ignored: cached data is optional\n                });\n            }\n        };\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\n            var _this = this;\n            if (!hashData) {\n                // nothing to do\n                return;\n            }\n            if (script.cachedDataRejected) {\n                // invalid anyways\n                return;\n            }\n            setTimeout(function () {\n                // check source hash - the contract is that file paths change when file content\n                // change (e.g use the commit or version id as cache path). this check is\n                // for violations of this contract.\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                if (!hashData.equals(hashDataNow)) {\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\n                    _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                    });\n                }\n            }, Math.ceil(5000 * (1 + Math.random())));\n        };\n        NodeScriptLoader._BOM = 0xFEFF;\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n        NodeScriptLoader._SUFFIX = '\\n});';\n        return NodeScriptLoader;\n    }());\n    function ensureRecordedNodeRequire(recorder, _nodeRequire) {\n        if (_nodeRequire.__$__isRecorded) {\n            // it is already recorded\n            return _nodeRequire;\n        }\n        var nodeRequire = function nodeRequire(what) {\n            recorder.record(33 /* NodeBeginNativeRequire */, what);\n            try {\n                return _nodeRequire(what);\n            }\n            finally {\n                recorder.record(34 /* NodeEndNativeRequire */, what);\n            }\n        };\n        nodeRequire.__$__isRecorded = true;\n        return nodeRequire;\n    }\n    AMDLoader.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = /** @class */ (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\n        return ModuleIdResolver;\n    }());\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = /** @class */ (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.error = null;\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (!config.shouldInvokeFactory(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues, inversedependenciesProvider) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                var err = AMDLoader.ensureError(producedError);\n                err.phase = 'factory';\n                err.moduleId = this.strId;\n                err.neededBy = inversedependenciesProvider(this.id);\n                this.error = err;\n                config.onError(err);\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            this._isComplete = true;\n            this.error = err;\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = /** @class */ (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = /** @class */ (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n        return RegularDependency;\n    }());\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = /** @class */ (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = /** @class */ (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._hasDependencyCycle = false;\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependencies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack || null;\n            }\n            this._currentAnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            if (m.error) {\n                throw m.error;\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnonymousDefineCall !== null) {\n                var defineCall = this._currentAnonymousDefineCall;\n                this._currentAnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            var err = AMDLoader.ensureError(_err);\n            err.phase = 'loading';\n            err.moduleId = strModuleId;\n            err.neededBy = neededBy;\n            return err;\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            if (!this._modules2[moduleId]) {\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, null, null);\n            }\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                    if (path !== null) {\n                        path.push(fromId);\n                        return path;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.hasDependencyCycle = function () {\n                return _this._hasDependencyCycle;\n            };\n            result.config = function (params, shouldOverwrite) {\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n                _this.configure(params, shouldOverwrite);\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        module.exportsPassedIn = true;\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule && dependencyModule.isComplete()) {\n                        if (dependencyModule.error) {\n                            module.onDependencyError(dependencyModule.error);\n                            return;\n                        }\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\n                        this._hasDependencyCycle = true;\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n                        cyclePath.reverse();\n                        cyclePath.push(dependency.id);\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                        // Break the cycle\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    // record inverse dependency\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                    this._inverseDependencies2[dependency.id].push(module.id);\n                    if (dependency instanceof PluginDependency) {\n                        var plugin = this._modules2[dependency.pluginId];\n                        if (plugin && plugin.isComplete()) {\n                            this._loadPluginDependency(plugin.exports, dependency);\n                            continue;\n                        }\n                        // Record dependency for when the plugin gets loaded\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                        if (!inversePluginDeps) {\n                            inversePluginDeps = [];\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                        }\n                        inversePluginDeps.push(dependency);\n                        this._loadModule(dependency.pluginId);\n                        continue;\n                    }\n                    this._loadModule(dependency.id);\n                }\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        dependenciesValues[i] = module.exports;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        dependenciesValues[i] = {\n                            id: module.strId,\n                            config: function () {\n                                return _this._config.getConfigForModule(module.strId);\n                            }\n                        };\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule) {\n                        dependenciesValues[i] = dependencyModule.exports;\n                        continue;\n                    }\n                    dependenciesValues[i] = null;\n                }\n            }\n            var inversedependenciesProvider = function (moduleId) {\n                return (_this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            };\n            module.complete(recorder, this._config, dependenciesValues, inversedependenciesProvider);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = DefineFunc;\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire === 'function' && typeof _nodeRequire.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = AMDLoader.ensureRecordedNodeRequire(moduleManager.getRecorder(), _nodeRequire);\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer && !env.isElectronNodeIntegrationWebWorker) {\n            module.exports = RequireFunc;\n            // require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n"],"mappings":"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","names":["AMDLoader","Environment","LoaderEvent","type","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","NullLoaderEventRecorder","Utilities","isWindows","uri","haystack","needle","url","obj","callback","key","isEmpty","result","value","id","ensureError","err","ConfigurationOptionsUtil","options","defaultOnError","overwrite","base","key2","value2","Configuration","env","nodeMain","dirnameIndex","i","_this","from","to","a","b","moduleId","pathRule","len","j","lenJ","urls","isNodeModule","results","strModuleId","OnlyOnceScriptLoader","moduleManager","scriptSrc","errorback","WorkerScriptLoader","preferScriptTags","BrowserScriptLoader","NodeScriptLoader","scriptCallbacks","script","unbind","loadEventListener","errorEventListener","e","opts","nodeRequire","ensureRecordedNodeRequire","pieces","moduleExports_1","trustedTypesPolicy","cspNonce","canUseEval","func","moduleExports_2","trustedTypesPolicy_1","isCrossOrigin","response","text","nodeCachedData","that","Module","makeRequireFunction","mod","require","path","request","content","filename","scriptSource","recorder","cachedDataPath","hashData","data","compileWrapper","dirname","args","nodeInstrumenter","c","moduleExports_3","normalizedScriptSrc_1","vmScriptPathOrUri_1","wantsCachedData_1","cachedDataPath_1","cachedData","scriptOpts","contents","ret","globalDefineFunc","receivedDefineCall","localDefineFunc","driveLetterMatch","config","hash","basename","createCachedData","timeout","lastSize","iteration","createLoop","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","hashDataNow","_nodeRequire","what","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","r","pattern","strId","dependencies","moduleIdResolver","dependenciesValues","inversedependenciesProvider","producedError","ModuleIdProvider","RegularDependency","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","stack","normalize","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","resultLen","location_1","defineStack","dep","dependency","bangIndex","strPluginId","dependencyId","_strModuleId","params","shouldOverwrite","oldShouldRecordStats","defineCall","_err","neededBy","intModuleId","error","seenModuleId","someoneNotified","queue","queueElement","inverseDeps","inverseDep","fromId","toId","inQueue","element","dependencyModule","depth","paths","scopedPackageRegex","lastPathIndex","loadNextPath","currentPath_1","recorder_1","plugin","pluginDependency","load","module","cyclePath","inversePluginDeps","inverseDependencyId","inverseDependency","DefineFunc","_requireFunc_config","RequireFunc","init"],"file":"loader.js"}