{"version":3,"sources":["out-editor/vs/base/worker/fake","out-editor/vs/base/worker/vs/loader.js","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/arrays.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/diff/diffChange.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/errors.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/iterator.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/keyCodes.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/lifecycle.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/linkedList.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/platform.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/process.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/path.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/stopwatch.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/event.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/cancellation.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/strings.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/hash.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/diff/diff.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/types.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/uint.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/uri.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/common/worker/simpleWorker.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/core/characterClassifier.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/core/position.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/core/range.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/core/selection.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/core/token.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/diff/diffComputer.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/model/wordHelper.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/modes/linkComputer.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/modes/supports/inplaceReplaceSupport.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/standalone/standaloneEnums.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/standalone/standaloneBase.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/viewModel/prefixSumComputer.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/model/mirrorTextModel.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/editor/common/services/editorSimpleWorker.ts","out-editor/vs/base/worker/file:/C:/Alex/src/vscode/out-editor-src/vs/base/worker/workerMain.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = /** @class */ (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = /** @class */ (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = /** @class */ (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n        return NullLoaderEventRecorder;\n    }());\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = /** @class */ (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\n                return obj;\n            }\n            if (!Array.isArray(obj) && Object.getPrototypeOf(obj) !== Object.prototype) {\n                // only clone \"simple\" objects\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        Utilities.NEXT_ANONYMOUS_ID = 1;\n        Utilities.PERFORMANCE_NOW_PROBED = false;\n        Utilities.HAS_PERFORMANCE_NOW = false;\n        return Utilities;\n    }());\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    function ensureError(err) {\n        if (err instanceof Error) {\n            return err;\n        }\n        var result = new Error(err.message || String(err) || 'Unknown Error');\n        if (err.stack) {\n            result.stack = err.stack;\n        }\n        return result;\n    }\n    AMDLoader.ensureError = ensureError;\n    ;\n    var ConfigurationOptionsUtil = /** @class */ (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.phase === 'loading') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.phase === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err);\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.recordStats === 'undefined') {\n                options.recordStats = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (typeof options.preferScriptTags === 'undefined') {\n                options.preferScriptTags = false;\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n                    err.phase = 'configuration';\n                    options.onError(err);\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = /** @class */ (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            var isNodeModule = ((this.nodeModulesMap[moduleId] === true)\n                || (this.options.amdModulesPattern instanceof RegExp && !this.options.amdModulesPattern.test(moduleId)));\n            if (isNodeModule) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = /** @class */ (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                if (this._env.isWebWorker) {\n                    this._scriptLoader = new WorkerScriptLoader();\n                }\n                else if (this._env.isElectronRenderer) {\n                    var preferScriptTags = moduleManager.getConfig().getOptionsLiteral().preferScriptTags;\n                    if (preferScriptTags) {\n                        this._scriptLoader = new BrowserScriptLoader();\n                    }\n                    else {\n                        this._scriptLoader = new NodeScriptLoader(this._env);\n                    }\n                }\n                else if (this._env.isNode) {\n                    this._scriptLoader = new NodeScriptLoader(this._env);\n                }\n                else {\n                    this._scriptLoader = new BrowserScriptLoader();\n                }\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = /** @class */ (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            if (/^node\\|/.test(scriptSrc)) {\n                var opts = moduleManager.getConfig().getOptionsLiteral();\n                var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                var script = document.createElement('script');\n                script.setAttribute('async', 'async');\n                script.setAttribute('type', 'text/javascript');\n                this.attachListeners(script, callback, errorback);\n                var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\n                if (trustedTypesPolicy) {\n                    scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n                }\n                script.setAttribute('src', scriptSrc);\n                // Propagate CSP nonce to dynamically created script tag.\n                var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n                if (cspNonce) {\n                    script.setAttribute('nonce', cspNonce);\n                }\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = /** @class */ (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\n            if (trustedTypesPolicy) {\n                scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n            }\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = /** @class */ (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData) {\n                return;\n            }\n            if (this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request, options) {\n                    return Module._resolveFilename(request, mod, false, options);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang and create wrapper function\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n                // create script\n                var recorder = moduleManager.getRecorder();\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n                var options = { filename: filename };\n                var hashData;\n                try {\n                    var data = that._fs.readFileSync(cachedDataPath);\n                    hashData = data.slice(0, 16);\n                    options.cachedData = data.slice(16);\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                }\n                catch (_e) {\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                }\n                var script = new that._vm.Script(scriptSource, options);\n                var compileWrapper = script.runInThisContext(options);\n                // run script\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                // cached data aftermath\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_2 = null;\n                try {\n                    moduleExports_2 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_2; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var scriptSource;\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n                    }\n                    else {\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n                    }\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\n                });\n            }\n        };\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\n            var recorder = moduleManager.getRecorder();\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\n            var script = new this._vm.Script(contents, options);\n            var ret = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\n            if (!this._env.isElectronRenderer) {\n                return path;\n            }\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n            if (driveLetterMatch) {\n                // windows\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n            }\n            else {\n                // nix\n                return \"file://\" + path;\n            }\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').update(process.arch, '').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // cached data got rejected -> delete and re-create\n                this._fs.unlink(cachedDataPath, function (err) {\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n                    if (err) {\n                        moduleManager.getConfig().onError(err);\n                    }\n                });\n            }\n            else if (createCachedData) {\n                // no cached data, but wanted\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n            }\n        };\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\n            var _this = this;\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n            var lastSize = -1;\n            var iteration = 0;\n            var hashData = undefined;\n            var createLoop = function () {\n                setTimeout(function () {\n                    if (!hashData) {\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                    }\n                    var cachedData = script.createCachedData();\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                        // done\n                        return;\n                    }\n                    if (cachedData.length < lastSize) {\n                        // less data than before: skip, try again next round\n                        createLoop();\n                        return;\n                    }\n                    lastSize = cachedData.length;\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\n                        createLoop();\n                    });\n                }, timeout * (Math.pow(4, iteration++)));\n            };\n            // with some delay (`timeout`) create cached data\n            // and repeat that (with backoff delay) until the\n            // data seems to be not changing anymore\n            createLoop();\n        };\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\n            if (!cachedDataPath) {\n                // no cached data case\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n            }\n            else {\n                // cached data case: read both files in parallel\n                var source_1 = undefined;\n                var cachedData_1 = undefined;\n                var hashData_1 = undefined;\n                var steps_1 = 2;\n                var step_1 = function (err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else if (--steps_1 === 0) {\n                        callback(undefined, source_1, cachedData_1, hashData_1);\n                    }\n                };\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\n                    source_1 = data;\n                    step_1(err);\n                });\n                this._fs.readFile(cachedDataPath, function (err, data) {\n                    if (!err && data && data.length > 0) {\n                        hashData_1 = data.slice(0, 16);\n                        cachedData_1 = data.slice(16);\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                    }\n                    else {\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                    }\n                    step_1(); // ignored: cached data is optional\n                });\n            }\n        };\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\n            var _this = this;\n            if (!hashData) {\n                // nothing to do\n                return;\n            }\n            if (script.cachedDataRejected) {\n                // invalid anyways\n                return;\n            }\n            setTimeout(function () {\n                // check source hash - the contract is that file paths change when file content\n                // change (e.g use the commit or version id as cache path). this check is\n                // for violations of this contract.\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                if (!hashData.equals(hashDataNow)) {\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\n                    _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                    });\n                }\n            }, Math.ceil(5000 * (1 + Math.random())));\n        };\n        NodeScriptLoader._BOM = 0xFEFF;\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n        NodeScriptLoader._SUFFIX = '\\n});';\n        return NodeScriptLoader;\n    }());\n    function ensureRecordedNodeRequire(recorder, _nodeRequire) {\n        if (_nodeRequire.__$__isRecorded) {\n            // it is already recorded\n            return _nodeRequire;\n        }\n        var nodeRequire = function nodeRequire(what) {\n            recorder.record(33 /* NodeBeginNativeRequire */, what);\n            try {\n                return _nodeRequire(what);\n            }\n            finally {\n                recorder.record(34 /* NodeEndNativeRequire */, what);\n            }\n        };\n        nodeRequire.__$__isRecorded = true;\n        return nodeRequire;\n    }\n    AMDLoader.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = /** @class */ (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\n        return ModuleIdResolver;\n    }());\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = /** @class */ (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.error = null;\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                var err = AMDLoader.ensureError(producedError);\n                err.phase = 'factory';\n                err.moduleId = this.strId;\n                this.error = err;\n                config.onError(err);\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            this._isComplete = true;\n            this.error = err;\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = /** @class */ (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = /** @class */ (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n        return RegularDependency;\n    }());\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = /** @class */ (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = /** @class */ (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._hasDependencyCycle = false;\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack || null;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            if (m.error) {\n                throw m.error;\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            var err = AMDLoader.ensureError(_err);\n            err.phase = 'loading';\n            err.moduleId = strModuleId;\n            err.neededBy = neededBy;\n            return err;\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            if (!this._modules2[moduleId]) {\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\n            }\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                    if (path !== null) {\n                        path.push(fromId);\n                        return path;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.hasDependencyCycle = function () {\n                return _this._hasDependencyCycle;\n            };\n            result.config = function (params, shouldOverwrite) {\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n                _this.configure(params, shouldOverwrite);\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        module.exportsPassedIn = true;\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule && dependencyModule.isComplete()) {\n                        if (dependencyModule.error) {\n                            module.onDependencyError(dependencyModule.error);\n                            return;\n                        }\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\n                        this._hasDependencyCycle = true;\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n                        cyclePath.reverse();\n                        cyclePath.push(dependency.id);\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                        // Break the cycle\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    // record inverse dependency\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                    this._inverseDependencies2[dependency.id].push(module.id);\n                    if (dependency instanceof PluginDependency) {\n                        var plugin = this._modules2[dependency.pluginId];\n                        if (plugin && plugin.isComplete()) {\n                            this._loadPluginDependency(plugin.exports, dependency);\n                            continue;\n                        }\n                        // Record dependency for when the plugin gets loaded\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                        if (!inversePluginDeps) {\n                            inversePluginDeps = [];\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                        }\n                        inversePluginDeps.push(dependency);\n                        this._loadModule(dependency.pluginId);\n                        continue;\n                    }\n                    this._loadModule(dependency.id);\n                }\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        dependenciesValues[i] = module.exports;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        dependenciesValues[i] = {\n                            id: module.strId,\n                            config: function () {\n                                return _this._config.getConfigForModule(module.strId);\n                            }\n                        };\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule) {\n                        dependenciesValues[i] = dependencyModule.exports;\n                        continue;\n                    }\n                    dependenciesValues[i] = null;\n                }\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire === 'function' && typeof _nodeRequire.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = AMDLoader.ensureRecordedNodeRequire(moduleManager.getRecorder(), _nodeRequire);\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n","\r\n\r\n/**\r\n * Returns the last element of an array.\r\n * @param array The array.\r\n * @param n Which element from the end (default is zero).\r\n */\r\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\r\n\treturn array[array.length - (1 + n)];\r\n}\r\n\r\nexport function tail2<T>(arr: T[]): [T[], T] {\r\n\tif (arr.length === 0) {\r\n\t\tthrow new Error('Invalid tail call');\r\n\t}\r\n\r\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\r\n}\r\n\r\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\r\n\tif (one === other) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (!one || !other) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (one.length !== other.length) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfor (let i = 0, len = one.length; i < len; i++) {\r\n\t\tif (!itemEquals(one[i], other[i])) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\r\n\tlet low = 0,\r\n\t\thigh = array.length - 1;\r\n\r\n\twhile (low <= high) {\r\n\t\tconst mid = ((low + high) / 2) | 0;\r\n\t\tconst comp = comparator(array[mid], key);\r\n\t\tif (comp < 0) {\r\n\t\t\tlow = mid + 1;\r\n\t\t} else if (comp > 0) {\r\n\t\t\thigh = mid - 1;\r\n\t\t} else {\r\n\t\t\treturn mid;\r\n\t\t}\r\n\t}\r\n\treturn -(low + 1);\r\n}\r\n\r\n/**\r\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\r\n * are located before all elements where p(x) is true.\r\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\r\n */\r\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\r\n\tlet low = 0, high = array.length;\r\n\tif (high === 0) {\r\n\t\treturn 0; // no children\r\n\t}\r\n\twhile (low < high) {\r\n\t\tconst mid = Math.floor((low + high) / 2);\r\n\t\tif (p(array[mid])) {\r\n\t\t\thigh = mid;\r\n\t\t} else {\r\n\t\t\tlow = mid + 1;\r\n\t\t}\r\n\t}\r\n\treturn low;\r\n}\r\n\r\ntype Compare<T> = (a: T, b: T) => number;\r\n\r\n\r\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\r\n\r\n\tnth = nth | 0;\r\n\r\n\tif (nth >= data.length) {\r\n\t\tthrow new TypeError('invalid index');\r\n\t}\r\n\r\n\tlet pivotValue = data[Math.floor(data.length * Math.random())];\r\n\tlet lower: T[] = [];\r\n\tlet higher: T[] = [];\r\n\tlet pivots: T[] = [];\r\n\r\n\tfor (let value of data) {\r\n\t\tconst val = compare(value, pivotValue);\r\n\t\tif (val < 0) {\r\n\t\t\tlower.push(value);\r\n\t\t} else if (val > 0) {\r\n\t\t\thigher.push(value);\r\n\t\t} else {\r\n\t\t\tpivots.push(value);\r\n\t\t}\r\n\t}\r\n\r\n\tif (nth < lower.length) {\r\n\t\treturn quickSelect(nth, lower, compare);\r\n\t} else if (nth < lower.length + pivots.length) {\r\n\t\treturn pivots[0];\r\n\t} else {\r\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\r\n\t}\r\n}\r\n\r\n/**\r\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\r\n * so only use this when actually needing stable sort.\r\n */\r\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\r\n\t_sort(data, compare, 0, data.length - 1, []);\r\n\treturn data;\r\n}\r\n\r\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\r\n\tlet leftIdx = lo, rightIdx = mid + 1;\r\n\tfor (let i = lo; i <= hi; i++) {\r\n\t\taux[i] = a[i];\r\n\t}\r\n\tfor (let i = lo; i <= hi; i++) {\r\n\t\tif (leftIdx > mid) {\r\n\t\t\t// left side consumed\r\n\t\t\ta[i] = aux[rightIdx++];\r\n\t\t} else if (rightIdx > hi) {\r\n\t\t\t// right side consumed\r\n\t\t\ta[i] = aux[leftIdx++];\r\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\r\n\t\t\t// right element is less -> comes first\r\n\t\t\ta[i] = aux[rightIdx++];\r\n\t\t} else {\r\n\t\t\t// left element comes first (less or equal)\r\n\t\t\ta[i] = aux[leftIdx++];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\r\n\tif (hi <= lo) {\r\n\t\treturn;\r\n\t}\r\n\tconst mid = lo + ((hi - lo) / 2) | 0;\r\n\t_sort(a, compare, lo, mid, aux);\r\n\t_sort(a, compare, mid + 1, hi, aux);\r\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\r\n\t\t// left and right are sorted and if the last-left element is less\r\n\t\t// or equals than the first-right element there is nothing else\r\n\t\t// to do\r\n\t\treturn;\r\n\t}\r\n\t_merge(a, compare, lo, mid, hi, aux);\r\n}\r\n\r\n\r\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\r\n\tconst result: T[][] = [];\r\n\tlet currentGroup: T[] | undefined = undefined;\r\n\tfor (const element of mergeSort(data.slice(0), compare)) {\r\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\r\n\t\t\tcurrentGroup = [element];\r\n\t\t\tresult.push(currentGroup);\r\n\t\t} else {\r\n\t\t\tcurrentGroup.push(element);\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * @returns New array with all falsy values removed. The original array IS NOT modified.\r\n */\r\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\r\n\treturn <T[]>array.filter(e => !!e);\r\n}\r\n\r\n/**\r\n * @returns false if the provided object is an array and not empty.\r\n */\r\nexport function isFalsyOrEmpty(obj: any): boolean {\r\n\treturn !Array.isArray(obj) || obj.length === 0;\r\n}\r\n\r\n/**\r\n * @returns True if the provided object is an array and has at least one element.\r\n */\r\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\r\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\r\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\r\n\treturn Array.isArray(obj) && obj.length > 0;\r\n}\r\n\r\n/**\r\n * Removes duplicates from the given array. The optional keyFn allows to specify\r\n * how elements are checked for equalness by returning a unique string for each.\r\n */\r\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\r\n\tif (!keyFn) {\r\n\t\treturn array.filter((element, position) => {\r\n\t\t\treturn array.indexOf(element) === position;\r\n\t\t});\r\n\t}\r\n\r\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\r\n\treturn array.filter((elem) => {\r\n\t\tconst key = keyFn(elem);\r\n\t\tif (seen[key]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tseen[key] = true;\r\n\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\r\n\tconst seen = new Set<T>();\r\n\treturn array.filter(element => {\r\n\t\tif (seen.has(element)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tseen.add(element);\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\r\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\r\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\r\n\treturn array.length > 0 ? array[0] : notFoundValue;\r\n}\r\n\r\nexport function flatten<T>(arr: T[][]): T[] {\r\n\treturn (<T[]>[]).concat(...arr);\r\n}\r\n\r\nexport function range(to: number): number[];\r\nexport function range(from: number, to: number): number[];\r\nexport function range(arg: number, to?: number): number[] {\r\n\tlet from = typeof to === 'number' ? arg : 0;\r\n\r\n\tif (typeof to === 'number') {\r\n\t\tfrom = arg;\r\n\t} else {\r\n\t\tfrom = 0;\r\n\t\tto = arg;\r\n\t}\r\n\r\n\tconst result: number[] = [];\r\n\r\n\tif (from <= to) {\r\n\t\tfor (let i = from; i < to; i++) {\r\n\t\t\tresult.push(i);\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let i = from; i > to; i--) {\r\n\t\t\tresult.push(i);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Insert `insertArr` inside `target` at `insertIndex`.\r\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\r\n */\r\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\r\n\tconst before = target.slice(0, insertIndex);\r\n\tconst after = target.slice(insertIndex);\r\n\treturn before.concat(insertArr, after);\r\n}\r\n\r\n/**\r\n * Pushes an element to the start of the array, if found.\r\n */\r\nexport function pushToStart<T>(arr: T[], value: T): void {\r\n\tconst index = arr.indexOf(value);\r\n\r\n\tif (index > -1) {\r\n\t\tarr.splice(index, 1);\r\n\t\tarr.unshift(value);\r\n\t}\r\n}\r\n\r\n/**\r\n * Pushes an element to the end of the array, if found.\r\n */\r\nexport function pushToEnd<T>(arr: T[], value: T): void {\r\n\tconst index = arr.indexOf(value);\r\n\r\n\tif (index > -1) {\r\n\t\tarr.splice(index, 1);\r\n\t\tarr.push(value);\r\n\t}\r\n}\r\n\r\nexport function asArray<T>(x: T | T[]): T[];\r\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\r\nexport function asArray<T>(x: T | T[]): T[] {\r\n\treturn Array.isArray(x) ? x : [x];\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Represents information about a specific difference between two sequences.\r\n */\r\nexport class DiffChange {\r\n\r\n\t/**\r\n\t * The position of the first element in the original sequence which\r\n\t * this change affects.\r\n\t */\r\n\tpublic originalStart: number;\r\n\r\n\t/**\r\n\t * The number of elements from the original sequence which were\r\n\t * affected.\r\n\t */\r\n\tpublic originalLength: number;\r\n\r\n\t/**\r\n\t * The position of the first element in the modified sequence which\r\n\t * this change affects.\r\n\t */\r\n\tpublic modifiedStart: number;\r\n\r\n\t/**\r\n\t * The number of elements from the modified sequence which were\r\n\t * affected (added).\r\n\t */\r\n\tpublic modifiedLength: number;\r\n\r\n\t/**\r\n\t * Constructs a new DiffChange with the given sequence information\r\n\t * and content.\r\n\t */\r\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\r\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\r\n\t\tthis.originalStart = originalStart;\r\n\t\tthis.originalLength = originalLength;\r\n\t\tthis.modifiedStart = modifiedStart;\r\n\t\tthis.modifiedLength = modifiedLength;\r\n\t}\r\n\r\n\t/**\r\n\t * The end point (exclusive) of the change in the original sequence.\r\n\t */\r\n\tpublic getOriginalEnd() {\r\n\t\treturn this.originalStart + this.originalLength;\r\n\t}\r\n\r\n\t/**\r\n\t * The end point (exclusive) of the change in the modified sequence.\r\n\t */\r\n\tpublic getModifiedEnd() {\r\n\t\treturn this.modifiedStart + this.modifiedLength;\r\n\t}\r\n}\r\n","\r\n\r\nexport interface ErrorListenerCallback {\r\n\t(error: any): void;\r\n}\r\n\r\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\r\nexport class ErrorHandler {\r\n\tprivate unexpectedErrorHandler: (e: any) => void;\r\n\tprivate listeners: ErrorListenerCallback[];\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.listeners = [];\r\n\r\n\t\tthis.unexpectedErrorHandler = function (e: any) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (e.stack) {\r\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthrow e;\r\n\t\t\t}, 0);\r\n\t\t};\r\n\t}\r\n\r\n\tprivate emit(e: any): void {\r\n\t\tthis.listeners.forEach((listener) => {\r\n\t\t\tlistener(e);\r\n\t\t});\r\n\t}\r\n\r\n\tonUnexpectedError(e: any): void {\r\n\t\tthis.unexpectedErrorHandler(e);\r\n\t\tthis.emit(e);\r\n\t}\r\n\r\n\t// For external errors, we don't want the listeners to be called\r\n\tonUnexpectedExternalError(e: any): void {\r\n\t\tthis.unexpectedErrorHandler(e);\r\n\t}\r\n}\r\n\r\nexport const errorHandler = new ErrorHandler();\r\n\r\nexport function onUnexpectedError(e: any): undefined {\r\n\t// ignore errors from cancelled promises\r\n\tif (!isPromiseCanceledError(e)) {\r\n\t\terrorHandler.onUnexpectedError(e);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\nexport function onUnexpectedExternalError(e: any): undefined {\r\n\t// ignore errors from cancelled promises\r\n\tif (!isPromiseCanceledError(e)) {\r\n\t\terrorHandler.onUnexpectedExternalError(e);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\nexport interface SerializedError {\r\n}\r\n\r\nexport function transformErrorForSerialization(error: Error): SerializedError;\r\nexport function transformErrorForSerialization(error: any): any;\r\nexport function transformErrorForSerialization(error: any): any {\r\n\tif (error instanceof Error) {\r\n\t\tlet { name, message } = error;\r\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\r\n\t\treturn {\r\n\t\t\t$isError: true,\r\n\t\t\tname,\r\n\t\t\tmessage,\r\n\t\t\tstack\r\n\t\t};\r\n\t}\r\n\r\n\t// return as is\r\n\treturn error;\r\n}\r\n\r\nconst canceledName = 'Canceled';\r\n\r\n/**\r\n * Checks if the given error is a promise in canceled state\r\n */\r\nexport function isPromiseCanceledError(error: any): boolean {\r\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\r\n}\r\n\r\n/**\r\n * Returns an error that signals cancellation.\r\n */\r\nexport function canceled(): Error {\r\n\tconst error = new Error(canceledName);\r\n\terror.name = error.message;\r\n\treturn error;\r\n}\r\n\r\nexport function illegalArgument(name?: string): Error {\r\n\tif (name) {\r\n\t\treturn new Error(`Illegal argument: ${name}`);\r\n\t} else {\r\n\t\treturn new Error('Illegal argument');\r\n\t}\r\n}\r\n\r\nexport function illegalState(name?: string): Error {\r\n\tif (name) {\r\n\t\treturn new Error(`Illegal state: ${name}`);\r\n\t} else {\r\n\t\treturn new Error('Illegal state');\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nexport namespace Iterable {\r\n\r\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\r\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\r\n\t}\r\n\r\n\tconst _empty: Iterable<any> = Object.freeze([]);\r\n\texport function empty<T = any>(): Iterable<T> {\r\n\t\treturn _empty;\r\n\t}\r\n\r\n\texport function* single<T>(element: T): Iterable<T> {\r\n\t\tyield element;\r\n\t}\r\n\r\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\r\n\t\treturn iterable || _empty;\r\n\t}\r\n\r\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\r\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\r\n\t}\r\n\r\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\r\n\t\treturn iterable[Symbol.iterator]().next().value;\r\n\t}\r\n\r\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\r\n\t\tfor (const element of iterable) {\r\n\t\t\tif (predicate(element)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\r\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\r\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\r\n\t\tfor (const element of iterable) {\r\n\t\t\tif (predicate(element)) {\r\n\t\t\t\treturn element;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\r\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\r\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\r\n\t\tfor (const element of iterable) {\r\n\t\t\tif (predicate(element)) {\r\n\t\t\t\tyield element;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\r\n\t\tfor (const element of iterable) {\r\n\t\t\tyield fn(element);\r\n\t\t}\r\n\t}\r\n\r\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\r\n\t\tfor (const iterable of iterables) {\r\n\t\t\tfor (const element of iterable) {\r\n\t\t\t\tyield element;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\r\n\t\tfor (const iterable of iterables) {\r\n\t\t\tfor (const element of iterable) {\r\n\t\t\t\tyield element;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\r\n\t\tlet value = initialValue;\r\n\t\tfor (const element of iterable) {\r\n\t\t\tvalue = reducer(value, element);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\r\n\t */\r\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\r\n\t\tif (from < 0) {\r\n\t\t\tfrom += arr.length;\r\n\t\t}\r\n\r\n\t\tif (to < 0) {\r\n\t\t\tto += arr.length;\r\n\t\t} else if (to > arr.length) {\r\n\t\t\tto = arr.length;\r\n\t\t}\r\n\r\n\t\tfor (; from < to; from++) {\r\n\t\t\tyield arr[from];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\r\n\t * and an iterable for the rest of the elements.\r\n\t */\r\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\r\n\t\tconst consumed: T[] = [];\r\n\r\n\t\tif (atMost === 0) {\r\n\t\t\treturn [consumed, iterable];\r\n\t\t}\r\n\r\n\t\tconst iterator = iterable[Symbol.iterator]();\r\n\r\n\t\tfor (let i = 0; i < atMost; i++) {\r\n\t\t\tconst next = iterator.next();\r\n\r\n\t\t\tif (next.done) {\r\n\t\t\t\treturn [consumed, Iterable.empty()];\r\n\t\t\t}\r\n\r\n\t\t\tconsumed.push(next.value);\r\n\t\t}\r\n\r\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether the iterables are the same length and all items are\r\n\t * equal using the comparator function.\r\n\t */\r\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\r\n\t\tconst ai = a[Symbol.iterator]();\r\n\t\tconst bi = b[Symbol.iterator]();\r\n\t\twhile (true) {\r\n\t\t\tconst an = ai.next();\r\n\t\t\tconst bn = bi.next();\r\n\r\n\t\t\tif (an.done !== bn.done) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (an.done) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (!comparator(an.value, bn.value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { OperatingSystem } from 'vs/base/common/platform';\r\nimport { illegalArgument } from 'vs/base/common/errors';\r\n\r\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\r\nexport const enum KeyCode {\r\n\t/**\r\n\t * Placed first to cover the 0 value of the enum.\r\n\t */\r\n\tUnknown = 0,\r\n\r\n\tBackspace = 1,\r\n\tTab = 2,\r\n\tEnter = 3,\r\n\tShift = 4,\r\n\tCtrl = 5,\r\n\tAlt = 6,\r\n\tPauseBreak = 7,\r\n\tCapsLock = 8,\r\n\tEscape = 9,\r\n\tSpace = 10,\r\n\tPageUp = 11,\r\n\tPageDown = 12,\r\n\tEnd = 13,\r\n\tHome = 14,\r\n\tLeftArrow = 15,\r\n\tUpArrow = 16,\r\n\tRightArrow = 17,\r\n\tDownArrow = 18,\r\n\tInsert = 19,\r\n\tDelete = 20,\r\n\r\n\tKEY_0 = 21,\r\n\tKEY_1 = 22,\r\n\tKEY_2 = 23,\r\n\tKEY_3 = 24,\r\n\tKEY_4 = 25,\r\n\tKEY_5 = 26,\r\n\tKEY_6 = 27,\r\n\tKEY_7 = 28,\r\n\tKEY_8 = 29,\r\n\tKEY_9 = 30,\r\n\r\n\tKEY_A = 31,\r\n\tKEY_B = 32,\r\n\tKEY_C = 33,\r\n\tKEY_D = 34,\r\n\tKEY_E = 35,\r\n\tKEY_F = 36,\r\n\tKEY_G = 37,\r\n\tKEY_H = 38,\r\n\tKEY_I = 39,\r\n\tKEY_J = 40,\r\n\tKEY_K = 41,\r\n\tKEY_L = 42,\r\n\tKEY_M = 43,\r\n\tKEY_N = 44,\r\n\tKEY_O = 45,\r\n\tKEY_P = 46,\r\n\tKEY_Q = 47,\r\n\tKEY_R = 48,\r\n\tKEY_S = 49,\r\n\tKEY_T = 50,\r\n\tKEY_U = 51,\r\n\tKEY_V = 52,\r\n\tKEY_W = 53,\r\n\tKEY_X = 54,\r\n\tKEY_Y = 55,\r\n\tKEY_Z = 56,\r\n\r\n\tMeta = 57,\r\n\tContextMenu = 58,\r\n\r\n\tF1 = 59,\r\n\tF2 = 60,\r\n\tF3 = 61,\r\n\tF4 = 62,\r\n\tF5 = 63,\r\n\tF6 = 64,\r\n\tF7 = 65,\r\n\tF8 = 66,\r\n\tF9 = 67,\r\n\tF10 = 68,\r\n\tF11 = 69,\r\n\tF12 = 70,\r\n\tF13 = 71,\r\n\tF14 = 72,\r\n\tF15 = 73,\r\n\tF16 = 74,\r\n\tF17 = 75,\r\n\tF18 = 76,\r\n\tF19 = 77,\r\n\r\n\tNumLock = 78,\r\n\tScrollLock = 79,\r\n\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the ';:' key\r\n\t */\r\n\tUS_SEMICOLON = 80,\r\n\t/**\r\n\t * For any country/region, the '+' key\r\n\t * For the US standard keyboard, the '=+' key\r\n\t */\r\n\tUS_EQUAL = 81,\r\n\t/**\r\n\t * For any country/region, the ',' key\r\n\t * For the US standard keyboard, the ',<' key\r\n\t */\r\n\tUS_COMMA = 82,\r\n\t/**\r\n\t * For any country/region, the '-' key\r\n\t * For the US standard keyboard, the '-_' key\r\n\t */\r\n\tUS_MINUS = 83,\r\n\t/**\r\n\t * For any country/region, the '.' key\r\n\t * For the US standard keyboard, the '.>' key\r\n\t */\r\n\tUS_DOT = 84,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '/?' key\r\n\t */\r\n\tUS_SLASH = 85,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '`~' key\r\n\t */\r\n\tUS_BACKTICK = 86,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '[{' key\r\n\t */\r\n\tUS_OPEN_SQUARE_BRACKET = 87,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '\\|' key\r\n\t */\r\n\tUS_BACKSLASH = 88,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the ']}' key\r\n\t */\r\n\tUS_CLOSE_SQUARE_BRACKET = 89,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the ''\"' key\r\n\t */\r\n\tUS_QUOTE = 90,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t */\r\n\tOEM_8 = 91,\r\n\t/**\r\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n\t */\r\n\tOEM_102 = 92,\r\n\r\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\r\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\r\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\r\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\r\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\r\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\r\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\r\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\r\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\r\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\r\n\r\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\r\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\r\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\r\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\r\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\r\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\r\n\r\n\t/**\r\n\t * Cover all key codes when IME is processing input.\r\n\t */\r\n\tKEY_IN_COMPOSITION = 109,\r\n\r\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\r\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\r\n\r\n\t/**\r\n\t * Placed last to cover the length of the enum.\r\n\t * Please do not depend on this value!\r\n\t */\r\n\tMAX_VALUE\r\n}\r\n\r\nclass KeyCodeStrMap {\r\n\r\n\tprivate _keyCodeToStr: string[];\r\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\r\n\r\n\tconstructor() {\r\n\t\tthis._keyCodeToStr = [];\r\n\t\tthis._strToKeyCode = Object.create(null);\r\n\t}\r\n\r\n\tdefine(keyCode: KeyCode, str: string): void {\r\n\t\tthis._keyCodeToStr[keyCode] = str;\r\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\r\n\t}\r\n\r\n\tkeyCodeToStr(keyCode: KeyCode): string {\r\n\t\treturn this._keyCodeToStr[keyCode];\r\n\t}\r\n\r\n\tstrToKeyCode(str: string): KeyCode {\r\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\r\n\t}\r\n}\r\n\r\nconst uiMap = new KeyCodeStrMap();\r\nconst userSettingsUSMap = new KeyCodeStrMap();\r\nconst userSettingsGeneralMap = new KeyCodeStrMap();\r\n\r\n(function () {\r\n\r\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\r\n\t\tuiMap.define(keyCode, uiLabel);\r\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\r\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\r\n\t}\r\n\r\n\tdefine(KeyCode.Unknown, 'unknown');\r\n\r\n\tdefine(KeyCode.Backspace, 'Backspace');\r\n\tdefine(KeyCode.Tab, 'Tab');\r\n\tdefine(KeyCode.Enter, 'Enter');\r\n\tdefine(KeyCode.Shift, 'Shift');\r\n\tdefine(KeyCode.Ctrl, 'Ctrl');\r\n\tdefine(KeyCode.Alt, 'Alt');\r\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\r\n\tdefine(KeyCode.CapsLock, 'CapsLock');\r\n\tdefine(KeyCode.Escape, 'Escape');\r\n\tdefine(KeyCode.Space, 'Space');\r\n\tdefine(KeyCode.PageUp, 'PageUp');\r\n\tdefine(KeyCode.PageDown, 'PageDown');\r\n\tdefine(KeyCode.End, 'End');\r\n\tdefine(KeyCode.Home, 'Home');\r\n\r\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\r\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\r\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\r\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\r\n\tdefine(KeyCode.Insert, 'Insert');\r\n\tdefine(KeyCode.Delete, 'Delete');\r\n\r\n\tdefine(KeyCode.KEY_0, '0');\r\n\tdefine(KeyCode.KEY_1, '1');\r\n\tdefine(KeyCode.KEY_2, '2');\r\n\tdefine(KeyCode.KEY_3, '3');\r\n\tdefine(KeyCode.KEY_4, '4');\r\n\tdefine(KeyCode.KEY_5, '5');\r\n\tdefine(KeyCode.KEY_6, '6');\r\n\tdefine(KeyCode.KEY_7, '7');\r\n\tdefine(KeyCode.KEY_8, '8');\r\n\tdefine(KeyCode.KEY_9, '9');\r\n\r\n\tdefine(KeyCode.KEY_A, 'A');\r\n\tdefine(KeyCode.KEY_B, 'B');\r\n\tdefine(KeyCode.KEY_C, 'C');\r\n\tdefine(KeyCode.KEY_D, 'D');\r\n\tdefine(KeyCode.KEY_E, 'E');\r\n\tdefine(KeyCode.KEY_F, 'F');\r\n\tdefine(KeyCode.KEY_G, 'G');\r\n\tdefine(KeyCode.KEY_H, 'H');\r\n\tdefine(KeyCode.KEY_I, 'I');\r\n\tdefine(KeyCode.KEY_J, 'J');\r\n\tdefine(KeyCode.KEY_K, 'K');\r\n\tdefine(KeyCode.KEY_L, 'L');\r\n\tdefine(KeyCode.KEY_M, 'M');\r\n\tdefine(KeyCode.KEY_N, 'N');\r\n\tdefine(KeyCode.KEY_O, 'O');\r\n\tdefine(KeyCode.KEY_P, 'P');\r\n\tdefine(KeyCode.KEY_Q, 'Q');\r\n\tdefine(KeyCode.KEY_R, 'R');\r\n\tdefine(KeyCode.KEY_S, 'S');\r\n\tdefine(KeyCode.KEY_T, 'T');\r\n\tdefine(KeyCode.KEY_U, 'U');\r\n\tdefine(KeyCode.KEY_V, 'V');\r\n\tdefine(KeyCode.KEY_W, 'W');\r\n\tdefine(KeyCode.KEY_X, 'X');\r\n\tdefine(KeyCode.KEY_Y, 'Y');\r\n\tdefine(KeyCode.KEY_Z, 'Z');\r\n\r\n\tdefine(KeyCode.Meta, 'Meta');\r\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\r\n\r\n\tdefine(KeyCode.F1, 'F1');\r\n\tdefine(KeyCode.F2, 'F2');\r\n\tdefine(KeyCode.F3, 'F3');\r\n\tdefine(KeyCode.F4, 'F4');\r\n\tdefine(KeyCode.F5, 'F5');\r\n\tdefine(KeyCode.F6, 'F6');\r\n\tdefine(KeyCode.F7, 'F7');\r\n\tdefine(KeyCode.F8, 'F8');\r\n\tdefine(KeyCode.F9, 'F9');\r\n\tdefine(KeyCode.F10, 'F10');\r\n\tdefine(KeyCode.F11, 'F11');\r\n\tdefine(KeyCode.F12, 'F12');\r\n\tdefine(KeyCode.F13, 'F13');\r\n\tdefine(KeyCode.F14, 'F14');\r\n\tdefine(KeyCode.F15, 'F15');\r\n\tdefine(KeyCode.F16, 'F16');\r\n\tdefine(KeyCode.F17, 'F17');\r\n\tdefine(KeyCode.F18, 'F18');\r\n\tdefine(KeyCode.F19, 'F19');\r\n\r\n\tdefine(KeyCode.NumLock, 'NumLock');\r\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\r\n\r\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\r\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\r\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\r\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\r\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\r\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\r\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\r\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\r\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\r\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\r\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\r\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\r\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\r\n\tdefine(KeyCode.OEM_8, 'OEM_8');\r\n\tdefine(KeyCode.OEM_102, 'OEM_102');\r\n\r\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\r\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\r\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\r\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\r\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\r\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\r\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\r\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\r\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\r\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\r\n\r\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\r\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\r\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\r\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\r\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\r\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\r\n\r\n})();\r\n\r\nexport namespace KeyCodeUtils {\r\n\texport function toString(keyCode: KeyCode): string {\r\n\t\treturn uiMap.keyCodeToStr(keyCode);\r\n\t}\r\n\texport function fromString(key: string): KeyCode {\r\n\t\treturn uiMap.strToKeyCode(key);\r\n\t}\r\n\r\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\r\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\r\n\t}\r\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\r\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\r\n\t}\r\n\texport function fromUserSettings(key: string): KeyCode {\r\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\r\n\t}\r\n}\r\n\r\n/**\r\n * Binary encoding strategy:\r\n * ```\r\n *    1111 11\r\n *    5432 1098 7654 3210\r\n *    ---- CSAW KKKK KKKK\r\n *  C = bit 11 = ctrlCmd flag\r\n *  S = bit 10 = shift flag\r\n *  A = bit 9 = alt flag\r\n *  W = bit 8 = winCtrl flag\r\n *  K = bits 0-7 = key code\r\n * ```\r\n */\r\nconst enum BinaryKeybindingsMask {\r\n\tCtrlCmd = (1 << 11) >>> 0,\r\n\tShift = (1 << 10) >>> 0,\r\n\tAlt = (1 << 9) >>> 0,\r\n\tWinCtrl = (1 << 8) >>> 0,\r\n\tKeyCode = 0x000000FF\r\n}\r\n\r\nexport const enum KeyMod {\r\n\tCtrlCmd = (1 << 11) >>> 0,\r\n\tShift = (1 << 10) >>> 0,\r\n\tAlt = (1 << 9) >>> 0,\r\n\tWinCtrl = (1 << 8) >>> 0,\r\n}\r\n\r\nexport function KeyChord(firstPart: number, secondPart: number): number {\r\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\r\n\treturn (firstPart | chordPart) >>> 0;\r\n}\r\n\r\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\r\n\tif (keybinding === 0) {\r\n\t\treturn null;\r\n\t}\r\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\r\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\r\n\tif (chordPart !== 0) {\r\n\t\treturn new ChordKeybinding([\r\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\r\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\r\n\t\t]);\r\n\t}\r\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\r\n}\r\n\r\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\r\n\r\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\r\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\r\n\r\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\r\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\r\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\r\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\r\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\r\n\r\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\r\n}\r\n\r\nexport class SimpleKeybinding {\r\n\tpublic readonly ctrlKey: boolean;\r\n\tpublic readonly shiftKey: boolean;\r\n\tpublic readonly altKey: boolean;\r\n\tpublic readonly metaKey: boolean;\r\n\tpublic readonly keyCode: KeyCode;\r\n\r\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\r\n\t\tthis.ctrlKey = ctrlKey;\r\n\t\tthis.shiftKey = shiftKey;\r\n\t\tthis.altKey = altKey;\r\n\t\tthis.metaKey = metaKey;\r\n\t\tthis.keyCode = keyCode;\r\n\t}\r\n\r\n\tpublic equals(other: SimpleKeybinding): boolean {\r\n\t\treturn (\r\n\t\t\tthis.ctrlKey === other.ctrlKey\r\n\t\t\t&& this.shiftKey === other.shiftKey\r\n\t\t\t&& this.altKey === other.altKey\r\n\t\t\t&& this.metaKey === other.metaKey\r\n\t\t\t&& this.keyCode === other.keyCode\r\n\t\t);\r\n\t}\r\n\r\n\tpublic isModifierKey(): boolean {\r\n\t\treturn (\r\n\t\t\tthis.keyCode === KeyCode.Unknown\r\n\t\t\t|| this.keyCode === KeyCode.Ctrl\r\n\t\t\t|| this.keyCode === KeyCode.Meta\r\n\t\t\t|| this.keyCode === KeyCode.Alt\r\n\t\t\t|| this.keyCode === KeyCode.Shift\r\n\t\t);\r\n\t}\r\n\r\n\tpublic toChord(): ChordKeybinding {\r\n\t\treturn new ChordKeybinding([this]);\r\n\t}\r\n\r\n\t/**\r\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n\t */\r\n\tpublic isDuplicateModifierCase(): boolean {\r\n\t\treturn (\r\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\r\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\r\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\r\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class ChordKeybinding {\r\n\tpublic readonly parts: SimpleKeybinding[];\r\n\r\n\tconstructor(parts: SimpleKeybinding[]) {\r\n\t\tif (parts.length === 0) {\r\n\t\t\tthrow illegalArgument(`parts`);\r\n\t\t}\r\n\t\tthis.parts = parts;\r\n\t}\r\n}\r\n\r\nexport type Keybinding = ChordKeybinding;\r\n\r\nexport class ResolvedKeybindingPart {\r\n\treadonly ctrlKey: boolean;\r\n\treadonly shiftKey: boolean;\r\n\treadonly altKey: boolean;\r\n\treadonly metaKey: boolean;\r\n\r\n\treadonly keyLabel: string | null;\r\n\treadonly keyAriaLabel: string | null;\r\n\r\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\r\n\t\tthis.ctrlKey = ctrlKey;\r\n\t\tthis.shiftKey = shiftKey;\r\n\t\tthis.altKey = altKey;\r\n\t\tthis.metaKey = metaKey;\r\n\t\tthis.keyLabel = kbLabel;\r\n\t\tthis.keyAriaLabel = kbAriaLabel;\r\n\t}\r\n}\r\n\r\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\r\nexport abstract class ResolvedKeybinding {\r\n\t/**\r\n\t * This prints the binding in a format suitable for displaying in the UI.\r\n\t */\r\n\tpublic abstract getLabel(): string | null;\r\n\t/**\r\n\t * This prints the binding in a format suitable for ARIA.\r\n\t */\r\n\tpublic abstract getAriaLabel(): string | null;\r\n\r\n\t/**\r\n\t * Is the binding a chord?\r\n\t */\r\n\tpublic abstract isChord(): boolean;\r\n\r\n\t/**\r\n\t * Returns the parts that comprise of the keybinding.\r\n\t * Simple keybindings return one element.\r\n\t */\r\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\r\n\r\n\t/**\r\n\t * Returns the parts that should be used for dispatching.\r\n\t * Returns null for parts consisting of only modifier keys\r\n\t * @example keybinding \"Shift\" -> null\r\n\t * @example keybinding (\"D\" with shift == true) -> \"shift+D\"\r\n\t */\r\n\tpublic abstract getDispatchParts(): (string | null)[];\r\n\r\n\t/**\r\n\t * Returns the parts that should be used for dispatching single modifier keys\r\n\t * Returns null for parts that contain more than one modifier or a regular key.\r\n\t * @example keybinding \"Shift\" -> \"shift\"\r\n\t * @example keybinding (\"D\" with shift == true\") -> null\r\n\t */\r\n\tpublic abstract getSingleModifierDispatchParts(): (string | null)[];\r\n}\r\n","\r\nimport { Iterable } from 'vs/base/common/iterator';\r\n\r\n/**\r\n * Enables logging of potentially leaked disposables.\r\n *\r\n * A disposable is considered leaked if it is not disposed or not registered as the child of\r\n * another disposable. This tracking is very simple an only works for classes that either\r\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\r\n */\r\nconst TRACK_DISPOSABLES = false;\r\nlet disposableTracker: IDisposableTracker | null = null;\r\n\r\nexport interface IDisposableTracker {\r\n\ttrackDisposable(x: IDisposable): void;\r\n\tmarkTracked(x: IDisposable): void;\r\n}\r\n\r\nif (TRACK_DISPOSABLES) {\r\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\r\n\tdisposableTracker = new class implements IDisposableTracker {\r\n\t\ttrackDisposable(x: IDisposable): void {\r\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\r\n\t\t\t\t\tconsole.log(stack);\r\n\t\t\t\t}\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\r\n\t\tmarkTracked(x: IDisposable): void {\r\n\t\t\tif (x && x !== Disposable.None) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t(x as any)[__is_disposable_tracked__] = true;\r\n\t\t\t\t} catch {\r\n\t\t\t\t\t// noop\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction markTracked<T extends IDisposable>(x: T): void {\r\n\tif (!disposableTracker) {\r\n\t\treturn;\r\n\t}\r\n\tdisposableTracker.markTracked(x);\r\n}\r\n\r\nexport function trackDisposable<T extends IDisposable>(x: T): T {\r\n\tif (!disposableTracker) {\r\n\t\treturn x;\r\n\t}\r\n\tdisposableTracker.trackDisposable(x);\r\n\treturn x;\r\n}\r\n\r\nexport class MultiDisposeError extends Error {\r\n\tconstructor(\r\n\t\tpublic readonly errors: any[]\r\n\t) {\r\n\t\tsuper(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\r\n\t}\r\n}\r\n\r\nexport interface IDisposable {\r\n\tdispose(): void;\r\n}\r\n\r\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\r\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\r\n}\r\n\r\nexport function dispose<T extends IDisposable>(disposable: T): T;\r\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\r\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\r\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\r\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\r\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\r\n\tif (Iterable.is(arg)) {\r\n\t\tlet errors: any[] = [];\r\n\r\n\t\tfor (const d of arg) {\r\n\t\t\tif (d) {\r\n\t\t\t\tmarkTracked(d);\r\n\t\t\t\ttry {\r\n\t\t\t\t\td.dispose();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\terrors.push(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (errors.length === 1) {\r\n\t\t\tthrow errors[0];\r\n\t\t} else if (errors.length > 1) {\r\n\t\t\tthrow new MultiDisposeError(errors);\r\n\t\t}\r\n\r\n\t\treturn Array.isArray(arg) ? [] : arg;\r\n\t} else if (arg) {\r\n\t\tmarkTracked(arg);\r\n\t\targ.dispose();\r\n\t\treturn arg;\r\n\t}\r\n}\r\n\r\n\r\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\r\n\tdisposables.forEach(markTracked);\r\n\treturn toDisposable(() => dispose(disposables));\r\n}\r\n\r\nexport function toDisposable(fn: () => void): IDisposable {\r\n\tconst self = trackDisposable({\r\n\t\tdispose: () => {\r\n\t\t\tmarkTracked(self);\r\n\t\t\tfn();\r\n\t\t}\r\n\t});\r\n\treturn self;\r\n}\r\n\r\nexport class DisposableStore implements IDisposable {\r\n\r\n\tstatic DISABLE_DISPOSED_WARNING = false;\r\n\r\n\tprivate _toDispose = new Set<IDisposable>();\r\n\tprivate _isDisposed = false;\r\n\r\n\t/**\r\n\t * Dispose of all registered disposables and mark this object as disposed.\r\n\t *\r\n\t * Any future disposables added to this object will be disposed of on `add`.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (this._isDisposed) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmarkTracked(this);\r\n\t\tthis._isDisposed = true;\r\n\t\tthis.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Dispose of all registered disposables but do not mark this object as disposed.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\ttry {\r\n\t\t\tdispose(this._toDispose.values());\r\n\t\t} finally {\r\n\t\t\tthis._toDispose.clear();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic add<T extends IDisposable>(t: T): T {\r\n\t\tif (!t) {\r\n\t\t\treturn t;\r\n\t\t}\r\n\t\tif ((t as unknown as DisposableStore) === this) {\r\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\r\n\t\t}\r\n\r\n\t\tmarkTracked(t);\r\n\t\tif (this._isDisposed) {\r\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\r\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._toDispose.add(t);\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\t}\r\n}\r\n\r\nexport abstract class Disposable implements IDisposable {\r\n\r\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\r\n\r\n\tprivate readonly _store = new DisposableStore();\r\n\r\n\tconstructor() {\r\n\t\ttrackDisposable(this);\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tmarkTracked(this);\r\n\r\n\t\tthis._store.dispose();\r\n\t}\r\n\r\n\tprotected _register<T extends IDisposable>(t: T): T {\r\n\t\tif ((t as unknown as Disposable) === this) {\r\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\r\n\t\t}\r\n\t\treturn this._store.add(t);\r\n\t}\r\n}\r\n\r\n/**\r\n * Manages the lifecycle of a disposable value that may be changed.\r\n *\r\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\r\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\r\n */\r\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\r\n\tprivate _value?: T;\r\n\tprivate _isDisposed = false;\r\n\r\n\tconstructor() {\r\n\t\ttrackDisposable(this);\r\n\t}\r\n\r\n\tget value(): T | undefined {\r\n\t\treturn this._isDisposed ? undefined : this._value;\r\n\t}\r\n\r\n\tset value(value: T | undefined) {\r\n\t\tif (this._isDisposed || value === this._value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._value?.dispose();\r\n\t\tif (value) {\r\n\t\t\tmarkTracked(value);\r\n\t\t}\r\n\t\tthis._value = value;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.value = undefined;\r\n\t}\r\n\r\n\tdispose(): void {\r\n\t\tthis._isDisposed = true;\r\n\t\tmarkTracked(this);\r\n\t\tthis._value?.dispose();\r\n\t\tthis._value = undefined;\r\n\t}\r\n}\r\n\r\nexport interface IReference<T> extends IDisposable {\r\n\treadonly object: T;\r\n}\r\n\r\nexport class ImmortalReference<T> implements IReference<T> {\r\n\tconstructor(public object: T) { }\r\n\tdispose(): void { /* noop */ }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nclass Node<E> {\r\n\r\n\tstatic readonly Undefined = new Node<any>(undefined);\r\n\r\n\telement: E;\r\n\tnext: Node<E>;\r\n\tprev: Node<E>;\r\n\r\n\tconstructor(element: E) {\r\n\t\tthis.element = element;\r\n\t\tthis.next = Node.Undefined;\r\n\t\tthis.prev = Node.Undefined;\r\n\t}\r\n}\r\n\r\nexport class LinkedList<E> {\r\n\r\n\tprivate _first: Node<E> = Node.Undefined;\r\n\tprivate _last: Node<E> = Node.Undefined;\r\n\tprivate _size: number = 0;\r\n\r\n\tget size(): number {\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tisEmpty(): boolean {\r\n\t\treturn this._first === Node.Undefined;\r\n\t}\r\n\r\n\tclear(): void {\r\n\t\tthis._first = Node.Undefined;\r\n\t\tthis._last = Node.Undefined;\r\n\t\tthis._size = 0;\r\n\t}\r\n\r\n\tunshift(element: E): () => void {\r\n\t\treturn this._insert(element, false);\r\n\t}\r\n\r\n\tpush(element: E): () => void {\r\n\t\treturn this._insert(element, true);\r\n\t}\r\n\r\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\r\n\t\tconst newNode = new Node(element);\r\n\t\tif (this._first === Node.Undefined) {\r\n\t\t\tthis._first = newNode;\r\n\t\t\tthis._last = newNode;\r\n\r\n\t\t} else if (atTheEnd) {\r\n\t\t\t// push\r\n\t\t\tconst oldLast = this._last!;\r\n\t\t\tthis._last = newNode;\r\n\t\t\tnewNode.prev = oldLast;\r\n\t\t\toldLast.next = newNode;\r\n\r\n\t\t} else {\r\n\t\t\t// unshift\r\n\t\t\tconst oldFirst = this._first;\r\n\t\t\tthis._first = newNode;\r\n\t\t\tnewNode.next = oldFirst;\r\n\t\t\toldFirst.prev = newNode;\r\n\t\t}\r\n\t\tthis._size += 1;\r\n\r\n\t\tlet didRemove = false;\r\n\t\treturn () => {\r\n\t\t\tif (!didRemove) {\r\n\t\t\t\tdidRemove = true;\r\n\t\t\t\tthis._remove(newNode);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tshift(): E | undefined {\r\n\t\tif (this._first === Node.Undefined) {\r\n\t\t\treturn undefined;\r\n\t\t} else {\r\n\t\t\tconst res = this._first.element;\r\n\t\t\tthis._remove(this._first);\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n\r\n\tpop(): E | undefined {\r\n\t\tif (this._last === Node.Undefined) {\r\n\t\t\treturn undefined;\r\n\t\t} else {\r\n\t\t\tconst res = this._last.element;\r\n\t\t\tthis._remove(this._last);\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _remove(node: Node<E>): void {\r\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\r\n\t\t\t// middle\r\n\t\t\tconst anchor = node.prev;\r\n\t\t\tanchor.next = node.next;\r\n\t\t\tnode.next.prev = anchor;\r\n\r\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\r\n\t\t\t// only node\r\n\t\t\tthis._first = Node.Undefined;\r\n\t\t\tthis._last = Node.Undefined;\r\n\r\n\t\t} else if (node.next === Node.Undefined) {\r\n\t\t\t// last\r\n\t\t\tthis._last = this._last!.prev!;\r\n\t\t\tthis._last.next = Node.Undefined;\r\n\r\n\t\t} else if (node.prev === Node.Undefined) {\r\n\t\t\t// first\r\n\t\t\tthis._first = this._first!.next!;\r\n\t\t\tthis._first.prev = Node.Undefined;\r\n\t\t}\r\n\r\n\t\t// done\r\n\t\tthis._size -= 1;\r\n\t}\r\n\r\n\t*[Symbol.iterator](): Iterator<E> {\r\n\t\tlet node = this._first;\r\n\t\twhile (node !== Node.Undefined) {\r\n\t\t\tyield node.element;\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nconst LANGUAGE_DEFAULT = 'en';\r\n\r\nlet _isWindows = false;\r\nlet _isMacintosh = false;\r\nlet _isLinux = false;\r\nlet _isLinuxSnap = false;\r\nlet _isNative = false;\r\nlet _isWeb = false;\r\nlet _isIOS = false;\r\nlet _locale: string | undefined = undefined;\r\nlet _language: string = LANGUAGE_DEFAULT;\r\nlet _translationsConfigFile: string | undefined = undefined;\r\nlet _userAgent: string | undefined = undefined;\r\n\r\ninterface NLSConfig {\r\n\tlocale: string;\r\n\tavailableLanguages: { [key: string]: string; };\r\n\t_translationsConfigFile: string;\r\n}\r\n\r\nexport interface IProcessEnvironment {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface INodeProcess {\r\n\tplatform: 'win32' | 'linux' | 'darwin';\r\n\tenv: IProcessEnvironment;\r\n\tnextTick: Function;\r\n\tversions?: {\r\n\t\telectron?: string;\r\n\t};\r\n\tsandboxed?: boolean; // Electron\r\n\ttype?: string;\r\n\tcwd(): string;\r\n}\r\ndeclare const process: INodeProcess;\r\ndeclare const global: any;\r\n\r\ninterface INavigator {\r\n\tuserAgent: string;\r\n\tlanguage: string;\r\n\tmaxTouchPoints?: number;\r\n}\r\ndeclare const navigator: INavigator;\r\ndeclare const self: any;\r\n\r\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\r\n\r\nlet nodeProcess: INodeProcess | undefined = undefined;\r\nif (typeof process !== 'undefined') {\r\n\t// Native environment (non-sandboxed)\r\n\tnodeProcess = process;\r\n} else if (typeof _globals.vscode !== 'undefined') {\r\n\t// Native environment (sandboxed)\r\n\tnodeProcess = _globals.vscode.process;\r\n}\r\n\r\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\r\nexport const isElectronSandboxed = isElectronRenderer && nodeProcess?.sandboxed;\r\nexport const browserCodeLoadingCacheStrategy: 'none' | 'code' | 'bypassHeatCheck' | 'bypassHeatCheckAndEagerCompile' | undefined = (() => {\r\n\r\n\t// Always enabled when sandbox is enabled\r\n\tif (isElectronSandboxed) {\r\n\t\treturn 'bypassHeatCheck';\r\n\t}\r\n\r\n\t// Otherwise, only enabled conditionally\r\n\tconst env = nodeProcess?.env['ENABLE_VSCODE_BROWSER_CODE_LOADING'];\r\n\tif (typeof env === 'string') {\r\n\t\tif (env === 'none' || env === 'code' || env === 'bypassHeatCheck' || env === 'bypassHeatCheckAndEagerCompile') {\r\n\t\t\treturn env;\r\n\t\t}\r\n\r\n\t\treturn 'bypassHeatCheck';\r\n\t}\r\n\r\n\treturn undefined;\r\n})();\r\nexport const isPreferringBrowserCodeLoad = typeof browserCodeLoadingCacheStrategy === 'string';\r\n\r\n// Web environment\r\nif (typeof navigator === 'object' && !isElectronRenderer) {\r\n\t_userAgent = navigator.userAgent;\r\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\r\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\r\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\r\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\r\n\t_isWeb = true;\r\n\t_locale = navigator.language;\r\n\t_language = _locale;\r\n}\r\n\r\n// Native environment\r\nelse if (typeof nodeProcess === 'object') {\r\n\t_isWindows = (nodeProcess.platform === 'win32');\r\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\r\n\t_isLinux = (nodeProcess.platform === 'linux');\r\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\r\n\t_locale = LANGUAGE_DEFAULT;\r\n\t_language = LANGUAGE_DEFAULT;\r\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\r\n\tif (rawNlsConfig) {\r\n\t\ttry {\r\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\r\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\r\n\t\t\t_locale = nlsConfig.locale;\r\n\t\t\t// VSCode's default language is 'en'\r\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\r\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\r\n\t\t} catch (e) {\r\n\t\t}\r\n\t}\r\n\t_isNative = true;\r\n}\r\n\r\n// Unknown environment\r\nelse {\r\n\tconsole.error('Unable to resolve platform.');\r\n}\r\n\r\nexport const enum Platform {\r\n\tWeb,\r\n\tMac,\r\n\tLinux,\r\n\tWindows\r\n}\r\n\r\nlet _platform: Platform = Platform.Web;\r\nif (_isMacintosh) {\r\n\t_platform = Platform.Mac;\r\n} else if (_isWindows) {\r\n\t_platform = Platform.Windows;\r\n} else if (_isLinux) {\r\n\t_platform = Platform.Linux;\r\n}\r\n\r\nexport const isWindows = _isWindows;\r\nexport const isMacintosh = _isMacintosh;\r\nexport const isLinux = _isLinux;\r\nexport const isNative = _isNative;\r\nexport const isWeb = _isWeb;\r\nexport const isIOS = _isIOS;\r\nexport const userAgent = _userAgent;\r\n\r\nexport const globals: any = _globals;\r\n\r\ninterface ISetImmediate {\r\n\t(callback: (...args: any[]) => void): void;\r\n}\r\n\r\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\r\n\tif (globals.setImmediate) {\r\n\t\treturn globals.setImmediate.bind(globals);\r\n\t}\r\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\r\n\t\tinterface IQueueElement {\r\n\t\t\tid: number;\r\n\t\t\tcallback: () => void;\r\n\t\t}\r\n\t\tlet pending: IQueueElement[] = [];\r\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\r\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\r\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\r\n\t\t\t\t\tconst candidate = pending[i];\r\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\r\n\t\t\t\t\t\tpending.splice(i, 1);\r\n\t\t\t\t\t\tcandidate.callback();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet lastId = 0;\r\n\t\treturn (callback: () => void) => {\r\n\t\t\tconst myId = ++lastId;\r\n\t\t\tpending.push({\r\n\t\t\t\tid: myId,\r\n\t\t\t\tcallback: callback\r\n\t\t\t});\r\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\r\n\t\t};\r\n\t}\r\n\tif (nodeProcess && typeof nodeProcess.nextTick === 'function') {\r\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\r\n\t}\r\n\tconst _promise = Promise.resolve();\r\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\r\n})();\r\n\r\nexport const enum OperatingSystem {\r\n\tWindows = 1,\r\n\tMacintosh = 2,\r\n\tLinux = 3\r\n}\r\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\r\n\r\nlet _isLittleEndian = true;\r\nlet _isLittleEndianComputed = false;\r\nexport function isLittleEndian(): boolean {\r\n\tif (!_isLittleEndianComputed) {\r\n\t\t_isLittleEndianComputed = true;\r\n\t\tconst test = new Uint8Array(2);\r\n\t\ttest[0] = 1;\r\n\t\ttest[1] = 2;\r\n\t\tconst view = new Uint16Array(test.buffer);\r\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\r\n\t}\r\n\treturn _isLittleEndian;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\r\n\r\ndeclare const process: INodeProcess;\r\n\r\nlet safeProcess: INodeProcess;\r\n\r\n// Native node.js environment\r\nif (typeof process !== 'undefined') {\r\n\tsafeProcess = process;\r\n}\r\n\r\n// Native sandbox environment\r\nelse if (typeof globals.vscode !== 'undefined') {\r\n\tsafeProcess = {\r\n\r\n\t\t// Supported\r\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return globals.vscode.process.platform; },\r\n\t\tget env() { return globals.vscode.process.env; },\r\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\r\n\r\n\t\t// Unsupported\r\n\t\tcwd(): string { return globals.vscode.process.env['VSCODE_CWD'] || globals.vscode.process.execPath.substr(0, globals.vscode.process.execPath.lastIndexOf(globals.vscode.process.platform === 'win32' ? '\\\\' : '/')); }\r\n\t};\r\n}\r\n\r\n// Web environment\r\nelse {\r\n\tsafeProcess = {\r\n\r\n\t\t// Supported\r\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\r\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\r\n\r\n\t\t// Unsupported\r\n\t\tget env() { return Object.create(null); },\r\n\t\tcwd(): string { return '/'; }\r\n\t};\r\n}\r\n\r\nexport const cwd = safeProcess.cwd;\r\nexport const env = safeProcess.env;\r\nexport const platform = safeProcess.platform;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\r\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\r\n\r\n/**\r\n * Copyright Joyent, Inc. and other Node contributors.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to permit\r\n * persons to whom the Software is furnished to do so, subject to the\r\n * following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included\r\n * in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as process from 'vs/base/common/process';\r\n\r\nconst CHAR_UPPERCASE_A = 65;/* A */\r\nconst CHAR_LOWERCASE_A = 97; /* a */\r\nconst CHAR_UPPERCASE_Z = 90; /* Z */\r\nconst CHAR_LOWERCASE_Z = 122; /* z */\r\nconst CHAR_DOT = 46; /* . */\r\nconst CHAR_FORWARD_SLASH = 47; /* / */\r\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\r\nconst CHAR_COLON = 58; /* : */\r\nconst CHAR_QUESTION_MARK = 63; /* ? */\r\n\r\nclass ErrorInvalidArgType extends Error {\r\n\tcode: 'ERR_INVALID_ARG_TYPE';\r\n\tconstructor(name: string, expected: string, actual: unknown) {\r\n\t\t// determiner: 'must be' or 'must not be'\r\n\t\tlet determiner;\r\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\r\n\t\t\tdeterminer = 'must not be';\r\n\t\t\texpected = expected.replace(/^not /, '');\r\n\t\t} else {\r\n\t\t\tdeterminer = 'must be';\r\n\t\t}\r\n\r\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\r\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\r\n\r\n\t\tmsg += `. Received type ${typeof actual}`;\r\n\t\tsuper(msg);\r\n\r\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\r\n\t}\r\n}\r\n\r\nfunction validateString(value: string, name: string) {\r\n\tif (typeof value !== 'string') {\r\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\r\n\t}\r\n}\r\n\r\nfunction isPathSeparator(code: number | undefined) {\r\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\r\n}\r\n\r\nfunction isPosixPathSeparator(code: number | undefined) {\r\n\treturn code === CHAR_FORWARD_SLASH;\r\n}\r\n\r\nfunction isWindowsDeviceRoot(code: number) {\r\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\r\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\r\n}\r\n\r\n// Resolves . and .. elements in a path with directory names\r\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\r\n\tlet res = '';\r\n\tlet lastSegmentLength = 0;\r\n\tlet lastSlash = -1;\r\n\tlet dots = 0;\r\n\tlet code = 0;\r\n\tfor (let i = 0; i <= path.length; ++i) {\r\n\t\tif (i < path.length) {\r\n\t\t\tcode = path.charCodeAt(i);\r\n\t\t}\r\n\t\telse if (isPathSeparator(code)) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcode = CHAR_FORWARD_SLASH;\r\n\t\t}\r\n\r\n\t\tif (isPathSeparator(code)) {\r\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\r\n\t\t\t\t// NOOP\r\n\t\t\t} else if (dots === 2) {\r\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\r\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\r\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\r\n\t\t\t\t\tif (res.length > 2) {\r\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\r\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\r\n\t\t\t\t\t\t\tres = '';\r\n\t\t\t\t\t\t\tlastSegmentLength = 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\r\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastSlash = i;\r\n\t\t\t\t\t\tdots = 0;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (res.length !== 0) {\r\n\t\t\t\t\t\tres = '';\r\n\t\t\t\t\t\tlastSegmentLength = 0;\r\n\t\t\t\t\t\tlastSlash = i;\r\n\t\t\t\t\t\tdots = 0;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (allowAboveRoot) {\r\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\r\n\t\t\t\t\tlastSegmentLength = 2;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (res.length > 0) {\r\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\r\n\t\t\t\t}\r\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\r\n\t\t\t}\r\n\t\t\tlastSlash = i;\r\n\t\t\tdots = 0;\r\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\r\n\t\t\t++dots;\r\n\t\t} else {\r\n\t\t\tdots = -1;\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nfunction _format(sep: string, pathObject: ParsedPath) {\r\n\tif (pathObject === null || typeof pathObject !== 'object') {\r\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\r\n\t}\r\n\tconst dir = pathObject.dir || pathObject.root;\r\n\tconst base = pathObject.base ||\r\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\r\n\tif (!dir) {\r\n\t\treturn base;\r\n\t}\r\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\r\n}\r\n\r\nexport interface ParsedPath {\r\n\troot: string;\r\n\tdir: string;\r\n\tbase: string;\r\n\text: string;\r\n\tname: string;\r\n}\r\n\r\nexport interface IPath {\r\n\tnormalize(path: string): string;\r\n\tisAbsolute(path: string): boolean;\r\n\tjoin(...paths: string[]): string;\r\n\tresolve(...pathSegments: string[]): string;\r\n\trelative(from: string, to: string): string;\r\n\tdirname(path: string): string;\r\n\tbasename(path: string, ext?: string): string;\r\n\textname(path: string): string;\r\n\tformat(pathObject: ParsedPath): string;\r\n\tparse(path: string): ParsedPath;\r\n\ttoNamespacedPath(path: string): string;\r\n\tsep: '\\\\' | '/';\r\n\tdelimiter: string;\r\n\twin32: IPath | null;\r\n\tposix: IPath | null;\r\n}\r\n\r\nexport const win32: IPath = {\r\n\t// path.resolve([from ...], to)\r\n\tresolve(...pathSegments: string[]): string {\r\n\t\tlet resolvedDevice = '';\r\n\t\tlet resolvedTail = '';\r\n\t\tlet resolvedAbsolute = false;\r\n\r\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\r\n\t\t\tlet path;\r\n\t\t\tif (i >= 0) {\r\n\t\t\t\tpath = pathSegments[i];\r\n\t\t\t\tvalidateString(path, 'path');\r\n\r\n\t\t\t\t// Skip empty entries\r\n\t\t\t\tif (path.length === 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t} else if (resolvedDevice.length === 0) {\r\n\t\t\t\tpath = process.cwd();\r\n\t\t\t} else {\r\n\t\t\t\t// Windows has the concept of drive-specific current working\r\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\r\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\r\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\r\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\r\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\r\n\r\n\t\t\t\t// Verify that a cwd was found and that it actually points\r\n\t\t\t\t// to our drive. If not, default to the drive's root.\r\n\t\t\t\tif (path === undefined ||\r\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\r\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst len = path.length;\r\n\t\t\tlet rootEnd = 0;\r\n\t\t\tlet device = '';\r\n\t\t\tlet isAbsolute = false;\r\n\t\t\tconst code = path.charCodeAt(0);\r\n\r\n\t\t\t// Try to match a root\r\n\t\t\tif (len === 1) {\r\n\t\t\t\tif (isPathSeparator(code)) {\r\n\t\t\t\t\t// `path` contains just a path separator\r\n\t\t\t\t\trootEnd = 1;\r\n\t\t\t\t\tisAbsolute = true;\r\n\t\t\t\t}\r\n\t\t\t} else if (isPathSeparator(code)) {\r\n\t\t\t\t// Possible UNC root\r\n\r\n\t\t\t\t// If we started with a separator, we know we at least have an\r\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\r\n\t\t\t\tisAbsolute = true;\r\n\r\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\r\n\t\t\t\t\t// Matched double path separator at beginning\r\n\t\t\t\t\tlet j = 2;\r\n\t\t\t\t\tlet last = j;\r\n\t\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\r\n\t\t\t\t\t\t// Matched!\r\n\t\t\t\t\t\tlast = j;\r\n\t\t\t\t\t\t// Match 1 or more path separators\r\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\t\tj++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\t\t\t// Matched!\r\n\t\t\t\t\t\t\tlast = j;\r\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\t\t\tj++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (j === len || j !== last) {\r\n\t\t\t\t\t\t\t\t// We matched a UNC root\r\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\r\n\t\t\t\t\t\t\t\trootEnd = j;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\trootEnd = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\r\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\r\n\t\t\t\t// Possible device root\r\n\t\t\t\tdevice = path.slice(0, 2);\r\n\t\t\t\trootEnd = 2;\r\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\r\n\t\t\t\t\t// Treat separator following drive name as an absolute path\r\n\t\t\t\t\t// indicator\r\n\t\t\t\t\tisAbsolute = true;\r\n\t\t\t\t\trootEnd = 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (device.length > 0) {\r\n\t\t\t\tif (resolvedDevice.length > 0) {\r\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\r\n\t\t\t\t\t\t// This path points to another device so it is not applicable\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolvedDevice = device;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (resolvedAbsolute) {\r\n\t\t\t\tif (resolvedDevice.length > 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\r\n\t\t\t\tresolvedAbsolute = isAbsolute;\r\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// At this point the path should be resolved to a full absolute path,\r\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\r\n\t\t// fails)\r\n\r\n\t\t// Normalize the tail path\r\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\r\n\t\t\tisPathSeparator);\r\n\r\n\t\treturn resolvedAbsolute ?\r\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\r\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\r\n\t},\r\n\r\n\tnormalize(path: string): string {\r\n\t\tvalidateString(path, 'path');\r\n\t\tconst len = path.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\t\tlet rootEnd = 0;\r\n\t\tlet device;\r\n\t\tlet isAbsolute = false;\r\n\t\tconst code = path.charCodeAt(0);\r\n\r\n\t\t// Try to match a root\r\n\t\tif (len === 1) {\r\n\t\t\t// `path` contains just a single char, exit early to avoid\r\n\t\t\t// unnecessary work\r\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\r\n\t\t}\r\n\t\tif (isPathSeparator(code)) {\r\n\t\t\t// Possible UNC root\r\n\r\n\t\t\t// If we started with a separator, we know we at least have an absolute\r\n\t\t\t// path of some kind (UNC or otherwise)\r\n\t\t\tisAbsolute = true;\r\n\r\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\r\n\t\t\t\t// Matched double path separator at beginning\r\n\t\t\t\tlet j = 2;\r\n\t\t\t\tlet last = j;\r\n\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\tconst firstPart = path.slice(last, j);\r\n\t\t\t\t\t// Matched!\r\n\t\t\t\t\tlast = j;\r\n\t\t\t\t\t// Match 1 or more path separators\r\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\t\t// Matched!\r\n\t\t\t\t\t\tlast = j;\r\n\t\t\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\t\tj++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j === len) {\r\n\t\t\t\t\t\t\t// We matched a UNC root only\r\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\r\n\t\t\t\t\t\t\t// is nothing left to process\r\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j !== last) {\r\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\r\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\r\n\t\t\t\t\t\t\trootEnd = j;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trootEnd = 1;\r\n\t\t\t}\r\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\r\n\t\t\t// Possible device root\r\n\t\t\tdevice = path.slice(0, 2);\r\n\t\t\trootEnd = 2;\r\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\r\n\t\t\t\t// Treat separator following drive name as an absolute path\r\n\t\t\t\t// indicator\r\n\t\t\t\tisAbsolute = true;\r\n\t\t\t\trootEnd = 3;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet tail = rootEnd < len ?\r\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\r\n\t\t\t'';\r\n\t\tif (tail.length === 0 && !isAbsolute) {\r\n\t\t\ttail = '.';\r\n\t\t}\r\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\r\n\t\t\ttail += '\\\\';\r\n\t\t}\r\n\t\tif (device === undefined) {\r\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\r\n\t\t}\r\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\r\n\t},\r\n\r\n\tisAbsolute(path: string): boolean {\r\n\t\tvalidateString(path, 'path');\r\n\t\tconst len = path.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst code = path.charCodeAt(0);\r\n\t\treturn isPathSeparator(code) ||\r\n\t\t\t// Possible device root\r\n\t\t\tlen > 2 &&\r\n\t\t\tisWindowsDeviceRoot(code) &&\r\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\r\n\t\t\tisPathSeparator(path.charCodeAt(2));\r\n\t},\r\n\r\n\tjoin(...paths: string[]): string {\r\n\t\tif (paths.length === 0) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\r\n\t\tlet joined;\r\n\t\tlet firstPart: string | undefined;\r\n\t\tfor (let i = 0; i < paths.length; ++i) {\r\n\t\t\tconst arg = paths[i];\r\n\t\t\tvalidateString(arg, 'path');\r\n\t\t\tif (arg.length > 0) {\r\n\t\t\t\tif (joined === undefined) {\r\n\t\t\t\t\tjoined = firstPart = arg;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tjoined += `\\\\${arg}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (joined === undefined) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\r\n\t\t// Make sure that the joined path doesn't start with two slashes, because\r\n\t\t// normalize() will mistake it for an UNC path then.\r\n\t\t//\r\n\t\t// This step is skipped when it is very clear that the user actually\r\n\t\t// intended to point at an UNC path. This is assumed when the first\r\n\t\t// non-empty string arguments starts with exactly two slashes followed by\r\n\t\t// at least one more non-slash character.\r\n\t\t//\r\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\r\n\t\t// have at least 2 components, so we don't filter for that here.\r\n\t\t// This means that the user can use join to construct UNC paths from\r\n\t\t// a server name and a share name; for example:\r\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\r\n\t\tlet needsReplace = true;\r\n\t\tlet slashCount = 0;\r\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\r\n\t\t\t++slashCount;\r\n\t\t\tconst firstLen = firstPart.length;\r\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\r\n\t\t\t\t++slashCount;\r\n\t\t\t\tif (firstLen > 2) {\r\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\r\n\t\t\t\t\t\t++slashCount;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We matched a UNC path in the first part\r\n\t\t\t\t\t\tneedsReplace = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (needsReplace) {\r\n\t\t\t// Find any more consecutive slashes we need to replace\r\n\t\t\twhile (slashCount < joined.length &&\r\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\r\n\t\t\t\tslashCount++;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace the slashes if needed\r\n\t\t\tif (slashCount >= 2) {\r\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn win32.normalize(joined);\r\n\t},\r\n\r\n\r\n\t// It will solve the relative path from `from` to `to`, for instance:\r\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\r\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\r\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\r\n\trelative(from: string, to: string): string {\r\n\t\tvalidateString(from, 'from');\r\n\t\tvalidateString(to, 'to');\r\n\r\n\t\tif (from === to) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tconst fromOrig = win32.resolve(from);\r\n\t\tconst toOrig = win32.resolve(to);\r\n\r\n\t\tif (fromOrig === toOrig) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tfrom = fromOrig.toLowerCase();\r\n\t\tto = toOrig.toLowerCase();\r\n\r\n\t\tif (from === to) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\t// Trim any leading backslashes\r\n\t\tlet fromStart = 0;\r\n\t\twhile (fromStart < from.length &&\r\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\r\n\t\t\tfromStart++;\r\n\t\t}\r\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\r\n\t\tlet fromEnd = from.length;\r\n\t\twhile (fromEnd - 1 > fromStart &&\r\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\r\n\t\t\tfromEnd--;\r\n\t\t}\r\n\t\tconst fromLen = fromEnd - fromStart;\r\n\r\n\t\t// Trim any leading backslashes\r\n\t\tlet toStart = 0;\r\n\t\twhile (toStart < to.length &&\r\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\r\n\t\t\ttoStart++;\r\n\t\t}\r\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\r\n\t\tlet toEnd = to.length;\r\n\t\twhile (toEnd - 1 > toStart &&\r\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\r\n\t\t\ttoEnd--;\r\n\t\t}\r\n\t\tconst toLen = toEnd - toStart;\r\n\r\n\t\t// Compare paths to find the longest common path from root\r\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\r\n\t\tlet lastCommonSep = -1;\r\n\t\tlet i = 0;\r\n\t\tfor (; i < length; i++) {\r\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\r\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\r\n\t\t\t\tlastCommonSep = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// We found a mismatch before the first common path separator was seen, so\r\n\t\t// return the original `to`.\r\n\t\tif (i !== length) {\r\n\t\t\tif (lastCommonSep === -1) {\r\n\t\t\t\treturn toOrig;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (toLen > length) {\r\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\r\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\r\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (i === 2) {\r\n\t\t\t\t\t// We get here if `from` is the device root.\r\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\r\n\t\t\t\t\treturn toOrig.slice(toStart + i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (fromLen > length) {\r\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\r\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\r\n\t\t\t\t\tlastCommonSep = i;\r\n\t\t\t\t} else if (i === 2) {\r\n\t\t\t\t\t// We get here if `to` is the device root.\r\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\r\n\t\t\t\t\tlastCommonSep = 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (lastCommonSep === -1) {\r\n\t\t\t\tlastCommonSep = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet out = '';\r\n\t\t// Generate the relative path based on the path difference between `to` and\r\n\t\t// `from`\r\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\r\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoStart += lastCommonSep;\r\n\r\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\r\n\t\t// the common path parts\r\n\t\tif (out.length > 0) {\r\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\r\n\t\t}\r\n\r\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t++toStart;\r\n\t\t}\r\n\r\n\t\treturn toOrig.slice(toStart, toEnd);\r\n\t},\r\n\r\n\ttoNamespacedPath(path: string): string {\r\n\t\t// Note: this will *probably* throw somewhere.\r\n\t\tif (typeof path !== 'string') {\r\n\t\t\treturn path;\r\n\t\t}\r\n\r\n\t\tif (path.length === 0) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tconst resolvedPath = win32.resolve(path);\r\n\r\n\t\tif (resolvedPath.length <= 2) {\r\n\t\t\treturn path;\r\n\t\t}\r\n\r\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t// Possible UNC root\r\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\r\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\r\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\r\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\r\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\r\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\r\n\t\t\t// Matched device root, convert the path to a long UNC path\r\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t},\r\n\r\n\tdirname(path: string): string {\r\n\t\tvalidateString(path, 'path');\r\n\t\tconst len = path.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\t\tlet rootEnd = -1;\r\n\t\tlet offset = 0;\r\n\t\tconst code = path.charCodeAt(0);\r\n\r\n\t\tif (len === 1) {\r\n\t\t\t// `path` contains just a path separator, exit early to avoid\r\n\t\t\t// unnecessary work or a dot.\r\n\t\t\treturn isPathSeparator(code) ? path : '.';\r\n\t\t}\r\n\r\n\t\t// Try to match a root\r\n\t\tif (isPathSeparator(code)) {\r\n\t\t\t// Possible UNC root\r\n\r\n\t\t\trootEnd = offset = 1;\r\n\r\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\r\n\t\t\t\t// Matched double path separator at beginning\r\n\t\t\t\tlet j = 2;\r\n\t\t\t\tlet last = j;\r\n\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\t// Matched!\r\n\t\t\t\t\tlast = j;\r\n\t\t\t\t\t// Match 1 or more path separators\r\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\t\t// Matched!\r\n\t\t\t\t\t\tlast = j;\r\n\t\t\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\t\tj++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j === len) {\r\n\t\t\t\t\t\t\t// We matched a UNC root only\r\n\t\t\t\t\t\t\treturn path;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j !== last) {\r\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\r\n\r\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\r\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\r\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Possible device root\r\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\r\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\r\n\t\t\toffset = rootEnd;\r\n\t\t}\r\n\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\tfor (let i = len - 1; i >= offset; --i) {\r\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tend = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// We saw the first non-path separator\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (end === -1) {\r\n\t\t\tif (rootEnd === -1) {\r\n\t\t\t\treturn '.';\r\n\t\t\t}\r\n\r\n\t\t\tend = rootEnd;\r\n\t\t}\r\n\t\treturn path.slice(0, end);\r\n\t},\r\n\r\n\tbasename(path: string, ext?: string): string {\r\n\t\tif (ext !== undefined) {\r\n\t\t\tvalidateString(ext, 'ext');\r\n\t\t}\r\n\t\tvalidateString(path, 'path');\r\n\t\tlet start = 0;\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\tlet i;\r\n\r\n\t\t// Check for a drive letter prefix so as not to mistake the following\r\n\t\t// path separator as an extra separator at the end of the path that can be\r\n\t\t// disregarded\r\n\t\tif (path.length >= 2 &&\r\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\r\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\r\n\t\t\tstart = 2;\r\n\t\t}\r\n\r\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\r\n\t\t\tif (ext === path) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\tlet extIdx = ext.length - 1;\r\n\t\t\tlet firstNonSlashEnd = -1;\r\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\r\n\t\t\t\tconst code = path.charCodeAt(i);\r\n\t\t\t\tif (isPathSeparator(code)) {\r\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\t\tstart = i + 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\r\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\r\n\t\t\t\t\t\t// we need it if the extension ends up not matching\r\n\t\t\t\t\t\tmatchedSlash = false;\r\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (extIdx >= 0) {\r\n\t\t\t\t\t\t// Try to match the explicit extension\r\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\r\n\t\t\t\t\t\t\tif (--extIdx === -1) {\r\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\r\n\t\t\t\t\t\t\t\t// component\r\n\t\t\t\t\t\t\t\tend = i;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\r\n\t\t\t\t\t\t\t// component\r\n\t\t\t\t\t\t\textIdx = -1;\r\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (start === end) {\r\n\t\t\t\tend = firstNonSlashEnd;\r\n\t\t\t} else if (end === -1) {\r\n\t\t\t\tend = path.length;\r\n\t\t\t}\r\n\t\t\treturn path.slice(start, end);\r\n\t\t}\r\n\t\tfor (i = path.length - 1; i >= start; --i) {\r\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\r\n\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tstart = i + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (end === -1) {\r\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\r\n\t\t\t\t// path component\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t\tend = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (end === -1) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn path.slice(start, end);\r\n\t},\r\n\r\n\textname(path: string): string {\r\n\t\tvalidateString(path, 'path');\r\n\t\tlet start = 0;\r\n\t\tlet startDot = -1;\r\n\t\tlet startPart = 0;\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\t// Track the state of characters (if any) we see before our first dot and\r\n\t\t// after any path separator we find\r\n\t\tlet preDotState = 0;\r\n\r\n\t\t// Check for a drive letter prefix so as not to mistake the following\r\n\t\t// path separator as an extra separator at the end of the path that can be\r\n\t\t// disregarded\r\n\r\n\t\tif (path.length >= 2 &&\r\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\r\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\r\n\t\t\tstart = startPart = 2;\r\n\t\t}\r\n\r\n\t\tfor (let i = path.length - 1; i >= start; --i) {\r\n\t\t\tconst code = path.charCodeAt(i);\r\n\t\t\tif (isPathSeparator(code)) {\r\n\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tstartPart = i + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (end === -1) {\r\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\r\n\t\t\t\t// extension\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t\tend = i + 1;\r\n\t\t\t}\r\n\t\t\tif (code === CHAR_DOT) {\r\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\r\n\t\t\t\tif (startDot === -1) {\r\n\t\t\t\t\tstartDot = i;\r\n\t\t\t\t}\r\n\t\t\t\telse if (preDotState !== 1) {\r\n\t\t\t\t\tpreDotState = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (startDot !== -1) {\r\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\r\n\t\t\t\t// have a good chance at having a non-empty extension\r\n\t\t\t\tpreDotState = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (startDot === -1 ||\r\n\t\t\tend === -1 ||\r\n\t\t\t// We saw a non-dot character immediately before the dot\r\n\t\t\tpreDotState === 0 ||\r\n\t\t\t// The (right-most) trimmed path component is exactly '..'\r\n\t\t\t(preDotState === 1 &&\r\n\t\t\t\tstartDot === end - 1 &&\r\n\t\t\t\tstartDot === startPart + 1)) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn path.slice(startDot, end);\r\n\t},\r\n\r\n\tformat: _format.bind(null, '\\\\'),\r\n\r\n\tparse(path) {\r\n\t\tvalidateString(path, 'path');\r\n\r\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n\t\tif (path.length === 0) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tconst len = path.length;\r\n\t\tlet rootEnd = 0;\r\n\t\tlet code = path.charCodeAt(0);\r\n\r\n\t\tif (len === 1) {\r\n\t\t\tif (isPathSeparator(code)) {\r\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\r\n\t\t\t\t// unnecessary work\r\n\t\t\t\tret.root = ret.dir = path;\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\tret.base = ret.name = path;\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\t// Try to match a root\r\n\t\tif (isPathSeparator(code)) {\r\n\t\t\t// Possible UNC root\r\n\r\n\t\t\trootEnd = 1;\r\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\r\n\t\t\t\t// Matched double path separator at beginning\r\n\t\t\t\tlet j = 2;\r\n\t\t\t\tlet last = j;\r\n\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\t// Matched!\r\n\t\t\t\t\tlast = j;\r\n\t\t\t\t\t// Match 1 or more path separators\r\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (j < len && j !== last) {\r\n\t\t\t\t\t\t// Matched!\r\n\t\t\t\t\t\tlast = j;\r\n\t\t\t\t\t\t// Match 1 or more non-path separators\r\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\r\n\t\t\t\t\t\t\tj++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j === len) {\r\n\t\t\t\t\t\t\t// We matched a UNC root only\r\n\t\t\t\t\t\t\trootEnd = j;\r\n\t\t\t\t\t\t} else if (j !== last) {\r\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\r\n\t\t\t\t\t\t\trootEnd = j + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\r\n\t\t\t// Possible device root\r\n\t\t\tif (len <= 2) {\r\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\r\n\t\t\t\t// unnecessary work\r\n\t\t\t\tret.root = ret.dir = path;\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\trootEnd = 2;\r\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\r\n\t\t\t\tif (len === 3) {\r\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\r\n\t\t\t\t\t// unnecessary work\r\n\t\t\t\t\tret.root = ret.dir = path;\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t\trootEnd = 3;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (rootEnd > 0) {\r\n\t\t\tret.root = path.slice(0, rootEnd);\r\n\t\t}\r\n\r\n\t\tlet startDot = -1;\r\n\t\tlet startPart = rootEnd;\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\tlet i = path.length - 1;\r\n\r\n\t\t// Track the state of characters (if any) we see before our first dot and\r\n\t\t// after any path separator we find\r\n\t\tlet preDotState = 0;\r\n\r\n\t\t// Get non-dir info\r\n\t\tfor (; i >= rootEnd; --i) {\r\n\t\t\tcode = path.charCodeAt(i);\r\n\t\t\tif (isPathSeparator(code)) {\r\n\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tstartPart = i + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (end === -1) {\r\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\r\n\t\t\t\t// extension\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t\tend = i + 1;\r\n\t\t\t}\r\n\t\t\tif (code === CHAR_DOT) {\r\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\r\n\t\t\t\tif (startDot === -1) {\r\n\t\t\t\t\tstartDot = i;\r\n\t\t\t\t} else if (preDotState !== 1) {\r\n\t\t\t\t\tpreDotState = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (startDot !== -1) {\r\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\r\n\t\t\t\t// have a good chance at having a non-empty extension\r\n\t\t\t\tpreDotState = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (end !== -1) {\r\n\t\t\tif (startDot === -1 ||\r\n\t\t\t\t// We saw a non-dot character immediately before the dot\r\n\t\t\t\tpreDotState === 0 ||\r\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\r\n\t\t\t\t(preDotState === 1 &&\r\n\t\t\t\t\tstartDot === end - 1 &&\r\n\t\t\t\t\tstartDot === startPart + 1)) {\r\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\r\n\t\t\t} else {\r\n\t\t\t\tret.name = path.slice(startPart, startDot);\r\n\t\t\t\tret.base = path.slice(startPart, end);\r\n\t\t\t\tret.ext = path.slice(startDot, end);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the directory is the root, use the entire root as the `dir` including\r\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\r\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\r\n\t\tif (startPart > 0 && startPart !== rootEnd) {\r\n\t\t\tret.dir = path.slice(0, startPart - 1);\r\n\t\t} else {\r\n\t\t\tret.dir = ret.root;\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tsep: '\\\\',\r\n\tdelimiter: ';',\r\n\twin32: null,\r\n\tposix: null\r\n};\r\n\r\nexport const posix: IPath = {\r\n\t// path.resolve([from ...], to)\r\n\tresolve(...pathSegments: string[]): string {\r\n\t\tlet resolvedPath = '';\r\n\t\tlet resolvedAbsolute = false;\r\n\r\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\r\n\r\n\t\t\tvalidateString(path, 'path');\r\n\r\n\t\t\t// Skip empty entries\r\n\t\t\tif (path.length === 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\r\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n\t\t}\r\n\r\n\t\t// At this point the path should be resolved to a full absolute path, but\r\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n\t\t// Normalize the path\r\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\r\n\t\t\tisPosixPathSeparator);\r\n\r\n\t\tif (resolvedAbsolute) {\r\n\t\t\treturn `/${resolvedPath}`;\r\n\t\t}\r\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\r\n\t},\r\n\r\n\tnormalize(path: string): string {\r\n\t\tvalidateString(path, 'path');\r\n\r\n\t\tif (path.length === 0) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\r\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n\t\tconst trailingSeparator =\r\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\r\n\r\n\t\t// Normalize the path\r\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\r\n\r\n\t\tif (path.length === 0) {\r\n\t\t\tif (isAbsolute) {\r\n\t\t\t\treturn '/';\r\n\t\t\t}\r\n\t\t\treturn trailingSeparator ? './' : '.';\r\n\t\t}\r\n\t\tif (trailingSeparator) {\r\n\t\t\tpath += '/';\r\n\t\t}\r\n\r\n\t\treturn isAbsolute ? `/${path}` : path;\r\n\t},\r\n\r\n\tisAbsolute(path: string): boolean {\r\n\t\tvalidateString(path, 'path');\r\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n\t},\r\n\r\n\tjoin(...paths: string[]): string {\r\n\t\tif (paths.length === 0) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\t\tlet joined;\r\n\t\tfor (let i = 0; i < paths.length; ++i) {\r\n\t\t\tconst arg = paths[i];\r\n\t\t\tvalidateString(arg, 'path');\r\n\t\t\tif (arg.length > 0) {\r\n\t\t\t\tif (joined === undefined) {\r\n\t\t\t\t\tjoined = arg;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tjoined += `/${arg}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (joined === undefined) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\t\treturn posix.normalize(joined);\r\n\t},\r\n\r\n\trelative(from: string, to: string): string {\r\n\t\tvalidateString(from, 'from');\r\n\t\tvalidateString(to, 'to');\r\n\r\n\t\tif (from === to) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\t// Trim leading forward slashes.\r\n\t\tfrom = posix.resolve(from);\r\n\t\tto = posix.resolve(to);\r\n\r\n\t\tif (from === to) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tconst fromStart = 1;\r\n\t\tconst fromEnd = from.length;\r\n\t\tconst fromLen = fromEnd - fromStart;\r\n\t\tconst toStart = 1;\r\n\t\tconst toLen = to.length - toStart;\r\n\r\n\t\t// Compare paths to find the longest common path from root\r\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\r\n\t\tlet lastCommonSep = -1;\r\n\t\tlet i = 0;\r\n\t\tfor (; i < length; i++) {\r\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\r\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\r\n\t\t\t\tlastCommonSep = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (i === length) {\r\n\t\t\tif (toLen > length) {\r\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\r\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\r\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\r\n\t\t\t\t\treturn to.slice(toStart + i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t// We get here if `from` is the root\r\n\t\t\t\t\t// For example: from='/'; to='/foo'\r\n\t\t\t\t\treturn to.slice(toStart + i);\r\n\t\t\t\t}\r\n\t\t\t} else if (fromLen > length) {\r\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\r\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\r\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\r\n\t\t\t\t\tlastCommonSep = i;\r\n\t\t\t\t} else if (i === 0) {\r\n\t\t\t\t\t// We get here if `to` is the root.\r\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\r\n\t\t\t\t\tlastCommonSep = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet out = '';\r\n\t\t// Generate the relative path based on the path difference between `to`\r\n\t\t// and `from`.\r\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\r\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\r\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\r\n\t\t// the common path parts.\r\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\r\n\t},\r\n\r\n\ttoNamespacedPath(path: string): string {\r\n\t\t// Non-op on posix systems\r\n\t\treturn path;\r\n\t},\r\n\r\n\tdirname(path: string): string {\r\n\t\tvalidateString(path, 'path');\r\n\t\tif (path.length === 0) {\r\n\t\t\treturn '.';\r\n\t\t}\r\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\r\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tend = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// We saw the first non-path separator\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (end === -1) {\r\n\t\t\treturn hasRoot ? '/' : '.';\r\n\t\t}\r\n\t\tif (hasRoot && end === 1) {\r\n\t\t\treturn '//';\r\n\t\t}\r\n\t\treturn path.slice(0, end);\r\n\t},\r\n\r\n\tbasename(path: string, ext?: string): string {\r\n\t\tif (ext !== undefined) {\r\n\t\t\tvalidateString(ext, 'ext');\r\n\t\t}\r\n\t\tvalidateString(path, 'path');\r\n\r\n\t\tlet start = 0;\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\tlet i;\r\n\r\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\r\n\t\t\tif (ext === path) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\tlet extIdx = ext.length - 1;\r\n\t\t\tlet firstNonSlashEnd = -1;\r\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\r\n\t\t\t\tconst code = path.charCodeAt(i);\r\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\r\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\t\tstart = i + 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\r\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\r\n\t\t\t\t\t\t// we need it if the extension ends up not matching\r\n\t\t\t\t\t\tmatchedSlash = false;\r\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (extIdx >= 0) {\r\n\t\t\t\t\t\t// Try to match the explicit extension\r\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\r\n\t\t\t\t\t\t\tif (--extIdx === -1) {\r\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\r\n\t\t\t\t\t\t\t\t// component\r\n\t\t\t\t\t\t\t\tend = i;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\r\n\t\t\t\t\t\t\t// component\r\n\t\t\t\t\t\t\textIdx = -1;\r\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (start === end) {\r\n\t\t\t\tend = firstNonSlashEnd;\r\n\t\t\t} else if (end === -1) {\r\n\t\t\t\tend = path.length;\r\n\t\t\t}\r\n\t\t\treturn path.slice(start, end);\r\n\t\t}\r\n\t\tfor (i = path.length - 1; i >= 0; --i) {\r\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\r\n\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tstart = i + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (end === -1) {\r\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\r\n\t\t\t\t// path component\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t\tend = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (end === -1) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn path.slice(start, end);\r\n\t},\r\n\r\n\textname(path: string): string {\r\n\t\tvalidateString(path, 'path');\r\n\t\tlet startDot = -1;\r\n\t\tlet startPart = 0;\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\t// Track the state of characters (if any) we see before our first dot and\r\n\t\t// after any path separator we find\r\n\t\tlet preDotState = 0;\r\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\r\n\t\t\tconst code = path.charCodeAt(i);\r\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\r\n\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tstartPart = i + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (end === -1) {\r\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\r\n\t\t\t\t// extension\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t\tend = i + 1;\r\n\t\t\t}\r\n\t\t\tif (code === CHAR_DOT) {\r\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\r\n\t\t\t\tif (startDot === -1) {\r\n\t\t\t\t\tstartDot = i;\r\n\t\t\t\t}\r\n\t\t\t\telse if (preDotState !== 1) {\r\n\t\t\t\t\tpreDotState = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (startDot !== -1) {\r\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\r\n\t\t\t\t// have a good chance at having a non-empty extension\r\n\t\t\t\tpreDotState = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (startDot === -1 ||\r\n\t\t\tend === -1 ||\r\n\t\t\t// We saw a non-dot character immediately before the dot\r\n\t\t\tpreDotState === 0 ||\r\n\t\t\t// The (right-most) trimmed path component is exactly '..'\r\n\t\t\t(preDotState === 1 &&\r\n\t\t\t\tstartDot === end - 1 &&\r\n\t\t\t\tstartDot === startPart + 1)) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn path.slice(startDot, end);\r\n\t},\r\n\r\n\tformat: _format.bind(null, '/'),\r\n\r\n\tparse(path: string): ParsedPath {\r\n\t\tvalidateString(path, 'path');\r\n\r\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n\t\tif (path.length === 0) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n\t\tlet start;\r\n\t\tif (isAbsolute) {\r\n\t\t\tret.root = '/';\r\n\t\t\tstart = 1;\r\n\t\t} else {\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tlet startDot = -1;\r\n\t\tlet startPart = 0;\r\n\t\tlet end = -1;\r\n\t\tlet matchedSlash = true;\r\n\t\tlet i = path.length - 1;\r\n\r\n\t\t// Track the state of characters (if any) we see before our first dot and\r\n\t\t// after any path separator we find\r\n\t\tlet preDotState = 0;\r\n\r\n\t\t// Get non-dir info\r\n\t\tfor (; i >= start; --i) {\r\n\t\t\tconst code = path.charCodeAt(i);\r\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\r\n\t\t\t\t// If we reached a path separator that was not part of a set of path\r\n\t\t\t\t// separators at the end of the string, stop now\r\n\t\t\t\tif (!matchedSlash) {\r\n\t\t\t\t\tstartPart = i + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (end === -1) {\r\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\r\n\t\t\t\t// extension\r\n\t\t\t\tmatchedSlash = false;\r\n\t\t\t\tend = i + 1;\r\n\t\t\t}\r\n\t\t\tif (code === CHAR_DOT) {\r\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\r\n\t\t\t\tif (startDot === -1) {\r\n\t\t\t\t\tstartDot = i;\r\n\t\t\t\t} else if (preDotState !== 1) {\r\n\t\t\t\t\tpreDotState = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (startDot !== -1) {\r\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\r\n\t\t\t\t// have a good chance at having a non-empty extension\r\n\t\t\t\tpreDotState = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (end !== -1) {\r\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\r\n\t\t\tif (startDot === -1 ||\r\n\t\t\t\t// We saw a non-dot character immediately before the dot\r\n\t\t\t\tpreDotState === 0 ||\r\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\r\n\t\t\t\t(preDotState === 1 &&\r\n\t\t\t\t\tstartDot === end - 1 &&\r\n\t\t\t\t\tstartDot === startPart + 1)) {\r\n\t\t\t\tret.base = ret.name = path.slice(start, end);\r\n\t\t\t} else {\r\n\t\t\t\tret.name = path.slice(start, startDot);\r\n\t\t\t\tret.base = path.slice(start, end);\r\n\t\t\t\tret.ext = path.slice(startDot, end);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (startPart > 0) {\r\n\t\t\tret.dir = path.slice(0, startPart - 1);\r\n\t\t} else if (isAbsolute) {\r\n\t\t\tret.dir = '/';\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tsep: '/',\r\n\tdelimiter: ':',\r\n\twin32: null,\r\n\tposix: null\r\n};\r\n\r\nposix.win32 = win32.win32 = win32;\r\nposix.posix = win32.posix = posix;\r\n\r\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\r\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\r\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\r\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\r\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\r\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\r\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { globals } from 'vs/base/common/platform';\r\n\r\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\r\n\r\nexport class StopWatch {\r\n\r\n\tprivate _highResolution: boolean;\r\n\tprivate _startTime: number;\r\n\tprivate _stopTime: number;\r\n\r\n\tpublic static create(highResolution: boolean = true): StopWatch {\r\n\t\treturn new StopWatch(highResolution);\r\n\t}\r\n\r\n\tconstructor(highResolution: boolean) {\r\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\r\n\t\tthis._startTime = this._now();\r\n\t\tthis._stopTime = -1;\r\n\t}\r\n\r\n\tpublic stop(): void {\r\n\t\tthis._stopTime = this._now();\r\n\t}\r\n\r\n\tpublic elapsed(): number {\r\n\t\tif (this._stopTime !== -1) {\r\n\t\t\treturn this._stopTime - this._startTime;\r\n\t\t}\r\n\t\treturn this._now() - this._startTime;\r\n\t}\r\n\r\n\tprivate _now(): number {\r\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { onUnexpectedError } from 'vs/base/common/errors';\r\nimport { Disposable, IDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\r\nimport { LinkedList } from 'vs/base/common/linkedList';\r\nimport { StopWatch } from 'vs/base/common/stopwatch';\r\n\r\n/**\r\n * To an event a function with one or zero parameters\r\n * can be subscribed. The event is the subscriber function itself.\r\n */\r\nexport interface Event<T> {\r\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\r\n}\r\n\r\nexport namespace Event {\r\n\texport const None: Event<any> = () => Disposable.None;\r\n\r\n\t/**\r\n\t * Given an event, returns another event which only fires once.\r\n\t */\r\n\texport function once<T>(event: Event<T>): Event<T> {\r\n\t\treturn (listener, thisArgs = null, disposables?) => {\r\n\t\t\t// we need this, in case the event fires during the listener call\r\n\t\t\tlet didFire = false;\r\n\t\t\tlet result: IDisposable;\r\n\t\t\tresult = event(e => {\r\n\t\t\t\tif (didFire) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (result) {\r\n\t\t\t\t\tresult.dispose();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdidFire = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn listener.call(thisArgs, e);\r\n\t\t\t}, null, disposables);\r\n\r\n\t\t\tif (didFire) {\r\n\t\t\t\tresult.dispose();\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Given an event and a `map` function, returns another event which maps each element\r\n\t * through the mapping function.\r\n\t */\r\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\r\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\r\n\t}\r\n\r\n\t/**\r\n\t * Given an event and an `each` function, returns another identical event and calls\r\n\t * the `each` function per each element.\r\n\t */\r\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\r\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\r\n\t}\r\n\r\n\t/**\r\n\t * Given an event and a `filter` function, returns another event which emits those\r\n\t * elements for which the `filter` function returns `true`.\r\n\t */\r\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\r\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\r\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\r\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\r\n\t}\r\n\r\n\t/**\r\n\t * Given an event, returns the same event but typed as `Event<void>`.\r\n\t */\r\n\texport function signal<T>(event: Event<T>): Event<void> {\r\n\t\treturn event as Event<any> as Event<void>;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a collection of events, returns a single event which emits\r\n\t * whenever any of the provided events emit.\r\n\t */\r\n\texport function any<T>(...events: Event<T>[]): Event<T>;\r\n\texport function any(...events: Event<any>[]): Event<void>;\r\n\texport function any<T>(...events: Event<T>[]): Event<T> {\r\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\r\n\t}\r\n\r\n\t/**\r\n\t * Given an event and a `merge` function, returns another event which maps each element\r\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\r\n\t */\r\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\r\n\t\tlet output: O | undefined = initial;\r\n\r\n\t\treturn map<I, O>(event, e => {\r\n\t\t\toutput = merge(output, e);\r\n\t\t\treturn output;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Given a chain of event processing functions (filter, map, etc), each\r\n\t * function will be invoked per event & per listener. Snapshotting an event\r\n\t * chain allows each function to be invoked just once per event.\r\n\t */\r\n\texport function snapshot<T>(event: Event<T>): Event<T> {\r\n\t\tlet listener: IDisposable;\r\n\t\tconst emitter = new Emitter<T>({\r\n\t\t\tonFirstListenerAdd() {\r\n\t\t\t\tlistener = event(emitter.fire, emitter);\r\n\t\t\t},\r\n\t\t\tonLastListenerRemove() {\r\n\t\t\t\tlistener.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn emitter.event;\r\n\t}\r\n\r\n\t/**\r\n\t * Debounces the provided event, given a `merge` function.\r\n\t *\r\n\t * @param event The input event.\r\n\t * @param merge The reducing function.\r\n\t * @param delay The debouncing delay in millis.\r\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\r\n\t * @param leakWarningThreshold The leak warning threshold override.\r\n\t */\r\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\r\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\r\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\r\n\r\n\t\tlet subscription: IDisposable;\r\n\t\tlet output: O | undefined = undefined;\r\n\t\tlet handle: any = undefined;\r\n\t\tlet numDebouncedCalls = 0;\r\n\r\n\t\tconst emitter = new Emitter<O>({\r\n\t\t\tleakWarningThreshold,\r\n\t\t\tonFirstListenerAdd() {\r\n\t\t\t\tsubscription = event(cur => {\r\n\t\t\t\t\tnumDebouncedCalls++;\r\n\t\t\t\t\toutput = merge(output, cur);\r\n\r\n\t\t\t\t\tif (leading && !handle) {\r\n\t\t\t\t\t\temitter.fire(output);\r\n\t\t\t\t\t\toutput = undefined;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tclearTimeout(handle);\r\n\t\t\t\t\thandle = setTimeout(() => {\r\n\t\t\t\t\t\tconst _output = output;\r\n\t\t\t\t\t\toutput = undefined;\r\n\t\t\t\t\t\thandle = undefined;\r\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\r\n\t\t\t\t\t\t\temitter.fire(_output!);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnumDebouncedCalls = 0;\r\n\t\t\t\t\t}, delay);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tonLastListenerRemove() {\r\n\t\t\t\tsubscription.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn emitter.event;\r\n\t}\r\n\r\n\t/**\r\n\t * Given an event, it returns another event which fires only once and as soon as\r\n\t * the input event emits. The event data is the number of millis it took for the\r\n\t * event to fire.\r\n\t */\r\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\r\n\t\tconst start = new Date().getTime();\r\n\t\treturn map(once(event), _ => new Date().getTime() - start);\r\n\t}\r\n\r\n\t/**\r\n\t * Given an event, it returns another event which fires only when the event\r\n\t * element changes.\r\n\t */\r\n\texport function latch<T>(event: Event<T>): Event<T> {\r\n\t\tlet firstCall = true;\r\n\t\tlet cache: T;\r\n\r\n\t\treturn filter(event, value => {\r\n\t\t\tconst shouldEmit = firstCall || value !== cache;\r\n\t\t\tfirstCall = false;\r\n\t\t\tcache = value;\r\n\t\t\treturn shouldEmit;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Buffers the provided event until a first listener comes\r\n\t * along, at which point fire all the events at once and\r\n\t * pipe the event from then on.\r\n\t *\r\n\t * ```typescript\r\n\t * const emitter = new Emitter<number>();\r\n\t * const event = emitter.event;\r\n\t * const bufferedEvent = buffer(event);\r\n\t *\r\n\t * emitter.fire(1);\r\n\t * emitter.fire(2);\r\n\t * emitter.fire(3);\r\n\t * // nothing...\r\n\t *\r\n\t * const listener = bufferedEvent(num => console.log(num));\r\n\t * // 1, 2, 3\r\n\t *\r\n\t * emitter.fire(4);\r\n\t * // 4\r\n\t * ```\r\n\t */\r\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\r\n\t\tlet buffer: T[] | null = _buffer.slice();\r\n\r\n\t\tlet listener: IDisposable | null = event(e => {\r\n\t\t\tif (buffer) {\r\n\t\t\t\tbuffer.push(e);\r\n\t\t\t} else {\r\n\t\t\t\temitter.fire(e);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst flush = () => {\r\n\t\t\tif (buffer) {\r\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\r\n\t\t\t}\r\n\t\t\tbuffer = null;\r\n\t\t};\r\n\r\n\t\tconst emitter = new Emitter<T>({\r\n\t\t\tonFirstListenerAdd() {\r\n\t\t\t\tif (!listener) {\r\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonFirstListenerDidAdd() {\r\n\t\t\t\tif (buffer) {\r\n\t\t\t\t\tif (nextTick) {\r\n\t\t\t\t\t\tsetTimeout(flush);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tflush();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonLastListenerRemove() {\r\n\t\t\t\tif (listener) {\r\n\t\t\t\t\tlistener.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tlistener = null;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn emitter.event;\r\n\t}\r\n\r\n\texport interface IChainableEvent<T> {\r\n\t\tevent: Event<T>;\r\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\r\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\r\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\r\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\r\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\r\n\t\tlatch(): IChainableEvent<T>;\r\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\r\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\r\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\r\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\r\n\t}\r\n\r\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\r\n\r\n\t\tconstructor(readonly event: Event<T>) { }\r\n\r\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\r\n\t\t\treturn new ChainableEvent(map(this.event, fn));\r\n\t\t}\r\n\r\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\r\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\r\n\t\t}\r\n\r\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\r\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\r\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\r\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\r\n\t\t}\r\n\r\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\r\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\r\n\t\t}\r\n\r\n\t\tlatch(): IChainableEvent<T> {\r\n\t\t\treturn new ChainableEvent(latch(this.event));\r\n\t\t}\r\n\r\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\r\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\r\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\r\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\r\n\t\t}\r\n\r\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\r\n\t\t\treturn this.event(listener, thisArgs, disposables);\r\n\t\t}\r\n\r\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\r\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\r\n\t\t}\r\n\t}\r\n\r\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\r\n\t\treturn new ChainableEvent(event);\r\n\t}\r\n\r\n\texport interface NodeEventEmitter {\r\n\t\ton(event: string | symbol, listener: Function): unknown;\r\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\r\n\t}\r\n\r\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\r\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\r\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\r\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\r\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\r\n\r\n\t\treturn result.event;\r\n\t}\r\n\r\n\texport interface DOMEventEmitter {\r\n\t\taddEventListener(event: string | symbol, listener: Function): void;\r\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\r\n\t}\r\n\r\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\r\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\r\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\r\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\r\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\r\n\r\n\t\treturn result.event;\r\n\t}\r\n\r\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\r\n\t\tconst emitter = new Emitter<undefined>();\r\n\t\tlet shouldEmit = false;\r\n\r\n\t\tpromise\r\n\t\t\t.then(undefined, () => null)\r\n\t\t\t.then(() => {\r\n\t\t\t\tif (!shouldEmit) {\r\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\temitter.fire(undefined);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tshouldEmit = true;\r\n\t\treturn emitter.event;\r\n\t}\r\n\r\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\r\n\t\treturn new Promise(resolve => once(event)(resolve));\r\n\t}\r\n}\r\n\r\nexport type Listener<T> = [(e: T) => void, any] | ((e: T) => void);\r\n\r\nexport interface EmitterOptions {\r\n\tonFirstListenerAdd?: Function;\r\n\tonFirstListenerDidAdd?: Function;\r\n\tonListenerDidAdd?: Function;\r\n\tonLastListenerRemove?: Function;\r\n\tleakWarningThreshold?: number;\r\n\r\n\t/** ONLY enable this during development */\r\n\t_profName?: string\r\n}\r\n\r\n\r\nclass EventProfiling {\r\n\r\n\tprivate static _idPool = 0;\r\n\r\n\tprivate _name: string;\r\n\tprivate _stopWatch?: StopWatch;\r\n\tprivate _listenerCount: number = 0;\r\n\tprivate _invocationCount = 0;\r\n\tprivate _elapsedOverall = 0;\r\n\r\n\tconstructor(name: string) {\r\n\t\tthis._name = `${name}_${EventProfiling._idPool++}`;\r\n\t}\r\n\r\n\tstart(listenerCount: number): void {\r\n\t\tthis._stopWatch = new StopWatch(true);\r\n\t\tthis._listenerCount = listenerCount;\r\n\t}\r\n\r\n\tstop(): void {\r\n\t\tif (this._stopWatch) {\r\n\t\t\tconst elapsed = this._stopWatch.elapsed();\r\n\t\t\tthis._elapsedOverall += elapsed;\r\n\t\t\tthis._invocationCount += 1;\r\n\r\n\t\t\tconsole.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\r\n\t\t\tthis._stopWatch = undefined;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet _globalLeakWarningThreshold = -1;\r\n\r\nclass LeakageMonitor {\r\n\r\n\tprivate _stacks: Map<string, number> | undefined;\r\n\tprivate _warnCountdown: number = 0;\r\n\r\n\tconstructor(\r\n\t\treadonly customThreshold?: number,\r\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\r\n\t) { }\r\n\r\n\tdispose(): void {\r\n\t\tif (this._stacks) {\r\n\t\t\tthis._stacks.clear();\r\n\t\t}\r\n\t}\r\n\r\n\tcheck(listenerCount: number): undefined | (() => void) {\r\n\r\n\t\tlet threshold = _globalLeakWarningThreshold;\r\n\t\tif (typeof this.customThreshold === 'number') {\r\n\t\t\tthreshold = this.customThreshold;\r\n\t\t}\r\n\r\n\t\tif (threshold <= 0 || listenerCount < threshold) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tif (!this._stacks) {\r\n\t\t\tthis._stacks = new Map();\r\n\t\t}\r\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\r\n\t\tconst count = (this._stacks.get(stack) || 0);\r\n\t\tthis._stacks.set(stack, count + 1);\r\n\t\tthis._warnCountdown -= 1;\r\n\r\n\t\tif (this._warnCountdown <= 0) {\r\n\t\t\t// only warn on first exceed and then every time the limit\r\n\t\t\t// is exceeded by 50% again\r\n\t\t\tthis._warnCountdown = threshold * 0.5;\r\n\r\n\t\t\t// find most frequent listener and print warning\r\n\t\t\tlet topStack: string | undefined;\r\n\t\t\tlet topCount: number = 0;\r\n\t\t\tfor (const [stack, count] of this._stacks) {\r\n\t\t\t\tif (!topStack || topCount < count) {\r\n\t\t\t\t\ttopStack = stack;\r\n\t\t\t\t\ttopCount = count;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\r\n\t\t\tconsole.warn(topStack!);\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\r\n\t\t\tthis._stacks!.set(stack, count - 1);\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * The Emitter can be used to expose an Event to the public\r\n * to fire it from the insides.\r\n * Sample:\r\n\tclass Document {\r\n\r\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\r\n\r\n\t\tpublic onDidChange = this._onDidChange.event;\r\n\r\n\t\t// getter-style\r\n\t\t// get onDidChange(): Event<(value:string)=>any> {\r\n\t\t// \treturn this._onDidChange.event;\r\n\t\t// }\r\n\r\n\t\tprivate _doIt() {\r\n\t\t\t//...\r\n\t\t\tthis._onDidChange.fire(value);\r\n\t\t}\r\n\t}\r\n */\r\nexport class Emitter<T> {\r\n\r\n\tprivate static readonly _noop = function () { };\r\n\r\n\tprivate readonly _options?: EmitterOptions;\r\n\tprivate readonly _leakageMon?: LeakageMonitor;\r\n\tprivate readonly _perfMon?: EventProfiling;\r\n\tprivate _disposed: boolean = false;\r\n\tprivate _event?: Event<T>;\r\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\r\n\tprotected _listeners?: LinkedList<Listener<T>>;\r\n\r\n\tconstructor(options?: EmitterOptions) {\r\n\t\tthis._options = options;\r\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\r\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * For the public to allow to subscribe\r\n\t * to events from this Emitter\r\n\t */\r\n\tget event(): Event<T> {\r\n\t\tif (!this._event) {\r\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\r\n\t\t\t\tif (!this._listeners) {\r\n\t\t\t\t\tthis._listeners = new LinkedList();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\r\n\r\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\r\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\r\n\r\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\r\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\r\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// check and record this emitter for potential leakage\r\n\t\t\t\tconst removeMonitor = this._leakageMon?.check(this._listeners.size);\r\n\r\n\t\t\t\tlet result: IDisposable;\r\n\t\t\t\tresult = {\r\n\t\t\t\t\tdispose: () => {\r\n\t\t\t\t\t\tif (removeMonitor) {\r\n\t\t\t\t\t\t\tremoveMonitor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\r\n\t\t\t\t\t\tif (!this._disposed) {\r\n\t\t\t\t\t\t\tremove();\r\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\r\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\r\n\t\t\t\t\t\t\t\tif (!hasListeners) {\r\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tif (disposables instanceof DisposableStore) {\r\n\t\t\t\t\tdisposables.add(result);\r\n\t\t\t\t} else if (Array.isArray(disposables)) {\r\n\t\t\t\t\tdisposables.push(result);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn this._event;\r\n\t}\r\n\r\n\t/**\r\n\t * To be kept private to fire an event to\r\n\t * subscribers\r\n\t */\r\n\tfire(event: T): void {\r\n\t\tif (this._listeners) {\r\n\t\t\t// put all [listener,event]-pairs into delivery queue\r\n\t\t\t// then emit all event. an inner/nested event might be\r\n\t\t\t// the driver of this\r\n\r\n\t\t\tif (!this._deliveryQueue) {\r\n\t\t\t\tthis._deliveryQueue = new LinkedList();\r\n\t\t\t}\r\n\r\n\t\t\tfor (let listener of this._listeners) {\r\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\r\n\t\t\t}\r\n\r\n\t\t\t// start/stop performance insight collection\r\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\r\n\r\n\t\t\twhile (this._deliveryQueue.size > 0) {\r\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t\t\tlistener.call(undefined, event);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tonUnexpectedError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._perfMon?.stop();\r\n\t\t}\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tthis._listeners?.clear();\r\n\t\tthis._deliveryQueue?.clear();\r\n\t\tthis._leakageMon?.dispose();\r\n\t\tthis._disposed = true;\r\n\t}\r\n}\r\n\r\nexport class PauseableEmitter<T> extends Emitter<T> {\r\n\r\n\tprivate _isPaused = 0;\r\n\tprivate _eventQueue = new LinkedList<T>();\r\n\tprivate _mergeFn?: (input: T[]) => T;\r\n\r\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\r\n\t\tsuper(options);\r\n\t\tthis._mergeFn = options?.merge;\r\n\t}\r\n\r\n\tpause(): void {\r\n\t\tthis._isPaused++;\r\n\t}\r\n\r\n\tresume(): void {\r\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\r\n\t\t\tif (this._mergeFn) {\r\n\t\t\t\t// use the merge function to create a single composite\r\n\t\t\t\t// event. make a copy in case firing pauses this emitter\r\n\t\t\t\tconst events = Array.from(this._eventQueue);\r\n\t\t\t\tthis._eventQueue.clear();\r\n\t\t\t\tsuper.fire(this._mergeFn(events));\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// no merging, fire each event individually and test\r\n\t\t\t\t// that this emitter isn't paused halfway through\r\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\r\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfire(event: T): void {\r\n\t\tif (this._listeners) {\r\n\t\t\tif (this._isPaused !== 0) {\r\n\t\t\t\tthis._eventQueue.push(event);\r\n\t\t\t} else {\r\n\t\t\t\tsuper.fire(event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * The EventBufferer is useful in situations in which you want\r\n * to delay firing your events during some code.\r\n * You can wrap that code and be sure that the event will not\r\n * be fired during that wrap.\r\n *\r\n * ```\r\n * const emitter: Emitter;\r\n * const delayer = new EventDelayer();\r\n * const delayedEvent = delayer.wrapEvent(emitter.event);\r\n *\r\n * delayedEvent(console.log);\r\n *\r\n * delayer.bufferEvents(() => {\r\n *   emitter.fire(); // event will not be fired yet\r\n * });\r\n *\r\n * // event will only be fired at this point\r\n * ```\r\n */\r\nexport class EventBufferer {\r\n\r\n\tprivate buffers: Function[][] = [];\r\n\r\n\twrapEvent<T>(event: Event<T>): Event<T> {\r\n\t\treturn (listener, thisArgs?, disposables?) => {\r\n\t\t\treturn event(i => {\r\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\r\n\r\n\t\t\t\tif (buffer) {\r\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlistener.call(thisArgs, i);\r\n\t\t\t\t}\r\n\t\t\t}, undefined, disposables);\r\n\t\t};\r\n\t}\r\n\r\n\tbufferEvents<R = void>(fn: () => R): R {\r\n\t\tconst buffer: Array<() => R> = [];\r\n\t\tthis.buffers.push(buffer);\r\n\t\tconst r = fn();\r\n\t\tthis.buffers.pop();\r\n\t\tbuffer.forEach(flush => flush());\r\n\t\treturn r;\r\n\t}\r\n}\r\n\r\n/**\r\n * A Relay is an event forwarder which functions as a replugabble event pipe.\r\n * Once created, you can connect an input event to it and it will simply forward\r\n * events from that input event through its own `event` property. The `input`\r\n * can be changed at any point in time.\r\n */\r\nexport class Relay<T> implements IDisposable {\r\n\r\n\tprivate listening = false;\r\n\tprivate inputEvent: Event<T> = Event.None;\r\n\tprivate inputEventListener: IDisposable = Disposable.None;\r\n\r\n\tprivate readonly emitter = new Emitter<T>({\r\n\t\tonFirstListenerDidAdd: () => {\r\n\t\t\tthis.listening = true;\r\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\r\n\t\t},\r\n\t\tonLastListenerRemove: () => {\r\n\t\t\tthis.listening = false;\r\n\t\t\tthis.inputEventListener.dispose();\r\n\t\t}\r\n\t});\r\n\r\n\treadonly event: Event<T> = this.emitter.event;\r\n\r\n\tset input(event: Event<T>) {\r\n\t\tthis.inputEvent = event;\r\n\r\n\t\tif (this.listening) {\r\n\t\t\tthis.inputEventListener.dispose();\r\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\r\n\t\t}\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tthis.inputEventListener.dispose();\r\n\t\tthis.emitter.dispose();\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { Emitter, Event } from 'vs/base/common/event';\r\nimport { IDisposable } from 'vs/base/common/lifecycle';\r\n\r\nexport interface CancellationToken {\r\n\r\n\t/**\r\n\t * A flag signalling is cancellation has been requested.\r\n\t */\r\n\treadonly isCancellationRequested: boolean;\r\n\r\n\t/**\r\n\t * An event which fires when cancellation is requested. This event\r\n\t * only ever fires `once` as cancellation can only happen once. Listeners\r\n\t * that are registered after cancellation will be called (next event loop run),\r\n\t * but also only once.\r\n\t *\r\n\t * @event\r\n\t */\r\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\r\n}\r\n\r\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\r\n\tconst handle = setTimeout(callback.bind(context), 0);\r\n\treturn { dispose() { clearTimeout(handle); } };\r\n});\r\n\r\nexport namespace CancellationToken {\r\n\r\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\r\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (thing instanceof MutableToken) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!thing || typeof thing !== 'object') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\r\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\r\n\t}\r\n\r\n\r\n\texport const None: CancellationToken = Object.freeze({\r\n\t\tisCancellationRequested: false,\r\n\t\tonCancellationRequested: Event.None\r\n\t});\r\n\r\n\texport const Cancelled: CancellationToken = Object.freeze({\r\n\t\tisCancellationRequested: true,\r\n\t\tonCancellationRequested: shortcutEvent\r\n\t});\r\n}\r\n\r\nclass MutableToken implements CancellationToken {\r\n\r\n\tprivate _isCancelled: boolean = false;\r\n\tprivate _emitter: Emitter<any> | null = null;\r\n\r\n\tpublic cancel() {\r\n\t\tif (!this._isCancelled) {\r\n\t\t\tthis._isCancelled = true;\r\n\t\t\tif (this._emitter) {\r\n\t\t\t\tthis._emitter.fire(undefined);\r\n\t\t\t\tthis.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget isCancellationRequested(): boolean {\r\n\t\treturn this._isCancelled;\r\n\t}\r\n\r\n\tget onCancellationRequested(): Event<any> {\r\n\t\tif (this._isCancelled) {\r\n\t\t\treturn shortcutEvent;\r\n\t\t}\r\n\t\tif (!this._emitter) {\r\n\t\t\tthis._emitter = new Emitter<any>();\r\n\t\t}\r\n\t\treturn this._emitter.event;\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tif (this._emitter) {\r\n\t\t\tthis._emitter.dispose();\r\n\t\t\tthis._emitter = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CancellationTokenSource {\r\n\r\n\tprivate _token?: CancellationToken = undefined;\r\n\tprivate _parentListener?: IDisposable = undefined;\r\n\r\n\tconstructor(parent?: CancellationToken) {\r\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\r\n\t}\r\n\r\n\tget token(): CancellationToken {\r\n\t\tif (!this._token) {\r\n\t\t\t// be lazy and create the token only when\r\n\t\t\t// actually needed\r\n\t\t\tthis._token = new MutableToken();\r\n\t\t}\r\n\t\treturn this._token;\r\n\t}\r\n\r\n\tcancel(): void {\r\n\t\tif (!this._token) {\r\n\t\t\t// save an object by returning the default\r\n\t\t\t// cancelled token when cancellation happens\r\n\t\t\t// before someone asks for the token\r\n\t\t\tthis._token = CancellationToken.Cancelled;\r\n\r\n\t\t} else if (this._token instanceof MutableToken) {\r\n\t\t\t// actually cancel\r\n\t\t\tthis._token.cancel();\r\n\t\t}\r\n\t}\r\n\r\n\tdispose(cancel: boolean = false): void {\r\n\t\tif (cancel) {\r\n\t\t\tthis.cancel();\r\n\t\t}\r\n\t\tif (this._parentListener) {\r\n\t\t\tthis._parentListener.dispose();\r\n\t\t}\r\n\t\tif (!this._token) {\r\n\t\t\t// ensure to initialize with an empty token if we had none\r\n\t\t\tthis._token = CancellationToken.None;\r\n\r\n\t\t} else if (this._token instanceof MutableToken) {\r\n\t\t\t// actually dispose\r\n\t\t\tthis._token.dispose();\r\n\t\t}\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { CharCode } from 'vs/base/common/charCode';\r\nimport { Constants } from 'vs/base/common/uint';\r\n\r\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\r\n\tif (!str || typeof str !== 'string') {\r\n\t\treturn true;\r\n\t}\r\n\treturn str.trim().length === 0;\r\n}\r\n\r\nconst _formatRegexp = /{(\\d+)}/g;\r\n\r\n/**\r\n * Helper to produce a string with a variable number of arguments. Insert variable segments\r\n * into the string using the {n} notation where N is the index of the argument following the string.\r\n * @param value string to which formatting is applied\r\n * @param args replacements for {n}-entries\r\n */\r\nexport function format(value: string, ...args: any[]): string {\r\n\tif (args.length === 0) {\r\n\t\treturn value;\r\n\t}\r\n\treturn value.replace(_formatRegexp, function (match, group) {\r\n\t\tconst idx = parseInt(group, 10);\r\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\r\n\t\t\tmatch :\r\n\t\t\targs[idx];\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\r\n * being used e.g. in HTMLElement.innerHTML.\r\n */\r\nexport function escape(html: string): string {\r\n\treturn html.replace(/[<>&]/g, function (match) {\r\n\t\tswitch (match) {\r\n\t\t\tcase '<': return '&lt;';\r\n\t\t\tcase '>': return '&gt;';\r\n\t\t\tcase '&': return '&amp;';\r\n\t\t\tdefault: return match;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Escapes regular expression characters in a given string\r\n */\r\nexport function escapeRegExpCharacters(value: string): string {\r\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Removes all occurrences of needle from the beginning and end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim (default is a blank)\r\n */\r\nexport function trim(haystack: string, needle: string = ' '): string {\r\n\tconst trimmed = ltrim(haystack, needle);\r\n\treturn rtrim(trimmed, needle);\r\n}\r\n\r\n/**\r\n * Removes all occurrences of needle from the beginning of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function ltrim(haystack: string, needle: string): string {\r\n\tif (!haystack || !needle) {\r\n\t\treturn haystack;\r\n\t}\r\n\r\n\tconst needleLen = needle.length;\r\n\tif (needleLen === 0 || haystack.length === 0) {\r\n\t\treturn haystack;\r\n\t}\r\n\r\n\tlet offset = 0;\r\n\r\n\twhile (haystack.indexOf(needle, offset) === offset) {\r\n\t\toffset = offset + needleLen;\r\n\t}\r\n\treturn haystack.substring(offset);\r\n}\r\n\r\n/**\r\n * Removes all occurrences of needle from the end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function rtrim(haystack: string, needle: string): string {\r\n\tif (!haystack || !needle) {\r\n\t\treturn haystack;\r\n\t}\r\n\r\n\tconst needleLen = needle.length,\r\n\t\thaystackLen = haystack.length;\r\n\r\n\tif (needleLen === 0 || haystackLen === 0) {\r\n\t\treturn haystack;\r\n\t}\r\n\r\n\tlet offset = haystackLen,\r\n\t\tidx = -1;\r\n\r\n\twhile (true) {\r\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\r\n\t\tif (idx === -1 || idx + needleLen !== offset) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (idx === 0) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\toffset = idx;\r\n\t}\r\n\r\n\treturn haystack.substring(0, offset);\r\n}\r\n\r\nexport function convertSimple2RegExpPattern(pattern: string): string {\r\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\r\n}\r\n\r\nexport function stripWildcards(pattern: string): string {\r\n\treturn pattern.replace(/\\*/g, '');\r\n}\r\n\r\nexport interface RegExpOptions {\r\n\tmatchCase?: boolean;\r\n\twholeWord?: boolean;\r\n\tmultiline?: boolean;\r\n\tglobal?: boolean;\r\n\tunicode?: boolean;\r\n}\r\n\r\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\r\n\tif (!searchString) {\r\n\t\tthrow new Error('Cannot create regex from empty string');\r\n\t}\r\n\tif (!isRegex) {\r\n\t\tsearchString = escapeRegExpCharacters(searchString);\r\n\t}\r\n\tif (options.wholeWord) {\r\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\r\n\t\t\tsearchString = '\\\\b' + searchString;\r\n\t\t}\r\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\r\n\t\t\tsearchString = searchString + '\\\\b';\r\n\t\t}\r\n\t}\r\n\tlet modifiers = '';\r\n\tif (options.global) {\r\n\t\tmodifiers += 'g';\r\n\t}\r\n\tif (!options.matchCase) {\r\n\t\tmodifiers += 'i';\r\n\t}\r\n\tif (options.multiline) {\r\n\t\tmodifiers += 'm';\r\n\t}\r\n\tif (options.unicode) {\r\n\t\tmodifiers += 'u';\r\n\t}\r\n\r\n\treturn new RegExp(searchString, modifiers);\r\n}\r\n\r\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\r\n\t// Exit early if it's one of these special cases which are meant to match\r\n\t// against an empty string\r\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// We check against an empty string. If the regular expression doesn't advance\r\n\t// (e.g. ends in an endless loop) it will match an empty string.\r\n\tconst match = regexp.exec('');\r\n\treturn !!(match && regexp.lastIndex === 0);\r\n}\r\n\r\nexport function regExpFlags(regexp: RegExp): string {\r\n\treturn (regexp.global ? 'g' : '')\r\n\t\t+ (regexp.ignoreCase ? 'i' : '')\r\n\t\t+ (regexp.multiline ? 'm' : '')\r\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\r\n}\r\n\r\nexport function splitLines(str: string): string[] {\r\n\treturn str.split(/\\r\\n|\\r|\\n/);\r\n}\r\n\r\n/**\r\n * Returns first index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function firstNonWhitespaceIndex(str: string): number {\r\n\tfor (let i = 0, len = str.length; i < len; i++) {\r\n\t\tconst chCode = str.charCodeAt(i);\r\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * Returns the leading whitespace of the string.\r\n * If the string contains only whitespaces, returns entire string\r\n */\r\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\r\n\tfor (let i = start; i < end; i++) {\r\n\t\tconst chCode = str.charCodeAt(i);\r\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\r\n\t\t\treturn str.substring(start, i);\r\n\t\t}\r\n\t}\r\n\treturn str.substring(start, end);\r\n}\r\n\r\n/**\r\n * Returns last index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\r\n\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\tconst chCode = str.charCodeAt(i);\r\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\nexport function compare(a: string, b: string): number {\r\n\tif (a < b) {\r\n\t\treturn -1;\r\n\t} else if (a > b) {\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\r\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\r\n\t\tlet codeA = a.charCodeAt(aStart);\r\n\t\tlet codeB = b.charCodeAt(bStart);\r\n\t\tif (codeA < codeB) {\r\n\t\t\treturn -1;\r\n\t\t} else if (codeA > codeB) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\tconst aLen = aEnd - aStart;\r\n\tconst bLen = bEnd - bStart;\r\n\tif (aLen < bLen) {\r\n\t\treturn -1;\r\n\t} else if (aLen > bLen) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nexport function compareIgnoreCase(a: string, b: string): number {\r\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\r\n}\r\n\r\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\r\n\r\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\r\n\r\n\t\tlet codeA = a.charCodeAt(aStart);\r\n\t\tlet codeB = b.charCodeAt(bStart);\r\n\r\n\t\tif (codeA === codeB) {\r\n\t\t\t// equal\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tconst diff = codeA - codeB;\r\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\r\n\t\t\tcontinue;\r\n\r\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\r\n\t\t\t//\r\n\t\t\treturn diff;\r\n\r\n\t\t} else {\r\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\r\n\t\t}\r\n\t}\r\n\r\n\tconst aLen = aEnd - aStart;\r\n\tconst bLen = bEnd - bStart;\r\n\r\n\tif (aLen < bLen) {\r\n\t\treturn -1;\r\n\t} else if (aLen > bLen) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\nexport function isLowerAsciiLetter(code: number): boolean {\r\n\treturn code >= CharCode.a && code <= CharCode.z;\r\n}\r\n\r\nexport function isUpperAsciiLetter(code: number): boolean {\r\n\treturn code >= CharCode.A && code <= CharCode.Z;\r\n}\r\n\r\nfunction isAsciiLetter(code: number): boolean {\r\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\r\n}\r\n\r\nexport function equalsIgnoreCase(a: string, b: string): boolean {\r\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\r\n}\r\n\r\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\r\n\tfor (let i = 0; i < stopAt; i++) {\r\n\t\tconst codeA = a.charCodeAt(i);\r\n\t\tconst codeB = b.charCodeAt(i);\r\n\r\n\t\tif (codeA === codeB) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// a-z A-Z\r\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\r\n\t\t\tconst diff = Math.abs(codeA - codeB);\r\n\t\t\tif (diff !== 0 && diff !== 32) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Any other charcode\r\n\t\telse {\r\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\r\n\tconst candidateLength = candidate.length;\r\n\tif (candidate.length > str.length) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\r\n}\r\n\r\n/**\r\n * @returns the length of the common prefix of the two strings.\r\n */\r\nexport function commonPrefixLength(a: string, b: string): number {\r\n\r\n\tlet i: number,\r\n\t\tlen = Math.min(a.length, b.length);\r\n\r\n\tfor (i = 0; i < len; i++) {\r\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn len;\r\n}\r\n\r\n/**\r\n * @returns the length of the common suffix of the two strings.\r\n */\r\nexport function commonSuffixLength(a: string, b: string): number {\r\n\r\n\tlet i: number,\r\n\t\tlen = Math.min(a.length, b.length);\r\n\r\n\tconst aLastIndex = a.length - 1;\r\n\tconst bLastIndex = b.length - 1;\r\n\r\n\tfor (i = 0; i < len; i++) {\r\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn len;\r\n}\r\n\r\n/**\r\n * See http://en.wikipedia.org/wiki/Surrogate_pair\r\n */\r\nexport function isHighSurrogate(charCode: number): boolean {\r\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\r\n}\r\n\r\n/**\r\n * See http://en.wikipedia.org/wiki/Surrogate_pair\r\n */\r\nexport function isLowSurrogate(charCode: number): boolean {\r\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\r\n}\r\n\r\n/**\r\n * See http://en.wikipedia.org/wiki/Surrogate_pair\r\n */\r\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\r\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\r\n}\r\n\r\n/**\r\n * get the code point that begins at offset `offset`\r\n */\r\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\r\n\tconst charCode = str.charCodeAt(offset);\r\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\r\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\r\n\t\tif (isLowSurrogate(nextCharCode)) {\r\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\r\n\t\t}\r\n\t}\r\n\treturn charCode;\r\n}\r\n\r\n/**\r\n * get the code point that ends right before offset `offset`\r\n */\r\nfunction getPrevCodePoint(str: string, offset: number): number {\r\n\tconst charCode = str.charCodeAt(offset - 1);\r\n\tif (isLowSurrogate(charCode) && offset > 1) {\r\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\r\n\t\tif (isHighSurrogate(prevCharCode)) {\r\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\r\n\t\t}\r\n\t}\r\n\treturn charCode;\r\n}\r\n\r\nexport function nextCharLength(str: string, offset: number): number {\r\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n\tconst initialOffset = offset;\r\n\tconst len = str.length;\r\n\r\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\r\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\r\n\r\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\r\n\twhile (offset < len) {\r\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\r\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\r\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\r\n\t\tgraphemeBreakType = nextGraphemeBreakType;\r\n\t}\r\n\r\n\treturn (offset - initialOffset);\r\n}\r\n\r\nexport function prevCharLength(str: string, offset: number): number {\r\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n\tconst initialOffset = offset;\r\n\r\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\r\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\r\n\r\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\r\n\twhile (offset > 0) {\r\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\r\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\r\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\r\n\t\tgraphemeBreakType = prevGraphemeBreakType;\r\n\t}\r\n\r\n\treturn (initialOffset - offset);\r\n}\r\n\r\n/**\r\n * A manual decoding of a UTF8 string.\r\n * Use only in environments which do not offer native conversion methods!\r\n */\r\nexport function decodeUTF8(buffer: Uint8Array): string {\r\n\t// https://en.wikipedia.org/wiki/UTF-8\r\n\r\n\tconst len = buffer.byteLength;\r\n\tconst result: string[] = [];\r\n\tlet offset = 0;\r\n\twhile (offset < len) {\r\n\t\tconst v0 = buffer[offset];\r\n\t\tlet codePoint: number;\r\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\r\n\t\t\t// 4 bytes\r\n\t\t\tcodePoint = (\r\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\r\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\r\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\r\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\r\n\t\t\t);\r\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\r\n\t\t\t// 3 bytes\r\n\t\t\tcodePoint = (\r\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\r\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\r\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\r\n\t\t\t);\r\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\r\n\t\t\t// 2 bytes\r\n\t\t\tcodePoint = (\r\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\r\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t// 1 byte\r\n\t\t\tcodePoint = buffer[offset++];\r\n\t\t}\r\n\r\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\r\n\t\t\t// Basic Multilingual Plane\r\n\t\t\tresult.push(String.fromCharCode(codePoint));\r\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\r\n\t\t\t// Supplementary Planes\r\n\t\t\tconst uPrime = codePoint - 0x10000;\r\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\r\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\r\n\t\t\tresult.push(String.fromCharCode(w1));\r\n\t\t\tresult.push(String.fromCharCode(w2));\r\n\t\t} else {\r\n\t\t\t// illegal code point\r\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\r\n\t\t}\r\n\t}\r\n\r\n\treturn result.join('');\r\n}\r\n\r\n/**\r\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\r\n */\r\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\r\n\r\n/**\r\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\r\n */\r\nexport function containsRTL(str: string): boolean {\r\n\treturn CONTAINS_RTL.test(str);\r\n}\r\n\r\n/**\r\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\r\n\r\nexport function containsEmoji(str: string): boolean {\r\n\treturn CONTAINS_EMOJI.test(str);\r\n}\r\n\r\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\r\n/**\r\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\r\n */\r\nexport function isBasicASCII(str: string): boolean {\r\n\treturn IS_BASIC_ASCII.test(str);\r\n}\r\n\r\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\r\n/**\r\n * Returns true if `str` contains unusual line terminators, like LS or PS\r\n */\r\nexport function containsUnusualLineTerminators(str: string): boolean {\r\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\r\n}\r\n\r\nexport function containsFullWidthCharacter(str: string): boolean {\r\n\tfor (let i = 0, len = str.length; i < len; i++) {\r\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport function isFullWidthCharacter(charCode: number): boolean {\r\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\r\n\t// http://jrgraphix.net/research/unicode_blocks.php\r\n\t//          2E80 — 2EFF   CJK Radicals Supplement\r\n\t//          2F00 — 2FDF   Kangxi Radicals\r\n\t//          2FF0 — 2FFF   Ideographic Description Characters\r\n\t//          3000 — 303F   CJK Symbols and Punctuation\r\n\t//          3040 — 309F   Hiragana\r\n\t//          30A0 — 30FF   Katakana\r\n\t//          3100 — 312F   Bopomofo\r\n\t//          3130 — 318F   Hangul Compatibility Jamo\r\n\t//          3190 — 319F   Kanbun\r\n\t//          31A0 — 31BF   Bopomofo Extended\r\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\r\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\r\n\t//          3300 — 33FF   CJK Compatibility\r\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\r\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\r\n\t//          4E00 — 9FFF   CJK Unified Ideographs\r\n\t//          A000 — A48F   Yi Syllables\r\n\t//          A490 — A4CF   Yi Radicals\r\n\t//          AC00 — D7AF   Hangul Syllables\r\n\t// [IGNORE] D800 — DB7F   High Surrogates\r\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\r\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\r\n\t// [IGNORE] E000 — F8FF   Private Use Area\r\n\t//          F900 — FAFF   CJK Compatibility Ideographs\r\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\r\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\r\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\r\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\r\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\r\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\r\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\r\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\r\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\r\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\r\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\r\n\t// [IGNORE] FFF0 — FFFF   Specials\r\n\tcharCode = +charCode; // @perf\r\n\treturn (\r\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\r\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\r\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\r\n\t);\r\n}\r\n\r\n/**\r\n * A fast function (therefore imprecise) to check if code points are emojis.\r\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nexport function isEmojiImprecise(x: number): boolean {\r\n\treturn (\r\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\r\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\r\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\r\n\t\t|| (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\r\n\t\t|| (x >= 129648 && x <= 129750)\r\n\t);\r\n}\r\n\r\n// -- UTF-8 BOM\r\n\r\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\r\n\r\nexport function startsWithUTF8BOM(str: string): boolean {\r\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\r\n}\r\n\r\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\r\n\tif (!target) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (ignoreEscapedChars) {\r\n\t\ttarget = target.replace(/\\\\./g, '');\r\n\t}\r\n\r\n\treturn target.toLowerCase() !== target;\r\n}\r\n\r\n/**\r\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\r\n */\r\nexport function singleLetterHash(n: number): string {\r\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\r\n\r\n\tn = n % (2 * LETTERS_CNT);\r\n\r\n\tif (n < LETTERS_CNT) {\r\n\t\treturn String.fromCharCode(CharCode.a + n);\r\n\t}\r\n\r\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\r\n}\r\n\r\n//#region Unicode Grapheme Break\r\n\r\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\r\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\r\n}\r\n\r\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\r\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\r\n\r\n\t// !!! Let's make the common case a bit faster\r\n\tif (breakTypeA === GraphemeBreakType.Other) {\r\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\r\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\r\n\t}\r\n\r\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\r\n\t// GB3                                        CR × LF\r\n\t// GB4                       (Control | CR | LF) ÷\r\n\t// GB5                                           ÷ (Control | CR | LF)\r\n\tif (breakTypeA === GraphemeBreakType.CR) {\r\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\r\n\t\t\treturn false; // GB3\r\n\t\t}\r\n\t}\r\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\r\n\t\treturn true; // GB4\r\n\t}\r\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\r\n\t\treturn true; // GB5\r\n\t}\r\n\r\n\t// Do not break Hangul syllable sequences.\r\n\t// GB6                                         L × (L | V | LV | LVT)\r\n\t// GB7                                  (LV | V) × (V | T)\r\n\t// GB8                                 (LVT | T) × T\r\n\tif (breakTypeA === GraphemeBreakType.L) {\r\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\r\n\t\t\treturn false; // GB6\r\n\t\t}\r\n\t}\r\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\r\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\r\n\t\t\treturn false; // GB7\r\n\t\t}\r\n\t}\r\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\r\n\t\tif (breakTypeB === GraphemeBreakType.T) {\r\n\t\t\treturn false; // GB8\r\n\t\t}\r\n\t}\r\n\r\n\t// Do not break before extending characters or ZWJ.\r\n\t// GB9                                           × (Extend | ZWJ)\r\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\r\n\t\treturn false; // GB9\r\n\t}\r\n\r\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\r\n\t// Do not break before SpacingMarks, or after Prepend characters.\r\n\t// GB9a                                          × SpacingMark\r\n\t// GB9b                                  Prepend ×\r\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\r\n\t\treturn false; // GB9a\r\n\t}\r\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\r\n\t\treturn false; // GB9b\r\n\t}\r\n\r\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\r\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\r\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\r\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\r\n\t\treturn false; // GB11\r\n\t}\r\n\r\n\t// GB12                          sot (RI RI)* RI × RI\r\n\t// GB13                        [^RI] (RI RI)* RI × RI\r\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\r\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\r\n\t\treturn false; // GB12 & GB13\r\n\t}\r\n\r\n\t// GB999                                     Any ÷ Any\r\n\treturn true;\r\n}\r\n\r\nexport const enum GraphemeBreakType {\r\n\tOther = 0,\r\n\tPrepend = 1,\r\n\tCR = 2,\r\n\tLF = 3,\r\n\tControl = 4,\r\n\tExtend = 5,\r\n\tRegional_Indicator = 6,\r\n\tSpacingMark = 7,\r\n\tL = 8,\r\n\tV = 9,\r\n\tT = 10,\r\n\tLV = 11,\r\n\tLVT = 12,\r\n\tZWJ = 13,\r\n\tExtended_Pictographic = 14\r\n}\r\n\r\nclass GraphemeBreakTree {\r\n\r\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\r\n\tpublic static getInstance(): GraphemeBreakTree {\r\n\t\tif (!GraphemeBreakTree._INSTANCE) {\r\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\r\n\t\t}\r\n\t\treturn GraphemeBreakTree._INSTANCE;\r\n\t}\r\n\r\n\tprivate readonly _data: number[];\r\n\r\n\tconstructor() {\r\n\t\tthis._data = getGraphemeBreakRawData();\r\n\t}\r\n\r\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\r\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\r\n\t\tif (codePoint < 32) {\r\n\t\t\tif (codePoint === CharCode.LineFeed) {\r\n\t\t\t\treturn GraphemeBreakType.LF;\r\n\t\t\t}\r\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\r\n\t\t\t\treturn GraphemeBreakType.CR;\r\n\t\t\t}\r\n\t\t\treturn GraphemeBreakType.Control;\r\n\t\t}\r\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\r\n\t\tif (codePoint < 127) {\r\n\t\t\treturn GraphemeBreakType.Other;\r\n\t\t}\r\n\r\n\t\tconst data = this._data;\r\n\t\tconst nodeCount = data.length / 3;\r\n\t\tlet nodeIndex = 1;\r\n\t\twhile (nodeIndex <= nodeCount) {\r\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\r\n\t\t\t\t// go left\r\n\t\t\t\tnodeIndex = 2 * nodeIndex;\r\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\r\n\t\t\t\t// go right\r\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\r\n\t\t\t} else {\r\n\t\t\t\t// hit\r\n\t\t\t\treturn data[3 * nodeIndex + 2];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn GraphemeBreakType.Other;\r\n\t}\r\n}\r\n\r\nfunction getGraphemeBreakRawData(): number[] {\r\n\t// generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\r\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\r\n}\r\n\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport * as strings from 'vs/base/common/strings';\r\n\r\n/**\r\n * Return a hash value for an object.\r\n */\r\nexport function hash(obj: any): number {\r\n\treturn doHash(obj, 0);\r\n}\r\n\r\nexport function doHash(obj: any, hashVal: number): number {\r\n\tswitch (typeof obj) {\r\n\t\tcase 'object':\r\n\t\t\tif (obj === null) {\r\n\t\t\t\treturn numberHash(349, hashVal);\r\n\t\t\t} else if (Array.isArray(obj)) {\r\n\t\t\t\treturn arrayHash(obj, hashVal);\r\n\t\t\t}\r\n\t\t\treturn objectHash(obj, hashVal);\r\n\t\tcase 'string':\r\n\t\t\treturn stringHash(obj, hashVal);\r\n\t\tcase 'boolean':\r\n\t\t\treturn booleanHash(obj, hashVal);\r\n\t\tcase 'number':\r\n\t\t\treturn numberHash(obj, hashVal);\r\n\t\tcase 'undefined':\r\n\t\t\treturn numberHash(937, hashVal);\r\n\t\tdefault:\r\n\t\t\treturn numberHash(617, hashVal);\r\n\t}\r\n}\r\n\r\nfunction numberHash(val: number, initialHashVal: number): number {\r\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\r\n}\r\n\r\nfunction booleanHash(b: boolean, initialHashVal: number): number {\r\n\treturn numberHash(b ? 433 : 863, initialHashVal);\r\n}\r\n\r\nexport function stringHash(s: string, hashVal: number) {\r\n\thashVal = numberHash(149417, hashVal);\r\n\tfor (let i = 0, length = s.length; i < length; i++) {\r\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\r\n\t}\r\n\treturn hashVal;\r\n}\r\n\r\nfunction arrayHash(arr: any[], initialHashVal: number): number {\r\n\tinitialHashVal = numberHash(104579, initialHashVal);\r\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\r\n}\r\n\r\nfunction objectHash(obj: any, initialHashVal: number): number {\r\n\tinitialHashVal = numberHash(181387, initialHashVal);\r\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\r\n\t\thashVal = stringHash(key, hashVal);\r\n\t\treturn doHash(obj[key], hashVal);\r\n\t}, initialHashVal);\r\n}\r\n\r\nconst enum SHA1Constant {\r\n\tBLOCK_SIZE = 64, // 512 / 8\r\n\tUNICODE_REPLACEMENT = 0xFFFD,\r\n}\r\n\r\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\r\n\t// delta + bits = totalBits\r\n\tconst delta = totalBits - bits;\r\n\r\n\t// All ones, expect `delta` zeros aligned to the right\r\n\tconst mask = ~((1 << delta) - 1);\r\n\r\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\r\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\r\n}\r\n\r\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\r\n\tfor (let i = 0; i < count; i++) {\r\n\t\tdest[index + i] = value;\r\n\t}\r\n}\r\n\r\nfunction leftPad(value: string, length: number, char: string = '0'): string {\r\n\twhile (value.length < length) {\r\n\t\tvalue = char + value;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\nexport function toHexString(buffer: ArrayBuffer): string;\r\nexport function toHexString(value: number, bitsize?: number): string;\r\nexport function toHexString(bufferOrValue: ArrayBuffer | number, bitsize: number = 32): string {\r\n\tif (bufferOrValue instanceof ArrayBuffer) {\r\n\t\treturn Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n\t}\r\n\r\n\treturn leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\r\n}\r\n\r\n/**\r\n * A SHA1 implementation that works with strings and does not allocate.\r\n */\r\nexport class StringSHA1 {\r\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\r\n\r\n\tprivate _h0 = 0x67452301;\r\n\tprivate _h1 = 0xEFCDAB89;\r\n\tprivate _h2 = 0x98BADCFE;\r\n\tprivate _h3 = 0x10325476;\r\n\tprivate _h4 = 0xC3D2E1F0;\r\n\r\n\tprivate readonly _buff: Uint8Array;\r\n\tprivate readonly _buffDV: DataView;\r\n\tprivate _buffLen: number;\r\n\tprivate _totalLen: number;\r\n\tprivate _leftoverHighSurrogate: number;\r\n\tprivate _finished: boolean;\r\n\r\n\tconstructor() {\r\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\r\n\t\tthis._buffDV = new DataView(this._buff.buffer);\r\n\t\tthis._buffLen = 0;\r\n\t\tthis._totalLen = 0;\r\n\t\tthis._leftoverHighSurrogate = 0;\r\n\t\tthis._finished = false;\r\n\t}\r\n\r\n\tpublic update(str: string): void {\r\n\t\tconst strLen = str.length;\r\n\t\tif (strLen === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst buff = this._buff;\r\n\t\tlet buffLen = this._buffLen;\r\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\r\n\t\tlet charCode: number;\r\n\t\tlet offset: number;\r\n\r\n\t\tif (leftoverHighSurrogate !== 0) {\r\n\t\t\tcharCode = leftoverHighSurrogate;\r\n\t\t\toffset = -1;\r\n\t\t\tleftoverHighSurrogate = 0;\r\n\t\t} else {\r\n\t\t\tcharCode = str.charCodeAt(0);\r\n\t\t\toffset = 0;\r\n\t\t}\r\n\r\n\t\twhile (true) {\r\n\t\t\tlet codePoint = charCode;\r\n\t\t\tif (strings.isHighSurrogate(charCode)) {\r\n\t\t\t\tif (offset + 1 < strLen) {\r\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\r\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\r\n\t\t\t\t\t\toffset++;\r\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// illegal => unicode replacement character\r\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// last character is a surrogate pair\r\n\t\t\t\t\tleftoverHighSurrogate = charCode;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\r\n\t\t\t\t// illegal => unicode replacement character\r\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\r\n\t\t\t}\r\n\r\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\r\n\t\t\toffset++;\r\n\t\t\tif (offset < strLen) {\r\n\t\t\t\tcharCode = str.charCodeAt(offset);\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._buffLen = buffLen;\r\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\r\n\t}\r\n\r\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\r\n\t\tif (codePoint < 0x0080) {\r\n\t\t\tbuff[buffLen++] = codePoint;\r\n\t\t} else if (codePoint < 0x0800) {\r\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\r\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\r\n\t\t} else if (codePoint < 0x10000) {\r\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\r\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\r\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\r\n\t\t} else {\r\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\r\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\r\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\r\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\r\n\t\t}\r\n\r\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\r\n\t\t\tthis._step();\r\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\r\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\r\n\t\t\t// take last 3 in case of UTF8 overflow\r\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\r\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\r\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\r\n\t\t}\r\n\r\n\t\treturn buffLen;\r\n\t}\r\n\r\n\tpublic digest(): string {\r\n\t\tif (!this._finished) {\r\n\t\t\tthis._finished = true;\r\n\t\t\tif (this._leftoverHighSurrogate) {\r\n\t\t\t\t// illegal => unicode replacement character\r\n\t\t\t\tthis._leftoverHighSurrogate = 0;\r\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\r\n\t\t\t}\r\n\t\t\tthis._totalLen += this._buffLen;\r\n\t\t\tthis._wrapUp();\r\n\t\t}\r\n\r\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\r\n\t}\r\n\r\n\tprivate _wrapUp(): void {\r\n\t\tthis._buff[this._buffLen++] = 0x80;\r\n\t\tfill(this._buff, this._buffLen);\r\n\r\n\t\tif (this._buffLen > 56) {\r\n\t\t\tthis._step();\r\n\t\t\tfill(this._buff);\r\n\t\t}\r\n\r\n\t\t// this will fit because the mantissa can cover up to 52 bits\r\n\t\tconst ml = 8 * this._totalLen;\r\n\r\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\r\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\r\n\r\n\t\tthis._step();\r\n\t}\r\n\r\n\tprivate _step(): void {\r\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\r\n\t\tconst data = this._buffDV;\r\n\r\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\r\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\r\n\t\t}\r\n\r\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\r\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\r\n\t\t}\r\n\r\n\t\tlet a = this._h0;\r\n\t\tlet b = this._h1;\r\n\t\tlet c = this._h2;\r\n\t\tlet d = this._h3;\r\n\t\tlet e = this._h4;\r\n\r\n\t\tlet f: number, k: number;\r\n\t\tlet temp: number;\r\n\r\n\t\tfor (let j = 0; j < 80; j++) {\r\n\t\t\tif (j < 20) {\r\n\t\t\t\tf = (b & c) | ((~b) & d);\r\n\t\t\t\tk = 0x5A827999;\r\n\t\t\t} else if (j < 40) {\r\n\t\t\t\tf = b ^ c ^ d;\r\n\t\t\t\tk = 0x6ED9EBA1;\r\n\t\t\t} else if (j < 60) {\r\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\r\n\t\t\t\tk = 0x8F1BBCDC;\r\n\t\t\t} else {\r\n\t\t\t\tf = b ^ c ^ d;\r\n\t\t\t\tk = 0xCA62C1D6;\r\n\t\t\t}\r\n\r\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\r\n\t\t\te = d;\r\n\t\t\td = c;\r\n\t\t\tc = leftRotate(b, 30);\r\n\t\t\tb = a;\r\n\t\t\ta = temp;\r\n\t\t}\r\n\r\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\r\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\r\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\r\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\r\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\r\nimport { stringHash } from 'vs/base/common/hash';\r\nimport { Constants } from 'vs/base/common/uint';\r\n\r\nexport class StringDiffSequence implements ISequence {\r\n\r\n\tconstructor(private source: string) { }\r\n\r\n\tgetElements(): Int32Array | number[] | string[] {\r\n\t\tconst source = this.source;\r\n\t\tconst characters = new Int32Array(source.length);\r\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\r\n\t\t\tcharacters[i] = source.charCodeAt(i);\r\n\t\t}\r\n\t\treturn characters;\r\n\t}\r\n}\r\n\r\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\r\n\treturn new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\r\n}\r\n\r\nexport interface ISequence {\r\n\tgetElements(): Int32Array | number[] | string[];\r\n}\r\n\r\nexport interface IDiffChange {\r\n\t/**\r\n\t * The position of the first element in the original sequence which\r\n\t * this change affects.\r\n\t */\r\n\toriginalStart: number;\r\n\r\n\t/**\r\n\t * The number of elements from the original sequence which were\r\n\t * affected.\r\n\t */\r\n\toriginalLength: number;\r\n\r\n\t/**\r\n\t * The position of the first element in the modified sequence which\r\n\t * this change affects.\r\n\t */\r\n\tmodifiedStart: number;\r\n\r\n\t/**\r\n\t * The number of elements from the modified sequence which were\r\n\t * affected (added).\r\n\t */\r\n\tmodifiedLength: number;\r\n}\r\n\r\nexport interface IContinueProcessingPredicate {\r\n\t(furthestOriginalIndex: number, matchLengthOfLongest: number): boolean;\r\n}\r\n\r\nexport interface IDiffResult {\r\n\tquitEarly: boolean;\r\n\tchanges: IDiffChange[];\r\n}\r\n\r\n//\r\n// The code below has been ported from a C# implementation in VS\r\n//\r\n\r\nexport class Debug {\r\n\r\n\tpublic static Assert(condition: boolean, message: string): void {\r\n\t\tif (!condition) {\r\n\t\t\tthrow new Error(message);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class MyArray {\r\n\t/**\r\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\r\n\t * them to another Array starting at the specified destination index. The length and the indexes\r\n\t * are specified as 64-bit integers.\r\n\t * sourceArray:\r\n\t *\t\tThe Array that contains the data to copy.\r\n\t * sourceIndex:\r\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\r\n\t * destinationArray:\r\n\t *\t\tThe Array that receives the data.\r\n\t * destinationIndex:\r\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\r\n\t * length:\r\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\r\n\t */\r\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\r\n\t\t}\r\n\t}\r\n\tpublic static Copy2(sourceArray: Int32Array, sourceIndex: number, destinationArray: Int32Array, destinationIndex: number, length: number) {\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//*****************************************************************************\r\n// LcsDiff.cs\r\n//\r\n// An implementation of the difference algorithm described in\r\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n//\r\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\r\n//*****************************************************************************\r\n\r\n// Our total memory usage for storing history is (worst-case):\r\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\r\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\r\nconst enum LocalConstants {\r\n\tMaxDifferencesHistory = 1447\r\n}\r\n\r\n/**\r\n * A utility class which helps to create the set of DiffChanges from\r\n * a difference operation. This class accepts original DiffElements and\r\n * modified DiffElements that are involved in a particular change. The\r\n * MarktNextChange() method can be called to mark the separation between\r\n * distinct changes. At the end, the Changes property can be called to retrieve\r\n * the constructed changes.\r\n */\r\nclass DiffChangeHelper {\r\n\r\n\tprivate m_changes: DiffChange[];\r\n\tprivate m_originalStart: number;\r\n\tprivate m_modifiedStart: number;\r\n\tprivate m_originalCount: number;\r\n\tprivate m_modifiedCount: number;\r\n\r\n\t/**\r\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.m_changes = [];\r\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\r\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\r\n\t\tthis.m_originalCount = 0;\r\n\t\tthis.m_modifiedCount = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the beginning of the next change in the set of differences.\r\n\t */\r\n\tpublic MarkNextChange(): void {\r\n\t\t// Only add to the list if there is something to add\r\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n\t\t\t// Add the new change to our list\r\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\r\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\r\n\t\t}\r\n\r\n\t\t// Reset for the next change\r\n\t\tthis.m_originalCount = 0;\r\n\t\tthis.m_modifiedCount = 0;\r\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\r\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the original element at the given position to the elements\r\n\t * affected by the current change. The modified index gives context\r\n\t * to the change position with respect to the original sequence.\r\n\t * @param originalIndex The index of the original element to add.\r\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\r\n\t */\r\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\r\n\t\t// The 'true' start index is the smallest of the ones we've seen\r\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n\r\n\t\tthis.m_originalCount++;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the modified element at the given position to the elements\r\n\t * affected by the current change. The original index gives context\r\n\t * to the change position with respect to the modified sequence.\r\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\r\n\t * @param modifiedIndex The index of the modified element to add.\r\n\t */\r\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\r\n\t\t// The 'true' start index is the smallest of the ones we've seen\r\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n\r\n\t\tthis.m_modifiedCount++;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all of the changes marked by the class.\r\n\t */\r\n\tpublic getChanges(): DiffChange[] {\r\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n\t\t\t// Finish up on whatever is left\r\n\t\t\tthis.MarkNextChange();\r\n\t\t}\r\n\r\n\t\treturn this.m_changes;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all of the changes marked by the class in the reverse order\r\n\t */\r\n\tpublic getReverseChanges(): DiffChange[] {\r\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n\t\t\t// Finish up on whatever is left\r\n\t\t\tthis.MarkNextChange();\r\n\t\t}\r\n\r\n\t\tthis.m_changes.reverse();\r\n\t\treturn this.m_changes;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * An implementation of the difference algorithm described in\r\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n */\r\nexport class LcsDiff {\r\n\r\n\tprivate readonly ContinueProcessingPredicate: IContinueProcessingPredicate | null;\r\n\r\n\tprivate readonly _hasStrings: boolean;\r\n\tprivate readonly _originalStringElements: string[];\r\n\tprivate readonly _originalElementsOrHash: Int32Array;\r\n\tprivate readonly _modifiedStringElements: string[];\r\n\tprivate readonly _modifiedElementsOrHash: Int32Array;\r\n\r\n\tprivate m_forwardHistory: Int32Array[];\r\n\tprivate m_reverseHistory: Int32Array[];\r\n\r\n\t/**\r\n\t * Constructs the DiffFinder\r\n\t */\r\n\tconstructor(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\r\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\r\n\r\n\t\tconst [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\r\n\t\tconst [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\r\n\r\n\t\tthis._hasStrings = (originalHasStrings && modifiedHasStrings);\r\n\t\tthis._originalStringElements = originalStringElements;\r\n\t\tthis._originalElementsOrHash = originalElementsOrHash;\r\n\t\tthis._modifiedStringElements = modifiedStringElements;\r\n\t\tthis._modifiedElementsOrHash = modifiedElementsOrHash;\r\n\r\n\t\tthis.m_forwardHistory = [];\r\n\t\tthis.m_reverseHistory = [];\r\n\t}\r\n\r\n\tprivate static _isStringArray(arr: Int32Array | number[] | string[]): arr is string[] {\r\n\t\treturn (arr.length > 0 && typeof arr[0] === 'string');\r\n\t}\r\n\r\n\tprivate static _getElements(sequence: ISequence): [string[], Int32Array, boolean] {\r\n\t\tconst elements = sequence.getElements();\r\n\r\n\t\tif (LcsDiff._isStringArray(elements)) {\r\n\t\t\tconst hashes = new Int32Array(elements.length);\r\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\r\n\t\t\t\thashes[i] = stringHash(elements[i], 0);\r\n\t\t\t}\r\n\t\t\treturn [elements, hashes, true];\r\n\t\t}\r\n\r\n\t\tif (elements instanceof Int32Array) {\r\n\t\t\treturn [[], elements, false];\r\n\t\t}\r\n\r\n\t\treturn [[], new Int32Array(elements), false];\r\n\t}\r\n\r\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\r\n\t\tif (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\r\n\t}\r\n\r\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\r\n\t\tif (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\r\n\t}\r\n\r\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\r\n\t\tif (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\r\n\t}\r\n\r\n\tpublic ComputeDiff(pretty: boolean): IDiffResult {\r\n\t\treturn this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the differences between the original and modified input\r\n\t * sequences on the bounded range.\r\n\t * @returns An array of the differences between the two input sequences.\r\n\t */\r\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): IDiffResult {\r\n\t\tconst quitEarlyArr = [false];\r\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\r\n\r\n\t\tif (pretty) {\r\n\t\t\t// We have to clean up the computed diff to be more intuitive\r\n\t\t\t// but it turns out this cannot be done correctly until the entire set\r\n\t\t\t// of diffs have been computed\r\n\t\t\tchanges = this.PrettifyChanges(changes);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tquitEarly: quitEarlyArr[0],\r\n\t\t\tchanges: changes\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Private helper method which computes the differences on the bounded range\r\n\t * recursively.\r\n\t * @returns An array of the differences between the two input sequences.\r\n\t */\r\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\r\n\t\tquitEarlyArr[0] = false;\r\n\r\n\t\t// Find the start of the differences\r\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\r\n\t\t\toriginalStart++;\r\n\t\t\tmodifiedStart++;\r\n\t\t}\r\n\r\n\t\t// Find the end of the differences\r\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\r\n\t\t\toriginalEnd--;\r\n\t\t\tmodifiedEnd--;\r\n\t\t}\r\n\r\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\r\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\r\n\t\t\tlet changes: DiffChange[];\r\n\r\n\t\t\tif (modifiedStart <= modifiedEnd) {\r\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n\r\n\t\t\t\t// All insertions\r\n\t\t\t\tchanges = [\r\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n\t\t\t\t];\r\n\t\t\t} else if (originalStart <= originalEnd) {\r\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n\r\n\t\t\t\t// All deletions\r\n\t\t\t\tchanges = [\r\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\r\n\t\t\t\t];\r\n\t\t\t} else {\r\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n\r\n\t\t\t\t// Identical sequences - No differences\r\n\t\t\t\tchanges = [];\r\n\t\t\t}\r\n\r\n\t\t\treturn changes;\r\n\t\t}\r\n\r\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\r\n\t\tconst midOriginalArr = [0];\r\n\t\tconst midModifiedArr = [0];\r\n\t\tconst result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\r\n\r\n\t\tconst midOriginal = midOriginalArr[0];\r\n\t\tconst midModified = midModifiedArr[0];\r\n\r\n\t\tif (result !== null) {\r\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\r\n\t\t\t// searching for the recursion point\r\n\t\t\treturn result;\r\n\t\t} else if (!quitEarlyArr[0]) {\r\n\t\t\t// We can break the problem down recursively by finding the changes in the\r\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\r\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\r\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\r\n\r\n\t\t\tconst leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\r\n\t\t\tlet rightChanges: DiffChange[] = [];\r\n\r\n\t\t\tif (!quitEarlyArr[0]) {\r\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\r\n\t\t\t} else {\r\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\r\n\t\t\t\t// Consider the entire rest of the sequence different.\r\n\t\t\t\trightChanges = [\r\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\r\n\t\t}\r\n\r\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\r\n\t\treturn [\r\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n\t\t];\r\n\t}\r\n\r\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\r\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\r\n\t\tforwardPoints: Int32Array, reversePoints: Int32Array,\r\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\r\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\r\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]\r\n\t): DiffChange[] {\r\n\t\tlet forwardChanges: DiffChange[] | null = null;\r\n\t\tlet reverseChanges: DiffChange[] | null = null;\r\n\r\n\t\t// First, walk backward through the forward diagonals history\r\n\t\tlet changeHelper = new DiffChangeHelper();\r\n\t\tlet diagonalMin = diagonalForwardStart;\r\n\t\tlet diagonalMax = diagonalForwardEnd;\r\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\r\n\t\tlet lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\r\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\r\n\r\n\t\tdo {\r\n\t\t\t// Get the diagonal index from the relative diagonal number\r\n\t\t\tconst diagonal = diagonalRelative + diagonalForwardBase;\r\n\r\n\t\t\t// Figure out where we came from\r\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n\t\t\t\t// Vertical line (the element is an insert)\r\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\r\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\r\n\t\t\t\t\tchangeHelper.MarkNextChange();\r\n\t\t\t\t}\r\n\t\t\t\tlastOriginalIndex = originalIndex;\r\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\r\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\r\n\t\t\t} else {\r\n\t\t\t\t// Horizontal line (the element is a deletion)\r\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\r\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\r\n\t\t\t\t\tchangeHelper.MarkNextChange();\r\n\t\t\t\t}\r\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\r\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\r\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\r\n\t\t\t}\r\n\r\n\t\t\tif (historyIndex >= 0) {\r\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\r\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\r\n\t\t\t\tdiagonalMin = 1;\r\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\r\n\t\t\t}\r\n\t\t} while (--historyIndex >= -1);\r\n\r\n\t\t// Ironically, we get the forward changes as the reverse of the\r\n\t\t// order we added them since we technically added them backwards\r\n\t\tforwardChanges = changeHelper.getReverseChanges();\r\n\r\n\t\tif (quitEarlyArr[0]) {\r\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\r\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\r\n\r\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\r\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\r\n\r\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\r\n\t\t\t\tconst lastForwardChange = forwardChanges[forwardChanges.length - 1];\r\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\r\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\r\n\t\t\t}\r\n\r\n\t\t\treverseChanges = [\r\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\r\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\t// Now walk backward through the reverse diagonals history\r\n\t\t\tchangeHelper = new DiffChangeHelper();\r\n\t\t\tdiagonalMin = diagonalReverseStart;\r\n\t\t\tdiagonalMax = diagonalReverseEnd;\r\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\r\n\t\t\tlastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\r\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\r\n\r\n\t\t\tdo {\r\n\t\t\t\t// Get the diagonal index from the relative diagonal number\r\n\t\t\t\tconst diagonal = diagonalRelative + diagonalReverseBase;\r\n\r\n\t\t\t\t// Figure out where we came from\r\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n\t\t\t\t\t// Horizontal line (the element is a deletion))\r\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\r\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\r\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\r\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\r\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Vertical line (the element is an insertion)\r\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\r\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\r\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastOriginalIndex = originalIndex;\r\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\r\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (historyIndex >= 0) {\r\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\r\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\r\n\t\t\t\t\tdiagonalMin = 1;\r\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\r\n\t\t\t\t}\r\n\t\t\t} while (--historyIndex >= -1);\r\n\r\n\t\t\t// There are cases where the reverse history will find diffs that\r\n\t\t\t// are correct, but not intuitive, so we need shift them.\r\n\t\t\treverseChanges = changeHelper.getChanges();\r\n\t\t}\r\n\r\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\r\n\t}\r\n\r\n\t/**\r\n\t * Given the range to compute the diff on, this method finds the point:\r\n\t * (midOriginal, midModified)\r\n\t * that exists in the middle of the LCS of the two sequences and\r\n\t * is the point at which the LCS problem may be broken down recursively.\r\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\r\n\t * point is calculated and the full trace is available in memory, then this method\r\n\t * will return the change list.\r\n\t * @param originalStart The start bound of the original sequence range\r\n\t * @param originalEnd The end bound of the original sequence range\r\n\t * @param modifiedStart The start bound of the modified sequence range\r\n\t * @param modifiedEnd The end bound of the modified sequence range\r\n\t * @param midOriginal The middle point of the original sequence range\r\n\t * @param midModified The middle point of the modified sequence range\r\n\t * @returns The diff changes, if available, otherwise null\r\n\t */\r\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\r\n\t\tlet originalIndex = 0, modifiedIndex = 0;\r\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\r\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\r\n\r\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\r\n\t\t// start position is just outside the given boundary\r\n\t\toriginalStart--;\r\n\t\tmodifiedStart--;\r\n\r\n\t\t// We set these up to make the compiler happy, but they will\r\n\t\t// be replaced before we return with the actual recursion point\r\n\t\tmidOriginalArr[0] = 0;\r\n\t\tmidModifiedArr[0] = 0;\r\n\r\n\t\t// Clear out the history\r\n\t\tthis.m_forwardHistory = [];\r\n\t\tthis.m_reverseHistory = [];\r\n\r\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\r\n\t\t// The integer value in the cell represents the originalIndex of the furthest\r\n\t\t// reaching point found so far that ends in that diagonal.\r\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\r\n\t\tconst maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\r\n\t\tconst numDiagonals = maxDifferences + 1;\r\n\t\tconst forwardPoints = new Int32Array(numDiagonals);\r\n\t\tconst reversePoints = new Int32Array(numDiagonals);\r\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\r\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\r\n\t\tconst diagonalForwardBase = (modifiedEnd - modifiedStart);\r\n\t\tconst diagonalReverseBase = (originalEnd - originalStart);\r\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n\t\t//    diagonal number (relative to diagonalForwardBase)\r\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n\t\t//    diagonal number (relative to diagonalReverseBase)\r\n\t\tconst diagonalForwardOffset = (originalStart - modifiedStart);\r\n\t\tconst diagonalReverseOffset = (originalEnd - modifiedEnd);\r\n\r\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\r\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\r\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\r\n\t\tconst delta = diagonalReverseBase - diagonalForwardBase;\r\n\t\tconst deltaIsEven = (delta % 2 === 0);\r\n\r\n\t\t// Here we set up the start and end points as the furthest points found so far\r\n\t\t// in both the forward and reverse directions, respectively\r\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\r\n\t\treversePoints[diagonalReverseBase] = originalEnd;\r\n\r\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\r\n\t\tquitEarlyArr[0] = false;\r\n\r\n\r\n\r\n\t\t// A couple of points:\r\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\r\n\t\t//   The more differences there actually are, the longer this will take.\r\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\r\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\r\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\r\n\t\t//   is even and odd diagonals only when numDifferences is odd.\r\n\t\tfor (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\r\n\t\t\tlet furthestOriginalIndex = 0;\r\n\t\t\tlet furthestModifiedIndex = 0;\r\n\r\n\t\t\t// Run the algorithm in the forward direction\r\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n\t\t\tfor (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\r\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\r\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\r\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\r\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\r\n\t\t\t\t}\r\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\r\n\r\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\r\n\t\t\t\tconst tempOriginalIndex = originalIndex;\r\n\r\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n\t\t\t\t// so long as the elements are equal.\r\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\r\n\t\t\t\t\toriginalIndex++;\r\n\t\t\t\t\tmodifiedIndex++;\r\n\t\t\t\t}\r\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\r\n\r\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\r\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\r\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\r\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\r\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\r\n\t\t\t\t// then check for overlap.\r\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\r\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\r\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\r\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\r\n\r\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\r\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\r\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\r\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\r\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\r\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\r\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\r\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\r\n\t\t\t\t\t\t\t// Just return the recursion point\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\r\n\t\t\tconst matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\r\n\r\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\r\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\r\n\t\t\t\tquitEarlyArr[0] = true;\r\n\r\n\t\t\t\t// Use the furthest distance we got in the forward direction.\r\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\r\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\r\n\r\n\t\t\t\tif (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\r\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\r\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\r\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\r\n\t\t\t\t\t\tforwardPoints, reversePoints,\r\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\r\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\r\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We didn't actually remember enough of the history.\r\n\r\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\r\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\r\n\t\t\t\t\toriginalStart++;\r\n\t\t\t\t\tmodifiedStart++;\r\n\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\r\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Run the algorithm in the reverse direction\r\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n\t\t\tfor (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\r\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\r\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\r\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\r\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\r\n\t\t\t\t}\r\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\r\n\r\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\r\n\t\t\t\tconst tempOriginalIndex = originalIndex;\r\n\r\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n\t\t\t\t// as long as the elements are equal.\r\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\r\n\t\t\t\t\toriginalIndex--;\r\n\t\t\t\t\tmodifiedIndex--;\r\n\t\t\t\t}\r\n\t\t\t\treversePoints[diagonal] = originalIndex;\r\n\r\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\r\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\r\n\t\t\t\t// then check for overlap.\r\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\r\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\r\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\r\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\r\n\r\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\r\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\r\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\r\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\r\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\r\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\r\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\r\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\r\n\t\t\t\t\t\t\t// Just return the recursion point\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Save current vectors to history before the next iteration\r\n\t\t\tif (numDifferences <= LocalConstants.MaxDifferencesHistory) {\r\n\t\t\t\t// We are allocating space for one extra int, which we fill with\r\n\t\t\t\t// the index of the diagonal base index\r\n\t\t\t\tlet temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\r\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\r\n\t\t\t\tMyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\r\n\t\t\t\tthis.m_forwardHistory.push(temp);\r\n\r\n\t\t\t\ttemp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\r\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\r\n\t\t\t\tMyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\r\n\t\t\t\tthis.m_reverseHistory.push(temp);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\r\n\t\t// NOTE: This part is a bit messy\r\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\r\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\r\n\t\t\tforwardPoints, reversePoints,\r\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\r\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\r\n\t\t\tdeltaIsEven, quitEarlyArr\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Shifts the given changes to provide a more intuitive diff.\r\n\t * While the first element in a diff matches the first element after the diff,\r\n\t * we shift the diff down.\r\n\t *\r\n\t * @param changes The list of changes to shift\r\n\t * @returns The shifted changes\r\n\t */\r\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\r\n\r\n\t\t// Shift all the changes down first\r\n\t\tfor (let i = 0; i < changes.length; i++) {\r\n\t\t\tconst change = changes[i];\r\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\r\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\r\n\t\t\tconst checkOriginal = change.originalLength > 0;\r\n\t\t\tconst checkModified = change.modifiedLength > 0;\r\n\r\n\t\t\twhile (change.originalStart + change.originalLength < originalStop &&\r\n\t\t\t\tchange.modifiedStart + change.modifiedLength < modifiedStop &&\r\n\t\t\t\t(!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\r\n\t\t\t\t(!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\r\n\t\t\t\tchange.originalStart++;\r\n\t\t\t\tchange.modifiedStart++;\r\n\t\t\t}\r\n\r\n\t\t\tlet mergedChangeArr: Array<DiffChange | null> = [null];\r\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\r\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\r\n\t\t\t\tchanges.splice(i + 1, 1);\r\n\t\t\t\ti--;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\r\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\r\n\t\t\tconst change = changes[i];\r\n\r\n\t\t\tlet originalStop = 0;\r\n\t\t\tlet modifiedStop = 0;\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tconst prevChange = changes[i - 1];\r\n\t\t\t\tif (prevChange.originalLength > 0) {\r\n\t\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\r\n\t\t\t\t}\r\n\t\t\t\tif (prevChange.modifiedLength > 0) {\r\n\t\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst checkOriginal = change.originalLength > 0;\r\n\t\t\tconst checkModified = change.modifiedLength > 0;\r\n\r\n\t\t\tlet bestDelta = 0;\r\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\r\n\r\n\t\t\tfor (let delta = 1; ; delta++) {\r\n\t\t\t\tconst originalStart = change.originalStart - delta;\r\n\t\t\t\tconst modifiedStart = change.modifiedStart - delta;\r\n\r\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\r\n\r\n\t\t\t\tif (score > bestScore) {\r\n\t\t\t\t\tbestScore = score;\r\n\t\t\t\t\tbestDelta = delta;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchange.originalStart -= bestDelta;\r\n\t\t\tchange.modifiedStart -= bestDelta;\r\n\t\t}\r\n\r\n\t\t// There could be multiple longest common substrings.\r\n\t\t// Give preference to the ones containing longer lines\r\n\t\tif (this._hasStrings) {\r\n\t\t\tfor (let i = 1, len = changes.length; i < len; i++) {\r\n\t\t\t\tconst aChange = changes[i - 1];\r\n\t\t\t\tconst bChange = changes[i];\r\n\t\t\t\tconst matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\r\n\t\t\t\tconst aOriginalStart = aChange.originalStart;\r\n\t\t\t\tconst bOriginalEnd = bChange.originalStart + bChange.originalLength;\r\n\t\t\t\tconst abOriginalLength = bOriginalEnd - aOriginalStart;\r\n\t\t\t\tconst aModifiedStart = aChange.modifiedStart;\r\n\t\t\t\tconst bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\r\n\t\t\t\tconst abModifiedLength = bModifiedEnd - aModifiedStart;\r\n\t\t\t\t// Avoid wasting a lot of time with these searches\r\n\t\t\t\tif (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\r\n\t\t\t\t\tconst t = this._findBetterContiguousSequence(\r\n\t\t\t\t\t\taOriginalStart, abOriginalLength,\r\n\t\t\t\t\t\taModifiedStart, abModifiedLength,\r\n\t\t\t\t\t\tmatchedLength\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (t) {\r\n\t\t\t\t\t\tconst [originalMatchStart, modifiedMatchStart] = t;\r\n\t\t\t\t\t\tif (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\r\n\t\t\t\t\t\t\t// switch to another sequence that has a better score\r\n\t\t\t\t\t\t\taChange.originalLength = originalMatchStart - aChange.originalStart;\r\n\t\t\t\t\t\t\taChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\r\n\t\t\t\t\t\t\tbChange.originalStart = originalMatchStart + matchedLength;\r\n\t\t\t\t\t\t\tbChange.modifiedStart = modifiedMatchStart + matchedLength;\r\n\t\t\t\t\t\t\tbChange.originalLength = bOriginalEnd - bChange.originalStart;\r\n\t\t\t\t\t\t\tbChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changes;\r\n\t}\r\n\r\n\tprivate _findBetterContiguousSequence(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number, desiredLength: number): [number, number] | null {\r\n\t\tif (originalLength < desiredLength || modifiedLength < desiredLength) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst originalMax = originalStart + originalLength - desiredLength + 1;\r\n\t\tconst modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\r\n\t\tlet bestScore = 0;\r\n\t\tlet bestOriginalStart = 0;\r\n\t\tlet bestModifiedStart = 0;\r\n\t\tfor (let i = originalStart; i < originalMax; i++) {\r\n\t\t\tfor (let j = modifiedStart; j < modifiedMax; j++) {\r\n\t\t\t\tconst score = this._contiguousSequenceScore(i, j, desiredLength);\r\n\t\t\t\tif (score > 0 && score > bestScore) {\r\n\t\t\t\t\tbestScore = score;\r\n\t\t\t\t\tbestOriginalStart = i;\r\n\t\t\t\t\tbestModifiedStart = j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (bestScore > 0) {\r\n\t\t\treturn [bestOriginalStart, bestModifiedStart];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate _contiguousSequenceScore(originalStart: number, modifiedStart: number, length: number): number {\r\n\t\tlet score = 0;\r\n\t\tfor (let l = 0; l < length; l++) {\r\n\t\t\tif (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tscore += this._originalStringElements[originalStart + l].length;\r\n\t\t}\r\n\t\treturn score;\r\n\t}\r\n\r\n\tprivate _OriginalIsBoundary(index: number): boolean {\r\n\t\tif (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\r\n\t}\r\n\r\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\r\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (originalLength > 0) {\r\n\t\t\tconst originalEnd = originalStart + originalLength;\r\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate _ModifiedIsBoundary(index: number): boolean {\r\n\t\tif (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\r\n\t}\r\n\r\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\r\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (modifiedLength > 0) {\r\n\t\t\tconst modifiedEnd = modifiedStart + modifiedLength;\r\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\r\n\t\tconst originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\r\n\t\tconst modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\r\n\t\treturn (originalScore + modifiedScore);\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates the two input DiffChange lists and returns the resulting\r\n\t * list.\r\n\t * @param The left changes\r\n\t * @param The right changes\r\n\t * @returns The concatenated list\r\n\t */\r\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\r\n\t\tlet mergedChangeArr: DiffChange[] = [];\r\n\r\n\t\tif (left.length === 0 || right.length === 0) {\r\n\t\t\treturn (right.length > 0) ? right : left;\r\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\r\n\t\t\t// Since we break the problem down recursively, it is possible that we\r\n\t\t\t// might recurse in the middle of a change thereby splitting it into\r\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\r\n\t\t\t// changes back together\r\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length - 1);\r\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\r\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\r\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\r\n\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length);\r\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\r\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the two changes overlap and can be merged into a single\r\n\t * change\r\n\t * @param left The left change\r\n\t * @param right The right change\r\n\t * @param mergedChange The merged change if the two overlap, null otherwise\r\n\t * @returns True if the two changes overlap\r\n\t */\r\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\r\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\r\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\r\n\r\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n\t\t\tconst originalStart = left.originalStart;\r\n\t\t\tlet originalLength = left.originalLength;\r\n\t\t\tconst modifiedStart = left.modifiedStart;\r\n\t\t\tlet modifiedLength = left.modifiedLength;\r\n\r\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\r\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\r\n\t\t\t}\r\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\r\n\t\t\t}\r\n\r\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tmergedChangeArr[0] = null;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method used to clip a diagonal index to the range of valid\r\n\t * diagonals. This also decides whether or not the diagonal index,\r\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\r\n\t * one inside the boundary depending on the Even/Odd status of the boundary\r\n\t * and numDifferences.\r\n\t * @param diagonal The index of the diagonal to clip.\r\n\t * @param numDifferences The current number of differences being iterated upon.\r\n\t * @param diagonalBaseIndex The base reference diagonal.\r\n\t * @param numDiagonals The total number of diagonals.\r\n\t * @returns The clipped diagonal index.\r\n\t */\r\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\r\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\r\n\t\t\t// Nothing to clip, its in range\r\n\t\t\treturn diagonal;\r\n\t\t}\r\n\r\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\r\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\r\n\t\tconst diagonalsBelow = diagonalBaseIndex;\r\n\t\tconst diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\r\n\t\tconst diffEven = (numDifferences % 2 === 0);\r\n\r\n\t\tif (diagonal < 0) {\r\n\t\t\tconst lowerBoundEven = (diagonalsBelow % 2 === 0);\r\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\r\n\t\t} else {\r\n\t\t\tconst upperBoundEven = (diagonalsAbove % 2 === 0);\r\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\r\n\t\t}\r\n\t}\r\n}\r\n","\r\n\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\r\nexport function isArray(array: any): array is any[] {\r\n\treturn Array.isArray(array);\r\n}\r\n\r\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\r\nexport function isString(str: unknown): str is string {\r\n\treturn (typeof str === 'string');\r\n}\r\n\r\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\r\nexport function isObject(obj: unknown): obj is Object {\r\n\t// The method can't do a type cast since there are type (like strings) which\r\n\t// are subclasses of any put not positvely matched by the function. Hence type\r\n\t// narrowing results in wrong results.\r\n\treturn typeof obj === 'object'\r\n\t\t&& obj !== null\r\n\t\t&& !Array.isArray(obj)\r\n\t\t&& !(obj instanceof RegExp)\r\n\t\t&& !(obj instanceof Date);\r\n}\r\n\r\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\r\nexport function isNumber(obj: unknown): obj is number {\r\n\treturn (typeof obj === 'number' && !isNaN(obj));\r\n}\r\n\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\r\nexport function isBoolean(obj: unknown): obj is boolean {\r\n\treturn (obj === true || obj === false);\r\n}\r\n\r\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\r\nexport function isUndefined(obj: unknown): obj is undefined {\r\n\treturn (typeof obj === 'undefined');\r\n}\r\n\r\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\r\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\r\n\treturn (isUndefined(obj) || obj === null);\r\n}\r\n\r\n\r\nexport function assertType(condition: unknown, type?: string): asserts condition {\r\n\tif (!condition) {\r\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\r\n\t}\r\n}\r\n\r\n/**\r\n * Asserts that the argument passed in is neither undefined nor null.\r\n */\r\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\r\n\tif (isUndefinedOrNull(arg)) {\r\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\r\n\t}\r\n\r\n\treturn arg;\r\n}\r\n\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\r\nexport function isFunction(obj: unknown): obj is Function {\r\n\treturn (typeof obj === 'function');\r\n}\r\n\r\nexport type TypeConstraint = string | Function;\r\n\r\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\r\n\tconst len = Math.min(args.length, constraints.length);\r\n\tfor (let i = 0; i < len; i++) {\r\n\t\tvalidateConstraint(args[i], constraints[i]);\r\n\t}\r\n}\r\n\r\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\r\n\r\n\tif (isString(constraint)) {\r\n\t\tif (typeof arg !== constraint) {\r\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\r\n\t\t}\r\n\t} else if (isFunction(constraint)) {\r\n\t\ttry {\r\n\t\t\tif (arg instanceof constraint) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\t// ignore\r\n\t\t}\r\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\r\n\t}\r\n}\r\n\r\nexport function getAllPropertyNames(obj: object): string[] {\r\n\tlet res: string[] = [];\r\n\tlet proto = Object.getPrototypeOf(obj);\r\n\twhile (Object.prototype !== proto) {\r\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\r\n\t\tproto = Object.getPrototypeOf(proto);\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nexport function getAllMethodNames(obj: object): string[] {\r\n\tconst methods: string[] = [];\r\n\tfor (const prop of getAllPropertyNames(obj)) {\r\n\t\tif (typeof (obj as any)[prop] === 'function') {\r\n\t\t\tmethods.push(prop);\r\n\t\t}\r\n\t}\r\n\treturn methods;\r\n}\r\n\r\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\r\n\tconst createProxyMethod = (method: string): () => unknown => {\r\n\t\treturn function () {\r\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\r\n\t\t\treturn invoke(method, args);\r\n\t\t};\r\n\t};\r\n\r\n\tlet result = {} as T;\r\n\tfor (const methodName of methodNames) {\r\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\r\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\r\n\treturn x === null ? undefined : x;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nexport const enum Constants {\r\n\t/**\r\n\t * MAX SMI (SMall Integer) as defined in v8.\r\n\t * one bit is lost for boxing/unboxing flag.\r\n\t * one bit is lost for sign flag.\r\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\r\n\t */\r\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\r\n\r\n\t/**\r\n\t * MIN SMI (SMall Integer) as defined in v8.\r\n\t * one bit is lost for boxing/unboxing flag.\r\n\t * one bit is lost for sign flag.\r\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\r\n\t */\r\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\r\n\r\n\t/**\r\n\t * Max unsigned integer that fits on 8 bits.\r\n\t */\r\n\tMAX_UINT_8 = 255, // 2^8 - 1\r\n\r\n\t/**\r\n\t * Max unsigned integer that fits on 16 bits.\r\n\t */\r\n\tMAX_UINT_16 = 65535, // 2^16 - 1\r\n\r\n\t/**\r\n\t * Max unsigned integer that fits on 32 bits.\r\n\t */\r\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\r\n\r\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\r\n}\r\n\r\nexport function toUint8(v: number): number {\r\n\tif (v < 0) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (v > Constants.MAX_UINT_8) {\r\n\t\treturn Constants.MAX_UINT_8;\r\n\t}\r\n\treturn v | 0;\r\n}\r\n\r\nexport function toUint32(v: number): number {\r\n\tif (v < 0) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (v > Constants.MAX_UINT_32) {\r\n\t\treturn Constants.MAX_UINT_32;\r\n\t}\r\n\treturn v | 0;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { isWindows } from 'vs/base/common/platform';\r\nimport { CharCode } from 'vs/base/common/charCode';\r\nimport * as paths from 'vs/base/common/path';\r\n\r\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\r\nconst _singleSlashStart = /^\\//;\r\nconst _doubleSlashStart = /^\\/\\//;\r\n\r\nfunction _validateUri(ret: URI, _strict?: boolean): void {\r\n\r\n\t// scheme, must be set\r\n\tif (!ret.scheme && _strict) {\r\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\r\n\t}\r\n\r\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\r\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\r\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\r\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\r\n\t}\r\n\r\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\r\n\t// If a URI contains an authority component, then the path component\r\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\r\n\t// does not contain an authority component, then the path cannot begin\r\n\t// with two slash characters (\"//\").\r\n\tif (ret.path) {\r\n\t\tif (ret.authority) {\r\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\r\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\r\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// for a while we allowed uris *without* schemes and this is the migration\r\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\r\n// back to the file-scheme. that should cause the least carnage and still be a\r\n// clear warning\r\nfunction _schemeFix(scheme: string, _strict: boolean): string {\r\n\tif (!scheme && !_strict) {\r\n\t\treturn 'file';\r\n\t}\r\n\treturn scheme;\r\n}\r\n\r\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\r\nfunction _referenceResolution(scheme: string, path: string): string {\r\n\r\n\t// the slash-character is our 'default base' as we don't\r\n\t// support constructing URIs relative to other URIs. This\r\n\t// also means that we alter and potentially break paths.\r\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\r\n\tswitch (scheme) {\r\n\t\tcase 'https':\r\n\t\tcase 'http':\r\n\t\tcase 'file':\r\n\t\t\tif (!path) {\r\n\t\t\t\tpath = _slash;\r\n\t\t\t} else if (path[0] !== _slash) {\r\n\t\t\t\tpath = _slash + path;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\treturn path;\r\n}\r\n\r\nconst _empty = '';\r\nconst _slash = '/';\r\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\r\n\r\n/**\r\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\r\n * This class is a simple parser which creates the basic component parts\r\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\r\n * and encoding.\r\n *\r\n * ```txt\r\n *       foo://example.com:8042/over/there?name=ferret#nose\r\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\r\n *        |           |            |            |        |\r\n *     scheme     authority       path        query   fragment\r\n *        |   _____________________|__\r\n *       / \\ /                        \\\r\n *       urn:example:animal:ferret:nose\r\n * ```\r\n */\r\nexport class URI implements UriComponents {\r\n\r\n\tstatic isUri(thing: any): thing is URI {\r\n\t\tif (thing instanceof URI) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!thing) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn typeof (<URI>thing).authority === 'string'\r\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\r\n\t\t\t&& typeof (<URI>thing).path === 'string'\r\n\t\t\t&& typeof (<URI>thing).query === 'string'\r\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\r\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\r\n\t\t\t&& typeof (<URI>thing).with === 'function'\r\n\t\t\t&& typeof (<URI>thing).toString === 'function';\r\n\t}\r\n\r\n\t/**\r\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\r\n\t * The part before the first colon.\r\n\t */\r\n\treadonly scheme: string;\r\n\r\n\t/**\r\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\r\n\t * The part between the first double slashes and the next slash.\r\n\t */\r\n\treadonly authority: string;\r\n\r\n\t/**\r\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\r\n\t */\r\n\treadonly path: string;\r\n\r\n\t/**\r\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\r\n\t */\r\n\treadonly query: string;\r\n\r\n\t/**\r\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\r\n\t */\r\n\treadonly fragment: string;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected constructor(components: UriComponents);\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\r\n\r\n\t\tif (typeof schemeOrData === 'object') {\r\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\r\n\t\t\tthis.authority = schemeOrData.authority || _empty;\r\n\t\t\tthis.path = schemeOrData.path || _empty;\r\n\t\t\tthis.query = schemeOrData.query || _empty;\r\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\r\n\t\t\t// no validation because it's this URI\r\n\t\t\t// that creates uri components.\r\n\t\t\t// _validateUri(this);\r\n\t\t} else {\r\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\r\n\t\t\tthis.authority = authority || _empty;\r\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\r\n\t\t\tthis.query = query || _empty;\r\n\t\t\tthis.fragment = fragment || _empty;\r\n\r\n\t\t\t_validateUri(this, _strict);\r\n\t\t}\r\n\t}\r\n\r\n\t// ---- filesystem path -----------------------\r\n\r\n\t/**\r\n\t * Returns a string representing the corresponding file system path of this URI.\r\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\r\n\t * platform specific path separator.\r\n\t *\r\n\t * * Will *not* validate the path for invalid characters and semantics.\r\n\t * * Will *not* look at the scheme of this URI.\r\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\r\n\t *\r\n\t *\r\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\r\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\r\n\t *\r\n\t * ```ts\r\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\r\n\t\tu.authority === 'server'\r\n\t\tu.path === '/shares/c$/file.txt'\r\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\r\n\t```\r\n\t *\r\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\r\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\r\n\t * with URIs that represent files on disk (`file` scheme).\r\n\t */\r\n\tget fsPath(): string {\r\n\t\t// if (this.scheme !== 'file') {\r\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\r\n\t\t// }\r\n\t\treturn uriToFsPath(this, false);\r\n\t}\r\n\r\n\t// ---- modify to new -------------------------\r\n\r\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\r\n\r\n\t\tif (!change) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlet { scheme, authority, path, query, fragment } = change;\r\n\t\tif (scheme === undefined) {\r\n\t\t\tscheme = this.scheme;\r\n\t\t} else if (scheme === null) {\r\n\t\t\tscheme = _empty;\r\n\t\t}\r\n\t\tif (authority === undefined) {\r\n\t\t\tauthority = this.authority;\r\n\t\t} else if (authority === null) {\r\n\t\t\tauthority = _empty;\r\n\t\t}\r\n\t\tif (path === undefined) {\r\n\t\t\tpath = this.path;\r\n\t\t} else if (path === null) {\r\n\t\t\tpath = _empty;\r\n\t\t}\r\n\t\tif (query === undefined) {\r\n\t\t\tquery = this.query;\r\n\t\t} else if (query === null) {\r\n\t\t\tquery = _empty;\r\n\t\t}\r\n\t\tif (fragment === undefined) {\r\n\t\t\tfragment = this.fragment;\r\n\t\t} else if (fragment === null) {\r\n\t\t\tfragment = _empty;\r\n\t\t}\r\n\r\n\t\tif (scheme === this.scheme\r\n\t\t\t&& authority === this.authority\r\n\t\t\t&& path === this.path\r\n\t\t\t&& query === this.query\r\n\t\t\t&& fragment === this.fragment) {\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn new Uri(scheme, authority, path, query, fragment);\r\n\t}\r\n\r\n\t// ---- parse & validate ------------------------\r\n\r\n\t/**\r\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\r\n\t * `file:///usr/home`, or `scheme:with/path`.\r\n\t *\r\n\t * @param value A string which represents an URI (see `URI#toString`).\r\n\t */\r\n\tstatic parse(value: string, _strict: boolean = false): URI {\r\n\t\tconst match = _regexp.exec(value);\r\n\t\tif (!match) {\r\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\r\n\t\t}\r\n\t\treturn new Uri(\r\n\t\t\tmatch[2] || _empty,\r\n\t\t\tpercentDecode(match[4] || _empty),\r\n\t\t\tpercentDecode(match[5] || _empty),\r\n\t\t\tpercentDecode(match[7] || _empty),\r\n\t\t\tpercentDecode(match[9] || _empty),\r\n\t\t\t_strict\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\r\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\r\n\t *\r\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\r\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\r\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\r\n\t * interpreted (# and ?). See the following sample:\r\n\t * ```ts\r\n\tconst good = URI.file('/coding/c#/project1');\r\n\tgood.scheme === 'file';\r\n\tgood.path === '/coding/c#/project1';\r\n\tgood.fragment === '';\r\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\r\n\tbad.scheme === 'file';\r\n\tbad.path === '/coding/c'; // path is now broken\r\n\tbad.fragment === '/project1';\r\n\t```\r\n\t *\r\n\t * @param path A file system path (see `URI#fsPath`)\r\n\t */\r\n\tstatic file(path: string): URI {\r\n\r\n\t\tlet authority = _empty;\r\n\r\n\t\t// normalize to fwd-slashes on windows,\r\n\t\t// on other systems bwd-slashes are valid\r\n\t\t// filename character, eg /f\\oo/ba\\r.txt\r\n\t\tif (isWindows) {\r\n\t\t\tpath = path.replace(/\\\\/g, _slash);\r\n\t\t}\r\n\r\n\t\t// check for authority as used in UNC shares\r\n\t\t// or use the path as given\r\n\t\tif (path[0] === _slash && path[1] === _slash) {\r\n\t\t\tconst idx = path.indexOf(_slash, 2);\r\n\t\t\tif (idx === -1) {\r\n\t\t\t\tauthority = path.substring(2);\r\n\t\t\t\tpath = _slash;\r\n\t\t\t} else {\r\n\t\t\t\tauthority = path.substring(2, idx);\r\n\t\t\t\tpath = path.substring(idx) || _slash;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Uri('file', authority, path, _empty, _empty);\r\n\t}\r\n\r\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\r\n\t\treturn new Uri(\r\n\t\t\tcomponents.scheme,\r\n\t\t\tcomponents.authority,\r\n\t\t\tcomponents.path,\r\n\t\t\tcomponents.query,\r\n\t\t\tcomponents.fragment,\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Join a URI path with path fragments and normalizes the resulting path.\r\n\t *\r\n\t * @param uri The input URI.\r\n\t * @param pathFragment The path fragment to add to the URI path.\r\n\t * @returns The resulting URI.\r\n\t */\r\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\r\n\t\tif (!uri.path) {\r\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\r\n\t\t}\r\n\t\tlet newPath: string;\r\n\t\tif (isWindows && uri.scheme === 'file') {\r\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\r\n\t\t} else {\r\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\r\n\t\t}\r\n\t\treturn uri.with({ path: newPath });\r\n\t}\r\n\r\n\t// ---- printing/externalize ---------------------------\r\n\r\n\t/**\r\n\t * Creates a string representation for this URI. It's guaranteed that calling\r\n\t * `URI.parse` with the result of this function creates an URI which is equal\r\n\t * to this URI.\r\n\t *\r\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\r\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\r\n\t * ignore the scheme-specific encoding rules.\r\n\t *\r\n\t * @param skipEncoding Do not encode the result, default is `false`\r\n\t */\r\n\ttoString(skipEncoding: boolean = false): string {\r\n\t\treturn _asFormatted(this, skipEncoding);\r\n\t}\r\n\r\n\ttoJSON(): UriComponents {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic revive(data: UriComponents | URI): URI;\r\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\r\n\tstatic revive(data: UriComponents | URI | null): URI | null;\r\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\r\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\r\n\t\tif (!data) {\r\n\t\t\treturn data;\r\n\t\t} else if (data instanceof URI) {\r\n\t\t\treturn data;\r\n\t\t} else {\r\n\t\t\tconst result = new Uri(data);\r\n\t\t\tresult._formatted = (<UriState>data).external;\r\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface UriComponents {\r\n\tscheme: string;\r\n\tauthority: string;\r\n\tpath: string;\r\n\tquery: string;\r\n\tfragment: string;\r\n}\r\n\r\ninterface UriState extends UriComponents {\r\n\t$mid: number;\r\n\texternal: string;\r\n\tfsPath: string;\r\n\t_sep: 1 | undefined;\r\n}\r\n\r\nconst _pathSepMarker = isWindows ? 1 : undefined;\r\n\r\n// This class exists so that URI is compatibile with vscode.Uri (API).\r\nclass Uri extends URI {\r\n\r\n\t_formatted: string | null = null;\r\n\t_fsPath: string | null = null;\r\n\r\n\tget fsPath(): string {\r\n\t\tif (!this._fsPath) {\r\n\t\t\tthis._fsPath = uriToFsPath(this, false);\r\n\t\t}\r\n\t\treturn this._fsPath;\r\n\t}\r\n\r\n\ttoString(skipEncoding: boolean = false): string {\r\n\t\tif (!skipEncoding) {\r\n\t\t\tif (!this._formatted) {\r\n\t\t\t\tthis._formatted = _asFormatted(this, false);\r\n\t\t\t}\r\n\t\t\treturn this._formatted;\r\n\t\t} else {\r\n\t\t\t// we don't cache that\r\n\t\t\treturn _asFormatted(this, true);\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON(): UriComponents {\r\n\t\tconst res = <UriState>{\r\n\t\t\t$mid: 1\r\n\t\t};\r\n\t\t// cached state\r\n\t\tif (this._fsPath) {\r\n\t\t\tres.fsPath = this._fsPath;\r\n\t\t\tres._sep = _pathSepMarker;\r\n\t\t}\r\n\t\tif (this._formatted) {\r\n\t\t\tres.external = this._formatted;\r\n\t\t}\r\n\t\t// uri components\r\n\t\tif (this.path) {\r\n\t\t\tres.path = this.path;\r\n\t\t}\r\n\t\tif (this.scheme) {\r\n\t\t\tres.scheme = this.scheme;\r\n\t\t}\r\n\t\tif (this.authority) {\r\n\t\t\tres.authority = this.authority;\r\n\t\t}\r\n\t\tif (this.query) {\r\n\t\t\tres.query = this.query;\r\n\t\t}\r\n\t\tif (this.fragment) {\r\n\t\t\tres.fragment = this.fragment;\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n}\r\n\r\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\r\nconst encodeTable: { [ch: number]: string } = {\r\n\t[CharCode.Colon]: '%3A', // gen-delims\r\n\t[CharCode.Slash]: '%2F',\r\n\t[CharCode.QuestionMark]: '%3F',\r\n\t[CharCode.Hash]: '%23',\r\n\t[CharCode.OpenSquareBracket]: '%5B',\r\n\t[CharCode.CloseSquareBracket]: '%5D',\r\n\t[CharCode.AtSign]: '%40',\r\n\r\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\r\n\t[CharCode.DollarSign]: '%24',\r\n\t[CharCode.Ampersand]: '%26',\r\n\t[CharCode.SingleQuote]: '%27',\r\n\t[CharCode.OpenParen]: '%28',\r\n\t[CharCode.CloseParen]: '%29',\r\n\t[CharCode.Asterisk]: '%2A',\r\n\t[CharCode.Plus]: '%2B',\r\n\t[CharCode.Comma]: '%2C',\r\n\t[CharCode.Semicolon]: '%3B',\r\n\t[CharCode.Equals]: '%3D',\r\n\r\n\t[CharCode.Space]: '%20',\r\n};\r\n\r\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\r\n\tlet res: string | undefined = undefined;\r\n\tlet nativeEncodePos = -1;\r\n\r\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\r\n\t\tconst code = uriComponent.charCodeAt(pos);\r\n\r\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\r\n\t\tif (\r\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\r\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\r\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\r\n\t\t\t|| code === CharCode.Dash\r\n\t\t\t|| code === CharCode.Period\r\n\t\t\t|| code === CharCode.Underline\r\n\t\t\t|| code === CharCode.Tilde\r\n\t\t\t|| (allowSlash && code === CharCode.Slash)\r\n\t\t) {\r\n\t\t\t// check if we are delaying native encode\r\n\t\t\tif (nativeEncodePos !== -1) {\r\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n\t\t\t\tnativeEncodePos = -1;\r\n\t\t\t}\r\n\t\t\t// check if we write into a new string (by default we try to return the param)\r\n\t\t\tif (res !== undefined) {\r\n\t\t\t\tres += uriComponent.charAt(pos);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// encoding needed, we need to allocate a new string\r\n\t\t\tif (res === undefined) {\r\n\t\t\t\tres = uriComponent.substr(0, pos);\r\n\t\t\t}\r\n\r\n\t\t\t// check with default table first\r\n\t\t\tconst escaped = encodeTable[code];\r\n\t\t\tif (escaped !== undefined) {\r\n\r\n\t\t\t\t// check if we are delaying native encode\r\n\t\t\t\tif (nativeEncodePos !== -1) {\r\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n\t\t\t\t\tnativeEncodePos = -1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// append escaped variant to result\r\n\t\t\t\tres += escaped;\r\n\r\n\t\t\t} else if (nativeEncodePos === -1) {\r\n\t\t\t\t// use native encode only when needed\r\n\t\t\t\tnativeEncodePos = pos;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (nativeEncodePos !== -1) {\r\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\r\n\t}\r\n\r\n\treturn res !== undefined ? res : uriComponent;\r\n}\r\n\r\nfunction encodeURIComponentMinimal(path: string): string {\r\n\tlet res: string | undefined = undefined;\r\n\tfor (let pos = 0; pos < path.length; pos++) {\r\n\t\tconst code = path.charCodeAt(pos);\r\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\r\n\t\t\tif (res === undefined) {\r\n\t\t\t\tres = path.substr(0, pos);\r\n\t\t\t}\r\n\t\t\tres += encodeTable[code];\r\n\t\t} else {\r\n\t\t\tif (res !== undefined) {\r\n\t\t\t\tres += path[pos];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn res !== undefined ? res : path;\r\n}\r\n\r\n/**\r\n * Compute `fsPath` for the given uri\r\n */\r\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\r\n\r\n\tlet value: string;\r\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\r\n\t\t// unc path: file://shares/c$/far/boo\r\n\t\tvalue = `//${uri.authority}${uri.path}`;\r\n\t} else if (\r\n\t\turi.path.charCodeAt(0) === CharCode.Slash\r\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\r\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\r\n\t) {\r\n\t\tif (!keepDriveLetterCasing) {\r\n\t\t\t// windows drive letter: file:///c:/far/boo\r\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\r\n\t\t} else {\r\n\t\t\tvalue = uri.path.substr(1);\r\n\t\t}\r\n\t} else {\r\n\t\t// other path\r\n\t\tvalue = uri.path;\r\n\t}\r\n\tif (isWindows) {\r\n\t\tvalue = value.replace(/\\//g, '\\\\');\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Create the external version of a uri\r\n */\r\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\r\n\r\n\tconst encoder = !skipEncoding\r\n\t\t? encodeURIComponentFast\r\n\t\t: encodeURIComponentMinimal;\r\n\r\n\tlet res = '';\r\n\tlet { scheme, authority, path, query, fragment } = uri;\r\n\tif (scheme) {\r\n\t\tres += scheme;\r\n\t\tres += ':';\r\n\t}\r\n\tif (authority || scheme === 'file') {\r\n\t\tres += _slash;\r\n\t\tres += _slash;\r\n\t}\r\n\tif (authority) {\r\n\t\tlet idx = authority.indexOf('@');\r\n\t\tif (idx !== -1) {\r\n\t\t\t// <user>@<auth>\r\n\t\t\tconst userinfo = authority.substr(0, idx);\r\n\t\t\tauthority = authority.substr(idx + 1);\r\n\t\t\tidx = userinfo.indexOf(':');\r\n\t\t\tif (idx === -1) {\r\n\t\t\t\tres += encoder(userinfo, false);\r\n\t\t\t} else {\r\n\t\t\t\t// <user>:<pass>@<auth>\r\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\r\n\t\t\t\tres += ':';\r\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\r\n\t\t\t}\r\n\t\t\tres += '@';\r\n\t\t}\r\n\t\tauthority = authority.toLowerCase();\r\n\t\tidx = authority.indexOf(':');\r\n\t\tif (idx === -1) {\r\n\t\t\tres += encoder(authority, false);\r\n\t\t} else {\r\n\t\t\t// <auth>:<port>\r\n\t\t\tres += encoder(authority.substr(0, idx), false);\r\n\t\t\tres += authority.substr(idx);\r\n\t\t}\r\n\t}\r\n\tif (path) {\r\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\r\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\r\n\t\t\tconst code = path.charCodeAt(1);\r\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\r\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\r\n\t\t\t}\r\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\r\n\t\t\tconst code = path.charCodeAt(0);\r\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\r\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\r\n\t\t\t}\r\n\t\t}\r\n\t\t// encode the rest of the path\r\n\t\tres += encoder(path, true);\r\n\t}\r\n\tif (query) {\r\n\t\tres += '?';\r\n\t\tres += encoder(query, false);\r\n\t}\r\n\tif (fragment) {\r\n\t\tres += '#';\r\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n// --- decode\r\n\r\nfunction decodeURIComponentGraceful(str: string): string {\r\n\ttry {\r\n\t\treturn decodeURIComponent(str);\r\n\t} catch {\r\n\t\tif (str.length > 3) {\r\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\r\n\t\t} else {\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\r\n\r\nfunction percentDecode(str: string): string {\r\n\tif (!str.match(_rEncodedAsHex)) {\r\n\t\treturn str;\r\n\t}\r\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\r\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\r\nimport { isWeb } from 'vs/base/common/platform';\r\nimport * as types from 'vs/base/common/types';\r\n\r\nconst INITIALIZE = '$initialize';\r\n\r\nexport interface IWorker extends IDisposable {\r\n\tgetId(): number;\r\n\tpostMessage(message: any, transfer: ArrayBuffer[]): void;\r\n}\r\n\r\nexport interface IWorkerCallback {\r\n\t(message: any): void;\r\n}\r\n\r\nexport interface IWorkerFactory {\r\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\r\n}\r\n\r\nlet webWorkerWarningLogged = false;\r\nexport function logOnceWebWorkerWarning(err: any): void {\r\n\tif (!isWeb) {\r\n\t\t// running tests\r\n\t\treturn;\r\n\t}\r\n\tif (!webWorkerWarningLogged) {\r\n\t\twebWorkerWarningLogged = true;\r\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\r\n\t}\r\n\tconsole.warn(err.message);\r\n}\r\n\r\ninterface IMessage {\r\n\tvsWorker: number;\r\n\treq?: string;\r\n\tseq?: string;\r\n}\r\n\r\ninterface IRequestMessage extends IMessage {\r\n\treq: string;\r\n\tmethod: string;\r\n\targs: any[];\r\n}\r\n\r\ninterface IReplyMessage extends IMessage {\r\n\tseq: string;\r\n\terr: any;\r\n\tres: any;\r\n}\r\n\r\ninterface IMessageReply {\r\n\tresolve: (value?: any) => void;\r\n\treject: (error?: any) => void;\r\n}\r\n\r\ninterface IMessageHandler {\r\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\r\n\thandleMessage(method: string, args: any[]): Promise<any>;\r\n}\r\n\r\nclass SimpleWorkerProtocol {\r\n\r\n\tprivate _workerId: number;\r\n\tprivate _lastSentReq: number;\r\n\tprivate _pendingReplies: { [req: string]: IMessageReply; };\r\n\tprivate _handler: IMessageHandler;\r\n\r\n\tconstructor(handler: IMessageHandler) {\r\n\t\tthis._workerId = -1;\r\n\t\tthis._handler = handler;\r\n\t\tthis._lastSentReq = 0;\r\n\t\tthis._pendingReplies = Object.create(null);\r\n\t}\r\n\r\n\tpublic setWorkerId(workerId: number): void {\r\n\t\tthis._workerId = workerId;\r\n\t}\r\n\r\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\r\n\t\tlet req = String(++this._lastSentReq);\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis._pendingReplies[req] = {\r\n\t\t\t\tresolve: resolve,\r\n\t\t\t\treject: reject\r\n\t\t\t};\r\n\t\t\tthis._send({\r\n\t\t\t\tvsWorker: this._workerId,\r\n\t\t\t\treq: req,\r\n\t\t\t\tmethod: method,\r\n\t\t\t\targs: args\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic handleMessage(message: IMessage): void {\r\n\t\tif (!message || !message.vsWorker) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._handleMessage(message);\r\n\t}\r\n\r\n\tprivate _handleMessage(msg: IMessage): void {\r\n\t\tif (msg.seq) {\r\n\t\t\tlet replyMessage = <IReplyMessage>msg;\r\n\t\t\tif (!this._pendingReplies[replyMessage.seq]) {\r\n\t\t\t\tconsole.warn('Got reply to unknown seq');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet reply = this._pendingReplies[replyMessage.seq];\r\n\t\t\tdelete this._pendingReplies[replyMessage.seq];\r\n\r\n\t\t\tif (replyMessage.err) {\r\n\t\t\t\tlet err = replyMessage.err;\r\n\t\t\t\tif (replyMessage.err.$isError) {\r\n\t\t\t\t\terr = new Error();\r\n\t\t\t\t\terr.name = replyMessage.err.name;\r\n\t\t\t\t\terr.message = replyMessage.err.message;\r\n\t\t\t\t\terr.stack = replyMessage.err.stack;\r\n\t\t\t\t}\r\n\t\t\t\treply.reject(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treply.resolve(replyMessage.res);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet requestMessage = <IRequestMessage>msg;\r\n\t\tlet req = requestMessage.req;\r\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\r\n\t\tresult.then((r) => {\r\n\t\t\tthis._send({\r\n\t\t\t\tvsWorker: this._workerId,\r\n\t\t\t\tseq: req,\r\n\t\t\t\tres: r,\r\n\t\t\t\terr: undefined\r\n\t\t\t});\r\n\t\t}, (e) => {\r\n\t\t\tif (e.detail instanceof Error) {\r\n\t\t\t\t// Loading errors have a detail property that points to the actual error\r\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\r\n\t\t\t}\r\n\t\t\tthis._send({\r\n\t\t\t\tvsWorker: this._workerId,\r\n\t\t\t\tseq: req,\r\n\t\t\t\tres: undefined,\r\n\t\t\t\terr: transformErrorForSerialization(e)\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _send(msg: IRequestMessage | IReplyMessage): void {\r\n\t\tlet transfer: ArrayBuffer[] = [];\r\n\t\tif (msg.req) {\r\n\t\t\tconst m = <IRequestMessage>msg;\r\n\t\t\tfor (let i = 0; i < m.args.length; i++) {\r\n\t\t\t\tif (m.args[i] instanceof ArrayBuffer) {\r\n\t\t\t\t\ttransfer.push(m.args[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst m = <IReplyMessage>msg;\r\n\t\t\tif (m.res instanceof ArrayBuffer) {\r\n\t\t\t\ttransfer.push(m.res);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._handler.sendMessage(msg, transfer);\r\n\t}\r\n}\r\n\r\nexport interface IWorkerClient<W> {\r\n\tgetProxyObject(): Promise<W>;\r\n\tdispose(): void;\r\n}\r\n\r\n/**\r\n * Main thread side\r\n */\r\nexport class SimpleWorkerClient<W extends object, H extends object> extends Disposable implements IWorkerClient<W> {\r\n\r\n\tprivate readonly _worker: IWorker;\r\n\tprivate readonly _onModuleLoaded: Promise<string[]>;\r\n\tprivate readonly _protocol: SimpleWorkerProtocol;\r\n\tprivate readonly _lazyProxy: Promise<W>;\r\n\r\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string, host: H) {\r\n\t\tsuper();\r\n\r\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\r\n\r\n\t\tthis._worker = this._register(workerFactory.create(\r\n\t\t\t'vs/base/common/worker/simpleWorker',\r\n\t\t\t(msg: any) => {\r\n\t\t\t\tthis._protocol.handleMessage(msg);\r\n\t\t\t},\r\n\t\t\t(err: any) => {\r\n\t\t\t\t// in Firefox, web workers fail lazily :(\r\n\t\t\t\t// we will reject the proxy\r\n\t\t\t\tif (lazyProxyReject) {\r\n\t\t\t\t\tlazyProxyReject(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\tthis._protocol = new SimpleWorkerProtocol({\r\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\r\n\t\t\t\tthis._worker.postMessage(msg, transfer);\r\n\t\t\t},\r\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\r\n\t\t\t\tif (typeof (host as any)[method] !== 'function') {\r\n\t\t\t\t\treturn Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn Promise.resolve((host as any)[method].apply(host, args));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treturn Promise.reject(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._protocol.setWorkerId(this._worker.getId());\r\n\r\n\t\t// Gather loader configuration\r\n\t\tlet loaderConfiguration: any = null;\r\n\t\tif (typeof (<any>self).require !== 'undefined' && typeof (<any>self).require.getConfig === 'function') {\r\n\t\t\t// Get the configuration from the Monaco AMD Loader\r\n\t\t\tloaderConfiguration = (<any>self).require.getConfig();\r\n\t\t} else if (typeof (<any>self).requirejs !== 'undefined') {\r\n\t\t\t// Get the configuration from requirejs\r\n\t\t\tloaderConfiguration = (<any>self).requirejs.s.contexts._.config;\r\n\t\t}\r\n\r\n\t\tconst hostMethods = types.getAllMethodNames(host);\r\n\r\n\t\t// Send initialize message\r\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\r\n\t\t\tthis._worker.getId(),\r\n\t\t\tJSON.parse(JSON.stringify(loaderConfiguration)),\r\n\t\t\tmoduleId,\r\n\t\t\thostMethods,\r\n\t\t]);\r\n\r\n\t\t// Create proxy to loaded code\r\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\r\n\t\t\treturn this._request(method, args);\r\n\t\t};\r\n\r\n\t\tthis._lazyProxy = new Promise<W>((resolve, reject) => {\r\n\t\t\tlazyProxyReject = reject;\r\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\r\n\t\t\t\tresolve(types.createProxyObject<W>(availableMethods, proxyMethodRequest));\r\n\t\t\t}, (e) => {\r\n\t\t\t\treject(e);\r\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getProxyObject(): Promise<W> {\r\n\t\treturn this._lazyProxy;\r\n\t}\r\n\r\n\tprivate _request(method: string, args: any[]): Promise<any> {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis._onModuleLoaded.then(() => {\r\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\r\n\t\t\t}, reject);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _onError(message: string, error?: any): void {\r\n\t\tconsole.error(message);\r\n\t\tconsole.info(error);\r\n\t}\r\n}\r\n\r\nexport interface IRequestHandler {\r\n\t_requestHandlerBrand: any;\r\n\t[prop: string]: any;\r\n}\r\n\r\nexport interface IRequestHandlerFactory<H> {\r\n\t(host: H): IRequestHandler;\r\n}\r\n\r\n/**\r\n * Worker side\r\n */\r\nexport class SimpleWorkerServer<H extends object> {\r\n\r\n\tprivate _requestHandlerFactory: IRequestHandlerFactory<H> | null;\r\n\tprivate _requestHandler: IRequestHandler | null;\r\n\tprivate _protocol: SimpleWorkerProtocol;\r\n\r\n\tconstructor(postMessage: (msg: any, transfer?: ArrayBuffer[]) => void, requestHandlerFactory: IRequestHandlerFactory<H> | null) {\r\n\t\tthis._requestHandlerFactory = requestHandlerFactory;\r\n\t\tthis._requestHandler = null;\r\n\t\tthis._protocol = new SimpleWorkerProtocol({\r\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\r\n\t\t\t\tpostMessage(msg, transfer);\r\n\t\t\t},\r\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args)\r\n\t\t});\r\n\t}\r\n\r\n\tpublic onmessage(msg: any): void {\r\n\t\tthis._protocol.handleMessage(msg);\r\n\t}\r\n\r\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\r\n\t\tif (method === INITIALIZE) {\r\n\t\t\treturn this.initialize(<number>args[0], <any>args[1], <string>args[2], <string[]>args[3]);\r\n\t\t}\r\n\r\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\r\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\r\n\t\t} catch (e) {\r\n\t\t\treturn Promise.reject(e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initialize(workerId: number, loaderConfig: any, moduleId: string, hostMethods: string[]): Promise<string[]> {\r\n\t\tthis._protocol.setWorkerId(workerId);\r\n\r\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\r\n\t\t\treturn this._protocol.sendMessage(method, args);\r\n\t\t};\r\n\r\n\t\tconst hostProxy = types.createProxyObject<H>(hostMethods, proxyMethodRequest);\r\n\r\n\t\tif (this._requestHandlerFactory) {\r\n\t\t\t// static request handler\r\n\t\t\tthis._requestHandler = this._requestHandlerFactory(hostProxy);\r\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._requestHandler));\r\n\t\t}\r\n\r\n\t\tif (loaderConfig) {\r\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\r\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\r\n\t\t\t\tdelete loaderConfig['baseUrl'];\r\n\t\t\t}\r\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\r\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\r\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeof loaderConfig.trustedTypesPolicy !== undefined) {\r\n\t\t\t\t// don't use, it has been destroyed during serialize\r\n\t\t\t\tdelete loaderConfig['trustedTypesPolicy'];\r\n\t\t\t}\r\n\r\n\t\t\t// Since this is in a web worker, enable catching errors\r\n\t\t\tloaderConfig.catchError = true;\r\n\t\t\t(<any>self).require.config(loaderConfig);\r\n\t\t}\r\n\r\n\t\treturn new Promise<string[]>((resolve, reject) => {\r\n\t\t\t// Use the global require to be sure to get the global config\r\n\t\t\t(<any>self).require([moduleId], (module: { create: IRequestHandlerFactory<H> }) => {\r\n\t\t\t\tthis._requestHandler = module.create(hostProxy);\r\n\r\n\t\t\t\tif (!this._requestHandler) {\r\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve(types.getAllMethodNames(this._requestHandler));\r\n\t\t\t}, reject);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Called on the worker side\r\n */\r\nexport function create(postMessage: (msg: string) => void): SimpleWorkerServer<any> {\r\n\treturn new SimpleWorkerServer(postMessage, null);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { toUint8 } from 'vs/base/common/uint';\r\n\r\n/**\r\n * A fast character classifier that uses a compact array for ASCII values.\r\n */\r\nexport class CharacterClassifier<T extends number> {\r\n\t/**\r\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\r\n\t */\r\n\tprotected _asciiMap: Uint8Array;\r\n\r\n\t/**\r\n\t * The entire map (sparse array).\r\n\t */\r\n\tprotected _map: Map<number, number>;\r\n\r\n\tprotected _defaultValue: number;\r\n\r\n\tconstructor(_defaultValue: T) {\r\n\t\tlet defaultValue = toUint8(_defaultValue);\r\n\r\n\t\tthis._defaultValue = defaultValue;\r\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\r\n\t\tthis._map = new Map<number, number>();\r\n\t}\r\n\r\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\r\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\r\n\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\tasciiMap[i] = defaultValue;\r\n\t\t}\r\n\t\treturn asciiMap;\r\n\t}\r\n\r\n\tpublic set(charCode: number, _value: T): void {\r\n\t\tlet value = toUint8(_value);\r\n\r\n\t\tif (charCode >= 0 && charCode < 256) {\r\n\t\t\tthis._asciiMap[charCode] = value;\r\n\t\t} else {\r\n\t\t\tthis._map.set(charCode, value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get(charCode: number): T {\r\n\t\tif (charCode >= 0 && charCode < 256) {\r\n\t\t\treturn <T>this._asciiMap[charCode];\r\n\t\t} else {\r\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst enum Boolean {\r\n\tFalse = 0,\r\n\tTrue = 1\r\n}\r\n\r\nexport class CharacterSet {\r\n\r\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\r\n\r\n\tconstructor() {\r\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\r\n\t}\r\n\r\n\tpublic add(charCode: number): void {\r\n\t\tthis._actual.set(charCode, Boolean.True);\r\n\t}\r\n\r\n\tpublic has(charCode: number): boolean {\r\n\t\treturn (this._actual.get(charCode) === Boolean.True);\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n/**\r\n * A position in the editor. This interface is suitable for serialization.\r\n */\r\nexport interface IPosition {\r\n\t/**\r\n\t * line number (starts at 1)\r\n\t */\r\n\treadonly lineNumber: number;\r\n\t/**\r\n\t * column (the first character in a line is between column 1 and column 2)\r\n\t */\r\n\treadonly column: number;\r\n}\r\n\r\n/**\r\n * A position in the editor.\r\n */\r\nexport class Position {\r\n\t/**\r\n\t * line number (starts at 1)\r\n\t */\r\n\tpublic readonly lineNumber: number;\r\n\t/**\r\n\t * column (the first character in a line is between column 1 and column 2)\r\n\t */\r\n\tpublic readonly column: number;\r\n\r\n\tconstructor(lineNumber: number, column: number) {\r\n\t\tthis.lineNumber = lineNumber;\r\n\t\tthis.column = column;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new position from this position.\r\n\t *\r\n\t * @param newLineNumber new line number\r\n\t * @param newColumn new column\r\n\t */\r\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\r\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\treturn new Position(newLineNumber, newColumn);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Derive a new position from this position.\r\n\t *\r\n\t * @param deltaLineNumber line number delta\r\n\t * @param deltaColumn column delta\r\n\t */\r\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\r\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if this position equals other position\r\n\t */\r\n\tpublic equals(other: IPosition): boolean {\r\n\t\treturn Position.equals(this, other);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if position `a` equals position `b`\r\n\t */\r\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\r\n\t\tif (!a && !b) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t!!a &&\r\n\t\t\t!!b &&\r\n\t\t\ta.lineNumber === b.lineNumber &&\r\n\t\t\ta.column === b.column\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if this position is before other position.\r\n\t * If the two positions are equal, the result will be false.\r\n\t */\r\n\tpublic isBefore(other: IPosition): boolean {\r\n\t\treturn Position.isBefore(this, other);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if position `a` is before position `b`.\r\n\t * If the two positions are equal, the result will be false.\r\n\t */\r\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\r\n\t\tif (a.lineNumber < b.lineNumber) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (b.lineNumber < a.lineNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn a.column < b.column;\r\n\t}\r\n\r\n\t/**\r\n\t * Test if this position is before other position.\r\n\t * If the two positions are equal, the result will be true.\r\n\t */\r\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\r\n\t\treturn Position.isBeforeOrEqual(this, other);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if position `a` is before position `b`.\r\n\t * If the two positions are equal, the result will be true.\r\n\t */\r\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\r\n\t\tif (a.lineNumber < b.lineNumber) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (b.lineNumber < a.lineNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn a.column <= b.column;\r\n\t}\r\n\r\n\t/**\r\n\t * A function that compares positions, useful for sorting\r\n\t */\r\n\tpublic static compare(a: IPosition, b: IPosition): number {\r\n\t\tlet aLineNumber = a.lineNumber | 0;\r\n\t\tlet bLineNumber = b.lineNumber | 0;\r\n\r\n\t\tif (aLineNumber === bLineNumber) {\r\n\t\t\tlet aColumn = a.column | 0;\r\n\t\t\tlet bColumn = b.column | 0;\r\n\t\t\treturn aColumn - bColumn;\r\n\t\t}\r\n\r\n\t\treturn aLineNumber - bLineNumber;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone this position.\r\n\t */\r\n\tpublic clone(): Position {\r\n\t\treturn new Position(this.lineNumber, this.column);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert to a human-readable representation.\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\r\n\t}\r\n\r\n\t// ---\r\n\r\n\t/**\r\n\t * Create a `Position` from an `IPosition`.\r\n\t */\r\n\tpublic static lift(pos: IPosition): Position {\r\n\t\treturn new Position(pos.lineNumber, pos.column);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `obj` is an `IPosition`.\r\n\t */\r\n\tpublic static isIPosition(obj: any): obj is IPosition {\r\n\t\treturn (\r\n\t\t\tobj\r\n\t\t\t&& (typeof obj.lineNumber === 'number')\r\n\t\t\t&& (typeof obj.column === 'number')\r\n\t\t);\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IPosition, Position } from 'vs/editor/common/core/position';\r\n\r\n/**\r\n * A range in the editor. This interface is suitable for serialization.\r\n */\r\nexport interface IRange {\r\n\t/**\r\n\t * Line number on which the range starts (starts at 1).\r\n\t */\r\n\treadonly startLineNumber: number;\r\n\t/**\r\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\r\n\t */\r\n\treadonly startColumn: number;\r\n\t/**\r\n\t * Line number on which the range ends.\r\n\t */\r\n\treadonly endLineNumber: number;\r\n\t/**\r\n\t * Column on which the range ends in line `endLineNumber`.\r\n\t */\r\n\treadonly endColumn: number;\r\n}\r\n\r\n/**\r\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\r\n */\r\nexport class Range {\r\n\r\n\t/**\r\n\t * Line number on which the range starts (starts at 1).\r\n\t */\r\n\tpublic readonly startLineNumber: number;\r\n\t/**\r\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\r\n\t */\r\n\tpublic readonly startColumn: number;\r\n\t/**\r\n\t * Line number on which the range ends.\r\n\t */\r\n\tpublic readonly endLineNumber: number;\r\n\t/**\r\n\t * Column on which the range ends in line `endLineNumber`.\r\n\t */\r\n\tpublic readonly endColumn: number;\r\n\r\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\r\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\r\n\t\t\tthis.startLineNumber = endLineNumber;\r\n\t\t\tthis.startColumn = endColumn;\r\n\t\t\tthis.endLineNumber = startLineNumber;\r\n\t\t\tthis.endColumn = startColumn;\r\n\t\t} else {\r\n\t\t\tthis.startLineNumber = startLineNumber;\r\n\t\t\tthis.startColumn = startColumn;\r\n\t\t\tthis.endLineNumber = endLineNumber;\r\n\t\t\tthis.endColumn = endColumn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Test if this range is empty.\r\n\t */\r\n\tpublic isEmpty(): boolean {\r\n\t\treturn Range.isEmpty(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `range` is empty.\r\n\t */\r\n\tpublic static isEmpty(range: IRange): boolean {\r\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if position is in this range. If the position is at the edges, will return true.\r\n\t */\r\n\tpublic containsPosition(position: IPosition): boolean {\r\n\t\treturn Range.containsPosition(this, position);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\r\n\t */\r\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\r\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Test if range is in this range. If the range is equal to this range, will return true.\r\n\t */\r\n\tpublic containsRange(range: IRange): boolean {\r\n\t\treturn Range.containsRange(this, range);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\r\n\t */\r\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\r\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\r\n\t */\r\n\tpublic strictContainsRange(range: IRange): boolean {\r\n\t\treturn Range.strictContainsRange(this, range);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\r\n\t */\r\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\r\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * A reunion of the two ranges.\r\n\t * The smallest position will be used as the start point, and the largest one as the end point.\r\n\t */\r\n\tpublic plusRange(range: IRange): Range {\r\n\t\treturn Range.plusRange(this, range);\r\n\t}\r\n\r\n\t/**\r\n\t * A reunion of the two ranges.\r\n\t * The smallest position will be used as the start point, and the largest one as the end point.\r\n\t */\r\n\tpublic static plusRange(a: IRange, b: IRange): Range {\r\n\t\tlet startLineNumber: number;\r\n\t\tlet startColumn: number;\r\n\t\tlet endLineNumber: number;\r\n\t\tlet endColumn: number;\r\n\r\n\t\tif (b.startLineNumber < a.startLineNumber) {\r\n\t\t\tstartLineNumber = b.startLineNumber;\r\n\t\t\tstartColumn = b.startColumn;\r\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\r\n\t\t\tstartLineNumber = b.startLineNumber;\r\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\r\n\t\t} else {\r\n\t\t\tstartLineNumber = a.startLineNumber;\r\n\t\t\tstartColumn = a.startColumn;\r\n\t\t}\r\n\r\n\t\tif (b.endLineNumber > a.endLineNumber) {\r\n\t\t\tendLineNumber = b.endLineNumber;\r\n\t\t\tendColumn = b.endColumn;\r\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\r\n\t\t\tendLineNumber = b.endLineNumber;\r\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\r\n\t\t} else {\r\n\t\t\tendLineNumber = a.endLineNumber;\r\n\t\t\tendColumn = a.endColumn;\r\n\t\t}\r\n\r\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * A intersection of the two ranges.\r\n\t */\r\n\tpublic intersectRanges(range: IRange): Range | null {\r\n\t\treturn Range.intersectRanges(this, range);\r\n\t}\r\n\r\n\t/**\r\n\t * A intersection of the two ranges.\r\n\t */\r\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\r\n\t\tlet resultStartLineNumber = a.startLineNumber;\r\n\t\tlet resultStartColumn = a.startColumn;\r\n\t\tlet resultEndLineNumber = a.endLineNumber;\r\n\t\tlet resultEndColumn = a.endColumn;\r\n\t\tlet otherStartLineNumber = b.startLineNumber;\r\n\t\tlet otherStartColumn = b.startColumn;\r\n\t\tlet otherEndLineNumber = b.endLineNumber;\r\n\t\tlet otherEndColumn = b.endColumn;\r\n\r\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\r\n\t\t\tresultStartLineNumber = otherStartLineNumber;\r\n\t\t\tresultStartColumn = otherStartColumn;\r\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\r\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\r\n\t\t}\r\n\r\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\r\n\t\t\tresultEndLineNumber = otherEndLineNumber;\r\n\t\t\tresultEndColumn = otherEndColumn;\r\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\r\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\r\n\t\t}\r\n\r\n\t\t// Check if selection is now empty\r\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if this range equals other.\r\n\t */\r\n\tpublic equalsRange(other: IRange | null): boolean {\r\n\t\treturn Range.equalsRange(this, other);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if range `a` equals `b`.\r\n\t */\r\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\r\n\t\treturn (\r\n\t\t\t!!a &&\r\n\t\t\t!!b &&\r\n\t\t\ta.startLineNumber === b.startLineNumber &&\r\n\t\t\ta.startColumn === b.startColumn &&\r\n\t\t\ta.endLineNumber === b.endLineNumber &&\r\n\t\t\ta.endColumn === b.endColumn\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the end position (which will be after or equal to the start position)\r\n\t */\r\n\tpublic getEndPosition(): Position {\r\n\t\treturn Range.getEndPosition(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the end position (which will be after or equal to the start position)\r\n\t */\r\n\tpublic static getEndPosition(range: IRange): Position {\r\n\t\treturn new Position(range.endLineNumber, range.endColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the start position (which will be before or equal to the end position)\r\n\t */\r\n\tpublic getStartPosition(): Position {\r\n\t\treturn Range.getStartPosition(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the start position (which will be before or equal to the end position)\r\n\t */\r\n\tpublic static getStartPosition(range: IRange): Position {\r\n\t\treturn new Position(range.startLineNumber, range.startColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform to a user presentable string representation.\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\r\n\t */\r\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\r\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\r\n\t */\r\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\r\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new empty range using this range's start position.\r\n\t */\r\n\tpublic collapseToStart(): Range {\r\n\t\treturn Range.collapseToStart(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new empty range using this range's start position.\r\n\t */\r\n\tpublic static collapseToStart(range: IRange): Range {\r\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n\t}\r\n\r\n\t// ---\r\n\r\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\r\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a `Range` from an `IRange`.\r\n\t */\r\n\tpublic static lift(range: undefined | null): null;\r\n\tpublic static lift(range: IRange): Range;\r\n\tpublic static lift(range: IRange | undefined | null): Range | null {\r\n\t\tif (!range) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `obj` is an `IRange`.\r\n\t */\r\n\tpublic static isIRange(obj: any): obj is IRange {\r\n\t\treturn (\r\n\t\t\tobj\r\n\t\t\t&& (typeof obj.startLineNumber === 'number')\r\n\t\t\t&& (typeof obj.startColumn === 'number')\r\n\t\t\t&& (typeof obj.endLineNumber === 'number')\r\n\t\t\t&& (typeof obj.endColumn === 'number')\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if the two ranges are touching in any way.\r\n\t */\r\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\r\n\t\t// Check if `a` is before `b`\r\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check if `b` is before `a`\r\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// These ranges must intersect\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\r\n\t */\r\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\r\n\t\t// Check if `a` is before `b`\r\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check if `b` is before `a`\r\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// These ranges must intersect\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * A function that compares ranges, useful for sorting ranges\r\n\t * It will first compare ranges on the startPosition and then on the endPosition\r\n\t */\r\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\r\n\t\tif (a && b) {\r\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\r\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\r\n\r\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\r\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\r\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\r\n\r\n\t\t\t\tif (aStartColumn === bStartColumn) {\r\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\r\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\r\n\r\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\r\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\r\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\r\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\r\n\t\t\t\t}\r\n\t\t\t\treturn aStartColumn - bStartColumn;\r\n\t\t\t}\r\n\t\t\treturn aStartLineNumber - bStartLineNumber;\r\n\t\t}\r\n\t\tconst aExists = (a ? 1 : 0);\r\n\t\tconst bExists = (b ? 1 : 0);\r\n\t\treturn aExists - bExists;\r\n\t}\r\n\r\n\t/**\r\n\t * A function that compares ranges, useful for sorting ranges\r\n\t * It will first compare ranges on the endPosition and then on the startPosition\r\n\t */\r\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\r\n\t\tif (a.endLineNumber === b.endLineNumber) {\r\n\t\t\tif (a.endColumn === b.endColumn) {\r\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\r\n\t\t\t\t\treturn a.startColumn - b.startColumn;\r\n\t\t\t\t}\r\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\r\n\t\t\t}\r\n\t\t\treturn a.endColumn - b.endColumn;\r\n\t\t}\r\n\t\treturn a.endLineNumber - b.endLineNumber;\r\n\t}\r\n\r\n\t/**\r\n\t * Test if the range spans multiple lines.\r\n\t */\r\n\tpublic static spansMultipleLines(range: IRange): boolean {\r\n\t\treturn range.endLineNumber > range.startLineNumber;\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IPosition, Position } from 'vs/editor/common/core/position';\r\nimport { Range } from 'vs/editor/common/core/range';\r\n\r\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\r\nexport interface ISelection {\r\n\t/**\r\n\t * The line number on which the selection has started.\r\n\t */\r\n\treadonly selectionStartLineNumber: number;\r\n\t/**\r\n\t * The column on `selectionStartLineNumber` where the selection has started.\r\n\t */\r\n\treadonly selectionStartColumn: number;\r\n\t/**\r\n\t * The line number on which the selection has ended.\r\n\t */\r\n\treadonly positionLineNumber: number;\r\n\t/**\r\n\t * The column on `positionLineNumber` where the selection has ended.\r\n\t */\r\n\treadonly positionColumn: number;\r\n}\r\n\r\n/**\r\n * The direction of a selection.\r\n */\r\nexport const enum SelectionDirection {\r\n\t/**\r\n\t * The selection starts above where it ends.\r\n\t */\r\n\tLTR,\r\n\t/**\r\n\t * The selection starts below where it ends.\r\n\t */\r\n\tRTL\r\n}\r\n\r\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\r\nexport class Selection extends Range {\r\n\t/**\r\n\t * The line number on which the selection has started.\r\n\t */\r\n\tpublic readonly selectionStartLineNumber: number;\r\n\t/**\r\n\t * The column on `selectionStartLineNumber` where the selection has started.\r\n\t */\r\n\tpublic readonly selectionStartColumn: number;\r\n\t/**\r\n\t * The line number on which the selection has ended.\r\n\t */\r\n\tpublic readonly positionLineNumber: number;\r\n\t/**\r\n\t * The column on `positionLineNumber` where the selection has ended.\r\n\t */\r\n\tpublic readonly positionColumn: number;\r\n\r\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\r\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\r\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\r\n\t\tthis.selectionStartColumn = selectionStartColumn;\r\n\t\tthis.positionLineNumber = positionLineNumber;\r\n\t\tthis.positionColumn = positionColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Transform to a human-readable representation.\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\r\n\t}\r\n\r\n\t/**\r\n\t * Test if equals other selection.\r\n\t */\r\n\tpublic equalsSelection(other: ISelection): boolean {\r\n\t\treturn (\r\n\t\t\tSelection.selectionsEqual(this, other)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Test if the two selections are equal.\r\n\t */\r\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\r\n\t\treturn (\r\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\r\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\r\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\r\n\t\t\ta.positionColumn === b.positionColumn\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Get directions (LTR or RTL).\r\n\t */\r\n\tpublic getDirection(): SelectionDirection {\r\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\r\n\t\t\treturn SelectionDirection.LTR;\r\n\t\t}\r\n\t\treturn SelectionDirection.RTL;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n\t */\r\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\r\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\r\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n\t\t}\r\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the position at `positionLineNumber` and `positionColumn`.\r\n\t */\r\n\tpublic getPosition(): Position {\r\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n\t */\r\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\r\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\r\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n\t\t}\r\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\r\n\t}\r\n\r\n\t// ----\r\n\r\n\t/**\r\n\t * Create a `Selection` from one or two positions\r\n\t */\r\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\r\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a `Selection` from an `ISelection`.\r\n\t */\r\n\tpublic static liftSelection(sel: ISelection): Selection {\r\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\r\n\t}\r\n\r\n\t/**\r\n\t * `a` equals `b`.\r\n\t */\r\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\r\n\t\tif (a && !b || !a && b) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!a && !b) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (a.length !== b.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\r\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Test if `obj` is an `ISelection`.\r\n\t */\r\n\tpublic static isISelection(obj: any): obj is ISelection {\r\n\t\treturn (\r\n\t\t\tobj\r\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\r\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\r\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\r\n\t\t\t&& (typeof obj.positionColumn === 'number')\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Create with a direction.\r\n\t */\r\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\r\n\r\n\t\tif (direction === SelectionDirection.LTR) {\r\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\r\n\t\t}\r\n\r\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IState } from 'vs/editor/common/modes';\r\n\r\nexport class Token {\r\n\t_tokenBrand: void;\r\n\r\n\tpublic readonly offset: number;\r\n\tpublic readonly type: string;\r\n\tpublic readonly language: string;\r\n\r\n\tconstructor(offset: number, type: string, language: string) {\r\n\t\tthis.offset = offset | 0;// @perf\r\n\t\tthis.type = type;\r\n\t\tthis.language = language;\r\n\t}\r\n\r\n\tpublic toString(): string {\r\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\r\n\t}\r\n}\r\n\r\nexport class TokenizationResult {\r\n\t_tokenizationResultBrand: void;\r\n\r\n\tpublic readonly tokens: Token[];\r\n\tpublic readonly endState: IState;\r\n\r\n\tconstructor(tokens: Token[], endState: IState) {\r\n\t\tthis.tokens = tokens;\r\n\t\tthis.endState = endState;\r\n\t}\r\n}\r\n\r\nexport class TokenizationResult2 {\r\n\t_tokenizationResult2Brand: void;\r\n\r\n\t/**\r\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\r\n\t *  - at offset 2*i => startIndex\r\n\t *  - at offset 2*i + 1 => metadata\r\n\t *\r\n\t */\r\n\tpublic readonly tokens: Uint32Array;\r\n\tpublic readonly endState: IState;\r\n\r\n\tconstructor(tokens: Uint32Array, endState: IState) {\r\n\t\tthis.tokens = tokens;\r\n\t\tthis.endState = endState;\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IDiffChange, ISequence, LcsDiff, IDiffResult } from 'vs/base/common/diff/diff';\r\nimport * as strings from 'vs/base/common/strings';\r\nimport { ICharChange, ILineChange } from 'vs/editor/common/editorCommon';\r\n\r\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\r\n\r\nexport interface IDiffComputerResult {\r\n\tquitEarly: boolean;\r\n\tchanges: ILineChange[];\r\n}\r\n\r\nfunction computeDiff(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: () => boolean, pretty: boolean): IDiffResult {\r\n\tconst diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\r\n\treturn diffAlgo.ComputeDiff(pretty);\r\n}\r\n\r\nclass LineSequence implements ISequence {\r\n\r\n\tpublic readonly lines: string[];\r\n\tprivate readonly _startColumns: number[];\r\n\tprivate readonly _endColumns: number[];\r\n\r\n\tconstructor(lines: string[]) {\r\n\t\tconst startColumns: number[] = [];\r\n\t\tconst endColumns: number[] = [];\r\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\r\n\t\t\tstartColumns[i] = getFirstNonBlankColumn(lines[i], 1);\r\n\t\t\tendColumns[i] = getLastNonBlankColumn(lines[i], 1);\r\n\t\t}\r\n\t\tthis.lines = lines;\r\n\t\tthis._startColumns = startColumns;\r\n\t\tthis._endColumns = endColumns;\r\n\t}\r\n\r\n\tpublic getElements(): Int32Array | number[] | string[] {\r\n\t\tconst elements: string[] = [];\r\n\t\tfor (let i = 0, len = this.lines.length; i < len; i++) {\r\n\t\t\telements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\r\n\t\t}\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpublic getStartLineNumber(i: number): number {\r\n\t\treturn i + 1;\r\n\t}\r\n\r\n\tpublic getEndLineNumber(i: number): number {\r\n\t\treturn i + 1;\r\n\t}\r\n\r\n\tpublic createCharSequence(shouldIgnoreTrimWhitespace: boolean, startIndex: number, endIndex: number): CharSequence {\r\n\t\tconst charCodes: number[] = [];\r\n\t\tconst lineNumbers: number[] = [];\r\n\t\tconst columns: number[] = [];\r\n\t\tlet len = 0;\r\n\t\tfor (let index = startIndex; index <= endIndex; index++) {\r\n\t\t\tconst lineContent = this.lines[index];\r\n\t\t\tconst startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\r\n\t\t\tconst endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\r\n\t\t\tfor (let col = startColumn; col < endColumn; col++) {\r\n\t\t\t\tcharCodes[len] = lineContent.charCodeAt(col - 1);\r\n\t\t\t\tlineNumbers[len] = index + 1;\r\n\t\t\t\tcolumns[len] = col;\r\n\t\t\t\tlen++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new CharSequence(charCodes, lineNumbers, columns);\r\n\t}\r\n}\r\n\r\nclass CharSequence implements ISequence {\r\n\r\n\tprivate readonly _charCodes: number[];\r\n\tprivate readonly _lineNumbers: number[];\r\n\tprivate readonly _columns: number[];\r\n\r\n\tconstructor(charCodes: number[], lineNumbers: number[], columns: number[]) {\r\n\t\tthis._charCodes = charCodes;\r\n\t\tthis._lineNumbers = lineNumbers;\r\n\t\tthis._columns = columns;\r\n\t}\r\n\r\n\tpublic getElements(): Int32Array | number[] | string[] {\r\n\t\treturn this._charCodes;\r\n\t}\r\n\r\n\tpublic getStartLineNumber(i: number): number {\r\n\t\treturn this._lineNumbers[i];\r\n\t}\r\n\r\n\tpublic getStartColumn(i: number): number {\r\n\t\treturn this._columns[i];\r\n\t}\r\n\r\n\tpublic getEndLineNumber(i: number): number {\r\n\t\treturn this._lineNumbers[i];\r\n\t}\r\n\r\n\tpublic getEndColumn(i: number): number {\r\n\t\treturn this._columns[i] + 1;\r\n\t}\r\n}\r\n\r\nclass CharChange implements ICharChange {\r\n\r\n\tpublic originalStartLineNumber: number;\r\n\tpublic originalStartColumn: number;\r\n\tpublic originalEndLineNumber: number;\r\n\tpublic originalEndColumn: number;\r\n\r\n\tpublic modifiedStartLineNumber: number;\r\n\tpublic modifiedStartColumn: number;\r\n\tpublic modifiedEndLineNumber: number;\r\n\tpublic modifiedEndColumn: number;\r\n\r\n\tconstructor(\r\n\t\toriginalStartLineNumber: number,\r\n\t\toriginalStartColumn: number,\r\n\t\toriginalEndLineNumber: number,\r\n\t\toriginalEndColumn: number,\r\n\t\tmodifiedStartLineNumber: number,\r\n\t\tmodifiedStartColumn: number,\r\n\t\tmodifiedEndLineNumber: number,\r\n\t\tmodifiedEndColumn: number\r\n\t) {\r\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\r\n\t\tthis.originalStartColumn = originalStartColumn;\r\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\r\n\t\tthis.originalEndColumn = originalEndColumn;\r\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\r\n\t\tthis.modifiedStartColumn = modifiedStartColumn;\r\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\r\n\t\tthis.modifiedEndColumn = modifiedEndColumn;\r\n\t}\r\n\r\n\tpublic static createFromDiffChange(diffChange: IDiffChange, originalCharSequence: CharSequence, modifiedCharSequence: CharSequence): CharChange {\r\n\t\tlet originalStartLineNumber: number;\r\n\t\tlet originalStartColumn: number;\r\n\t\tlet originalEndLineNumber: number;\r\n\t\tlet originalEndColumn: number;\r\n\t\tlet modifiedStartLineNumber: number;\r\n\t\tlet modifiedStartColumn: number;\r\n\t\tlet modifiedEndLineNumber: number;\r\n\t\tlet modifiedEndColumn: number;\r\n\r\n\t\tif (diffChange.originalLength === 0) {\r\n\t\t\toriginalStartLineNumber = 0;\r\n\t\t\toriginalStartColumn = 0;\r\n\t\t\toriginalEndLineNumber = 0;\r\n\t\t\toriginalEndColumn = 0;\r\n\t\t} else {\r\n\t\t\toriginalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\r\n\t\t\toriginalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\r\n\t\t\toriginalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n\t\t\toriginalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\r\n\t\t}\r\n\r\n\t\tif (diffChange.modifiedLength === 0) {\r\n\t\t\tmodifiedStartLineNumber = 0;\r\n\t\t\tmodifiedStartColumn = 0;\r\n\t\t\tmodifiedEndLineNumber = 0;\r\n\t\t\tmodifiedEndColumn = 0;\r\n\t\t} else {\r\n\t\t\tmodifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\r\n\t\t\tmodifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\r\n\t\t\tmodifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n\t\t\tmodifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n\t\t}\r\n\r\n\t\treturn new CharChange(\r\n\t\t\toriginalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\r\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn,\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction postProcessCharChanges(rawChanges: IDiffChange[]): IDiffChange[] {\r\n\tif (rawChanges.length <= 1) {\r\n\t\treturn rawChanges;\r\n\t}\r\n\r\n\tconst result = [rawChanges[0]];\r\n\tlet prevChange = result[0];\r\n\r\n\tfor (let i = 1, len = rawChanges.length; i < len; i++) {\r\n\t\tconst currChange = rawChanges[i];\r\n\r\n\t\tconst originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\r\n\t\tconst modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\r\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\r\n\t\tconst matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\r\n\r\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\r\n\t\t\t// Merge the current change into the previous one\r\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\r\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\r\n\t\t} else {\r\n\t\t\t// Add the current change\r\n\t\t\tresult.push(currChange);\r\n\t\t\tprevChange = currChange;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nclass LineChange implements ILineChange {\r\n\tpublic originalStartLineNumber: number;\r\n\tpublic originalEndLineNumber: number;\r\n\tpublic modifiedStartLineNumber: number;\r\n\tpublic modifiedEndLineNumber: number;\r\n\tpublic charChanges: CharChange[] | undefined;\r\n\r\n\tconstructor(\r\n\t\toriginalStartLineNumber: number,\r\n\t\toriginalEndLineNumber: number,\r\n\t\tmodifiedStartLineNumber: number,\r\n\t\tmodifiedEndLineNumber: number,\r\n\t\tcharChanges: CharChange[] | undefined\r\n\t) {\r\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\r\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\r\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\r\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\r\n\t\tthis.charChanges = charChanges;\r\n\t}\r\n\r\n\tpublic static createFromDiffResult(shouldIgnoreTrimWhitespace: boolean, diffChange: IDiffChange, originalLineSequence: LineSequence, modifiedLineSequence: LineSequence, continueCharDiff: () => boolean, shouldComputeCharChanges: boolean, shouldPostProcessCharChanges: boolean): LineChange {\r\n\t\tlet originalStartLineNumber: number;\r\n\t\tlet originalEndLineNumber: number;\r\n\t\tlet modifiedStartLineNumber: number;\r\n\t\tlet modifiedEndLineNumber: number;\r\n\t\tlet charChanges: CharChange[] | undefined = undefined;\r\n\r\n\t\tif (diffChange.originalLength === 0) {\r\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\r\n\t\t\toriginalEndLineNumber = 0;\r\n\t\t} else {\r\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\r\n\t\t\toriginalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n\t\t}\r\n\r\n\t\tif (diffChange.modifiedLength === 0) {\r\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\r\n\t\t\tmodifiedEndLineNumber = 0;\r\n\t\t} else {\r\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\r\n\t\t\tmodifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n\t\t}\r\n\r\n\t\tif (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\r\n\t\t\t// Compute character changes for diff chunks of at most 20 lines...\r\n\t\t\tconst originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\r\n\t\t\tconst modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n\r\n\t\t\tlet rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\r\n\r\n\t\t\tif (shouldPostProcessCharChanges) {\r\n\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\r\n\t\t\t}\r\n\r\n\t\t\tcharChanges = [];\r\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\r\n\t\t\t\tcharChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\r\n\t}\r\n}\r\n\r\nexport interface IDiffComputerOpts {\r\n\tshouldComputeCharChanges: boolean;\r\n\tshouldPostProcessCharChanges: boolean;\r\n\tshouldIgnoreTrimWhitespace: boolean;\r\n\tshouldMakePrettyDiff: boolean;\r\n\tmaxComputationTime: number;\r\n}\r\n\r\nexport class DiffComputer {\r\n\r\n\tprivate readonly shouldComputeCharChanges: boolean;\r\n\tprivate readonly shouldPostProcessCharChanges: boolean;\r\n\tprivate readonly shouldIgnoreTrimWhitespace: boolean;\r\n\tprivate readonly shouldMakePrettyDiff: boolean;\r\n\tprivate readonly originalLines: string[];\r\n\tprivate readonly modifiedLines: string[];\r\n\tprivate readonly original: LineSequence;\r\n\tprivate readonly modified: LineSequence;\r\n\tprivate readonly continueLineDiff: () => boolean;\r\n\tprivate readonly continueCharDiff: () => boolean;\r\n\r\n\tconstructor(originalLines: string[], modifiedLines: string[], opts: IDiffComputerOpts) {\r\n\t\tthis.shouldComputeCharChanges = opts.shouldComputeCharChanges;\r\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\r\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\r\n\t\tthis.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\r\n\t\tthis.originalLines = originalLines;\r\n\t\tthis.modifiedLines = modifiedLines;\r\n\t\tthis.original = new LineSequence(originalLines);\r\n\t\tthis.modified = new LineSequence(modifiedLines);\r\n\r\n\t\tthis.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\r\n\t\tthis.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\r\n\t}\r\n\r\n\tpublic computeDiff(): IDiffComputerResult {\r\n\r\n\t\tif (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\r\n\t\t\t// empty original => fast path\r\n\t\t\tif (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tquitEarly: false,\r\n\t\t\t\t\tchanges: []\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tquitEarly: false,\r\n\t\t\t\tchanges: [{\r\n\t\t\t\t\toriginalStartLineNumber: 1,\r\n\t\t\t\t\toriginalEndLineNumber: 1,\r\n\t\t\t\t\tmodifiedStartLineNumber: 1,\r\n\t\t\t\t\tmodifiedEndLineNumber: this.modified.lines.length,\r\n\t\t\t\t\tcharChanges: [{\r\n\t\t\t\t\t\tmodifiedEndColumn: 0,\r\n\t\t\t\t\t\tmodifiedEndLineNumber: 0,\r\n\t\t\t\t\t\tmodifiedStartColumn: 0,\r\n\t\t\t\t\t\tmodifiedStartLineNumber: 0,\r\n\t\t\t\t\t\toriginalEndColumn: 0,\r\n\t\t\t\t\t\toriginalEndLineNumber: 0,\r\n\t\t\t\t\t\toriginalStartColumn: 0,\r\n\t\t\t\t\t\toriginalStartLineNumber: 0\r\n\t\t\t\t\t}]\r\n\t\t\t\t}]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\r\n\t\t\t// empty modified => fast path\r\n\t\t\treturn {\r\n\t\t\t\tquitEarly: false,\r\n\t\t\t\tchanges: [{\r\n\t\t\t\t\toriginalStartLineNumber: 1,\r\n\t\t\t\t\toriginalEndLineNumber: this.original.lines.length,\r\n\t\t\t\t\tmodifiedStartLineNumber: 1,\r\n\t\t\t\t\tmodifiedEndLineNumber: 1,\r\n\t\t\t\t\tcharChanges: [{\r\n\t\t\t\t\t\tmodifiedEndColumn: 0,\r\n\t\t\t\t\t\tmodifiedEndLineNumber: 0,\r\n\t\t\t\t\t\tmodifiedStartColumn: 0,\r\n\t\t\t\t\t\tmodifiedStartLineNumber: 0,\r\n\t\t\t\t\t\toriginalEndColumn: 0,\r\n\t\t\t\t\t\toriginalEndLineNumber: 0,\r\n\t\t\t\t\t\toriginalStartColumn: 0,\r\n\t\t\t\t\t\toriginalStartLineNumber: 0\r\n\t\t\t\t\t}]\r\n\t\t\t\t}]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\r\n\t\tconst rawChanges = diffResult.changes;\r\n\t\tconst quitEarly = diffResult.quitEarly;\r\n\r\n\t\t// The diff is always computed with ignoring trim whitespace\r\n\t\t// This ensures we get the prettiest diff\r\n\r\n\t\tif (this.shouldIgnoreTrimWhitespace) {\r\n\t\t\tconst lineChanges: LineChange[] = [];\r\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\r\n\t\t\t\tlineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tquitEarly: quitEarly,\r\n\t\t\t\tchanges: lineChanges\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Need to post-process and introduce changes where the trim whitespace is different\r\n\t\t// Note that we are looping starting at -1 to also cover the lines before the first change\r\n\t\tconst result: LineChange[] = [];\r\n\r\n\t\tlet originalLineIndex = 0;\r\n\t\tlet modifiedLineIndex = 0;\r\n\t\tfor (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\r\n\t\t\tconst nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\r\n\t\t\tconst originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\r\n\t\t\tconst modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\r\n\r\n\t\t\twhile (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\r\n\t\t\t\tconst originalLine = this.originalLines[originalLineIndex];\r\n\t\t\t\tconst modifiedLine = this.modifiedLines[modifiedLineIndex];\r\n\r\n\t\t\t\tif (originalLine !== modifiedLine) {\r\n\t\t\t\t\t// These lines differ only in trim whitespace\r\n\r\n\t\t\t\t\t// Check the leading whitespace\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\r\n\t\t\t\t\t\tlet modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\r\n\t\t\t\t\t\twhile (originalStartColumn > 1 && modifiedStartColumn > 1) {\r\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalStartColumn - 2);\r\n\t\t\t\t\t\t\tconst modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\r\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\toriginalStartColumn--;\r\n\t\t\t\t\t\t\tmodifiedStartColumn--;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (originalStartColumn > 1 || modifiedStartColumn > 1) {\r\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\r\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, 1, originalStartColumn,\r\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, 1, modifiedStartColumn\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check the trailing whitespace\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet originalEndColumn = getLastNonBlankColumn(originalLine, 1);\r\n\t\t\t\t\t\tlet modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\r\n\t\t\t\t\t\tconst originalMaxColumn = originalLine.length + 1;\r\n\t\t\t\t\t\tconst modifiedMaxColumn = modifiedLine.length + 1;\r\n\t\t\t\t\t\twhile (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\r\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalEndColumn - 1);\r\n\t\t\t\t\t\t\tconst modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\r\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\toriginalEndColumn++;\r\n\t\t\t\t\t\t\tmodifiedEndColumn++;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\r\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\r\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, originalEndColumn, originalMaxColumn,\r\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\toriginalLineIndex++;\r\n\t\t\t\tmodifiedLineIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tif (nextChange) {\r\n\t\t\t\t// Emit the actual change\r\n\t\t\t\tresult.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n\r\n\t\t\t\toriginalLineIndex += nextChange.originalLength;\r\n\t\t\t\tmodifiedLineIndex += nextChange.modifiedLength;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tquitEarly: quitEarly,\r\n\t\t\tchanges: result\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _pushTrimWhitespaceCharChange(\r\n\t\tresult: LineChange[],\r\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\r\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\r\n\t): void {\r\n\t\tif (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\r\n\t\t\t// Merged into previous\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet charChanges: CharChange[] | undefined = undefined;\r\n\t\tif (this.shouldComputeCharChanges) {\r\n\t\t\tcharChanges = [new CharChange(\r\n\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\r\n\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\r\n\t\t\t)];\r\n\t\t}\r\n\t\tresult.push(new LineChange(\r\n\t\t\toriginalLineNumber, originalLineNumber,\r\n\t\t\tmodifiedLineNumber, modifiedLineNumber,\r\n\t\t\tcharChanges\r\n\t\t));\r\n\t}\r\n\r\n\tprivate _mergeTrimWhitespaceCharChange(\r\n\t\tresult: LineChange[],\r\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\r\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\r\n\t): boolean {\r\n\t\tconst len = result.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst prevChange = result[len - 1];\r\n\r\n\t\tif (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\r\n\t\t\t// Don't merge with inserts/deletes\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\r\n\t\t\tprevChange.originalEndLineNumber = originalLineNumber;\r\n\t\t\tprevChange.modifiedEndLineNumber = modifiedLineNumber;\r\n\t\t\tif (this.shouldComputeCharChanges && prevChange.charChanges) {\r\n\t\t\t\tprevChange.charChanges.push(new CharChange(\r\n\t\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\r\n\t\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction getFirstNonBlankColumn(txt: string, defaultValue: number): number {\r\n\tconst r = strings.firstNonWhitespaceIndex(txt);\r\n\tif (r === -1) {\r\n\t\treturn defaultValue;\r\n\t}\r\n\treturn r + 1;\r\n}\r\n\r\nfunction getLastNonBlankColumn(txt: string, defaultValue: number): number {\r\n\tconst r = strings.lastNonWhitespaceIndex(txt);\r\n\tif (r === -1) {\r\n\t\treturn defaultValue;\r\n\t}\r\n\treturn r + 2;\r\n}\r\n\r\nfunction createContinueProcessingPredicate(maximumRuntime: number): () => boolean {\r\n\tif (maximumRuntime === 0) {\r\n\t\treturn () => true;\r\n\t}\r\n\r\n\tconst startTime = Date.now();\r\n\treturn () => {\r\n\t\treturn Date.now() - startTime < maximumRuntime;\r\n\t};\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IWordAtPosition } from 'vs/editor/common/model';\r\n\r\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\r\n\r\n/**\r\n * Create a word definition regular expression based on default word separators.\r\n * Optionally provide allowed separators that should be included in words.\r\n *\r\n * The default would look like this:\r\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\r\n */\r\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\r\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\r\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\r\n\t\tif (allowInWords.indexOf(sep) >= 0) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tsource += '\\\\' + sep;\r\n\t}\r\n\tsource += '\\\\s]+)';\r\n\treturn new RegExp(source, 'g');\r\n}\r\n\r\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\r\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\r\n\r\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\r\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\r\n\r\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\r\n\t\tif (!wordDefinition.global) {\r\n\t\t\tlet flags = 'g';\r\n\t\t\tif (wordDefinition.ignoreCase) {\r\n\t\t\t\tflags += 'i';\r\n\t\t\t}\r\n\t\t\tif (wordDefinition.multiline) {\r\n\t\t\t\tflags += 'm';\r\n\t\t\t}\r\n\t\t\tif ((wordDefinition as any).unicode) {\r\n\t\t\t\tflags += 'u';\r\n\t\t\t}\r\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\r\n\t\t} else {\r\n\t\t\tresult = wordDefinition;\r\n\t\t}\r\n\t}\r\n\r\n\tresult.lastIndex = 0;\r\n\r\n\treturn result;\r\n}\r\n\r\nconst _defaultConfig = {\r\n\tmaxLen: 1000,\r\n\twindowSize: 15,\r\n\ttimeBudget: 150\r\n};\r\n\r\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number, config = _defaultConfig): IWordAtPosition | null {\r\n\r\n\tif (text.length > config.maxLen) {\r\n\t\t// don't throw strings that long at the regexp\r\n\t\t// but use a sub-string in which a word must occur\r\n\t\tlet start = column - config.maxLen / 2;\r\n\t\tif (start < 0) {\r\n\t\t\tstart = 0;\r\n\t\t} else {\r\n\t\t\ttextOffset += start;\r\n\t\t}\r\n\t\ttext = text.substring(start, column + config.maxLen / 2);\r\n\t\treturn getWordAtText(column, wordDefinition, text, textOffset, config);\r\n\t}\r\n\r\n\tconst t1 = Date.now();\r\n\tconst pos = column - 1 - textOffset;\r\n\r\n\tlet prevRegexIndex = -1;\r\n\tlet match: RegExpMatchArray | null = null;\r\n\r\n\tfor (let i = 1; ; i++) {\r\n\t\t// check time budget\r\n\t\tif (Date.now() - t1 >= config.timeBudget) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// reset the index at which the regexp should start matching, also know where it\r\n\t\t// should stop so that subsequent search don't repeat previous searches\r\n\t\tconst regexIndex = pos - config.windowSize * i;\r\n\t\twordDefinition.lastIndex = Math.max(0, regexIndex);\r\n\t\tconst thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\r\n\r\n\t\tif (!thisMatch && match) {\r\n\t\t\t// stop: we have something\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tmatch = thisMatch;\r\n\r\n\t\t// stop: searched at start\r\n\t\tif (regexIndex <= 0) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tprevRegexIndex = regexIndex;\r\n\t}\r\n\r\n\tif (match) {\r\n\t\tlet result = {\r\n\t\t\tword: match[0],\r\n\t\t\tstartColumn: textOffset + 1 + match.index!,\r\n\t\t\tendColumn: textOffset + 1 + match.index! + match[0].length\r\n\t\t};\r\n\t\twordDefinition.lastIndex = 0;\r\n\t\treturn result;\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nfunction _findRegexMatchEnclosingPosition(wordDefinition: RegExp, text: string, pos: number, stopPos: number): RegExpMatchArray | null {\r\n\tlet match: RegExpMatchArray | null;\r\n\twhile (match = wordDefinition.exec(text)) {\r\n\t\tconst matchIndex = match.index || 0;\r\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\r\n\t\t\treturn match;\r\n\t\t} else if (stopPos > 0 && matchIndex > stopPos) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { CharCode } from 'vs/base/common/charCode';\r\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\r\nimport { ILink } from 'vs/editor/common/modes';\r\n\r\nexport interface ILinkComputerTarget {\r\n\tgetLineCount(): number;\r\n\tgetLineContent(lineNumber: number): string;\r\n}\r\n\r\nexport const enum State {\r\n\tInvalid = 0,\r\n\tStart = 1,\r\n\tH = 2,\r\n\tHT = 3,\r\n\tHTT = 4,\r\n\tHTTP = 5,\r\n\tF = 6,\r\n\tFI = 7,\r\n\tFIL = 8,\r\n\tBeforeColon = 9,\r\n\tAfterColon = 10,\r\n\tAlmostThere = 11,\r\n\tEnd = 12,\r\n\tAccept = 13,\r\n\tLastKnownState = 14 // marker, custom states may follow\r\n}\r\n\r\nexport type Edge = [State, number, State];\r\n\r\nexport class Uint8Matrix {\r\n\r\n\tprivate readonly _data: Uint8Array;\r\n\tpublic readonly rows: number;\r\n\tpublic readonly cols: number;\r\n\r\n\tconstructor(rows: number, cols: number, defaultValue: number) {\r\n\t\tconst data = new Uint8Array(rows * cols);\r\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\r\n\t\t\tdata[i] = defaultValue;\r\n\t\t}\r\n\r\n\t\tthis._data = data;\r\n\t\tthis.rows = rows;\r\n\t\tthis.cols = cols;\r\n\t}\r\n\r\n\tpublic get(row: number, col: number): number {\r\n\t\treturn this._data[row * this.cols + col];\r\n\t}\r\n\r\n\tpublic set(row: number, col: number, value: number): void {\r\n\t\tthis._data[row * this.cols + col] = value;\r\n\t}\r\n}\r\n\r\nexport class StateMachine {\r\n\r\n\tprivate readonly _states: Uint8Matrix;\r\n\tprivate readonly _maxCharCode: number;\r\n\r\n\tconstructor(edges: Edge[]) {\r\n\t\tlet maxCharCode = 0;\r\n\t\tlet maxState = State.Invalid;\r\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\r\n\t\t\tlet [from, chCode, to] = edges[i];\r\n\t\t\tif (chCode > maxCharCode) {\r\n\t\t\t\tmaxCharCode = chCode;\r\n\t\t\t}\r\n\t\t\tif (from > maxState) {\r\n\t\t\t\tmaxState = from;\r\n\t\t\t}\r\n\t\t\tif (to > maxState) {\r\n\t\t\t\tmaxState = to;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmaxCharCode++;\r\n\t\tmaxState++;\r\n\r\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\r\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\r\n\t\t\tlet [from, chCode, to] = edges[i];\r\n\t\t\tstates.set(from, chCode, to);\r\n\t\t}\r\n\r\n\t\tthis._states = states;\r\n\t\tthis._maxCharCode = maxCharCode;\r\n\t}\r\n\r\n\tpublic nextState(currentState: State, chCode: number): State {\r\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\r\n\t\t\treturn State.Invalid;\r\n\t\t}\r\n\t\treturn this._states.get(currentState, chCode);\r\n\t}\r\n}\r\n\r\n// State machine for http:// or https:// or file://\r\nlet _stateMachine: StateMachine | null = null;\r\nfunction getStateMachine(): StateMachine {\r\n\tif (_stateMachine === null) {\r\n\t\t_stateMachine = new StateMachine([\r\n\t\t\t[State.Start, CharCode.h, State.H],\r\n\t\t\t[State.Start, CharCode.H, State.H],\r\n\t\t\t[State.Start, CharCode.f, State.F],\r\n\t\t\t[State.Start, CharCode.F, State.F],\r\n\r\n\t\t\t[State.H, CharCode.t, State.HT],\r\n\t\t\t[State.H, CharCode.T, State.HT],\r\n\r\n\t\t\t[State.HT, CharCode.t, State.HTT],\r\n\t\t\t[State.HT, CharCode.T, State.HTT],\r\n\r\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\r\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\r\n\r\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\r\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\r\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\r\n\r\n\t\t\t[State.F, CharCode.i, State.FI],\r\n\t\t\t[State.F, CharCode.I, State.FI],\r\n\r\n\t\t\t[State.FI, CharCode.l, State.FIL],\r\n\t\t\t[State.FI, CharCode.L, State.FIL],\r\n\r\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\r\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\r\n\r\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\r\n\r\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\r\n\r\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\r\n\t\t]);\r\n\t}\r\n\treturn _stateMachine;\r\n}\r\n\r\n\r\nconst enum CharacterClass {\r\n\tNone = 0,\r\n\tForceTermination = 1,\r\n\tCannotEndIn = 2\r\n}\r\n\r\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\r\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\r\n\tif (_classifier === null) {\r\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\r\n\r\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\r\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\r\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\r\n\t\t}\r\n\r\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\r\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\r\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\r\n\t\t}\r\n\t}\r\n\treturn _classifier;\r\n}\r\n\r\nexport class LinkComputer {\r\n\r\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\r\n\t\t// Do not allow to end link in certain characters...\r\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\r\n\t\tdo {\r\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\r\n\t\t\tconst chClass = classifier.get(chCode);\r\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlastIncludedCharIndex--;\r\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\r\n\r\n\t\t// Handle links enclosed in parens, square brackets and curlys.\r\n\t\tif (linkBeginIndex > 0) {\r\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\r\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\r\n\r\n\t\t\tif (\r\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\r\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\r\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\r\n\t\t\t) {\r\n\t\t\t\t// Do not end in ) if ( is before the link start\r\n\t\t\t\t// Do not end in ] if [ is before the link start\r\n\t\t\t\t// Do not end in } if { is before the link start\r\n\t\t\t\tlastIncludedCharIndex--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trange: {\r\n\t\t\t\tstartLineNumber: lineNumber,\r\n\t\t\t\tstartColumn: linkBeginIndex + 1,\r\n\t\t\t\tendLineNumber: lineNumber,\r\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\r\n\t\t\t},\r\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\r\n\t\t};\r\n\t}\r\n\r\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\r\n\t\tconst classifier = getClassifier();\r\n\r\n\t\tlet result: ILink[] = [];\r\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\r\n\t\t\tconst line = model.getLineContent(i);\r\n\t\t\tconst len = line.length;\r\n\r\n\t\t\tlet j = 0;\r\n\t\t\tlet linkBeginIndex = 0;\r\n\t\t\tlet linkBeginChCode = 0;\r\n\t\t\tlet state = State.Start;\r\n\t\t\tlet hasOpenParens = false;\r\n\t\t\tlet hasOpenSquareBracket = false;\r\n\t\t\tlet inSquareBrackets = false;\r\n\t\t\tlet hasOpenCurlyBracket = false;\r\n\r\n\t\t\twhile (j < len) {\r\n\r\n\t\t\t\tlet resetStateMachine = false;\r\n\t\t\t\tconst chCode = line.charCodeAt(j);\r\n\r\n\t\t\t\tif (state === State.Accept) {\r\n\t\t\t\t\tlet chClass: CharacterClass;\r\n\t\t\t\t\tswitch (chCode) {\r\n\t\t\t\t\t\tcase CharCode.OpenParen:\r\n\t\t\t\t\t\t\thasOpenParens = true;\r\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.CloseParen:\r\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\r\n\t\t\t\t\t\t\tinSquareBrackets = true;\r\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\r\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\r\n\t\t\t\t\t\t\tinSquareBrackets = false;\r\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\r\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\r\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\r\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\r\n\t\t\t\t\t\tcase CharCode.SingleQuote:\r\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\r\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.BackTick:\r\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.Asterisk:\r\n\t\t\t\t\t\t\t// `*` terminates a link if the link began with `*`\r\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.Pipe:\r\n\t\t\t\t\t\t\t// `|` terminates a link if the link began with `|`\r\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Pipe) ? CharacterClass.ForceTermination : CharacterClass.None;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CharCode.Space:\r\n\t\t\t\t\t\t\t// ` ` allow space in between [ and ]\r\n\t\t\t\t\t\t\tchClass = (inSquareBrackets ? CharacterClass.None : CharacterClass.ForceTermination);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check if character terminates link\r\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\r\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\r\n\t\t\t\t\t\tresetStateMachine = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (state === State.End) {\r\n\r\n\t\t\t\t\tlet chClass: CharacterClass;\r\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\r\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\r\n\t\t\t\t\t\thasOpenSquareBracket = true;\r\n\t\t\t\t\t\tchClass = CharacterClass.None;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchClass = classifier.get(chCode);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check if character terminates link\r\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\r\n\t\t\t\t\t\tresetStateMachine = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate = State.Accept;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\r\n\t\t\t\t\tif (state === State.Invalid) {\r\n\t\t\t\t\t\tresetStateMachine = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (resetStateMachine) {\r\n\t\t\t\t\tstate = State.Start;\r\n\t\t\t\t\thasOpenParens = false;\r\n\t\t\t\t\thasOpenSquareBracket = false;\r\n\t\t\t\t\thasOpenCurlyBracket = false;\r\n\r\n\t\t\t\t\t// Record where the link started\r\n\t\t\t\t\tlinkBeginIndex = j + 1;\r\n\t\t\t\t\tlinkBeginChCode = chCode;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\r\n\t\t\tif (state === State.Accept) {\r\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns an array of all links contains in the provided\r\n * document. *Note* that this operation is computational\r\n * expensive and should not run in the UI thread.\r\n */\r\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\r\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\r\n\t\t// Unknown caller!\r\n\t\treturn [];\r\n\t}\r\n\treturn LinkComputer.computeLinks(model);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IRange } from 'vs/editor/common/core/range';\r\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\r\n\r\nexport class BasicInplaceReplace {\r\n\r\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\r\n\r\n\tpublic navigateValueSet(range1: IRange, text1: string, range2: IRange, text2: string | null, up: boolean): IInplaceReplaceSupportResult | null {\r\n\r\n\t\tif (range1 && text1) {\r\n\t\t\tlet result = this.doNavigateValueSet(text1, up);\r\n\t\t\tif (result) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\trange: range1,\r\n\t\t\t\t\tvalue: result\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (range2 && text2) {\r\n\t\t\tlet result = this.doNavigateValueSet(text2, up);\r\n\t\t\tif (result) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\trange: range2,\r\n\t\t\t\t\tvalue: result\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\r\n\t\tlet numberResult = this.numberReplace(text, up);\r\n\t\tif (numberResult !== null) {\r\n\t\t\treturn numberResult;\r\n\t\t}\r\n\t\treturn this.textReplace(text, up);\r\n\t}\r\n\r\n\tprivate numberReplace(value: string, up: boolean): string | null {\r\n\t\tlet precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\r\n\t\tlet n1 = Number(value);\r\n\t\tlet n2 = parseFloat(value);\r\n\r\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\r\n\r\n\t\t\tif (n1 === 0 && !up) {\r\n\t\t\t\treturn null; // don't do negative\r\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\r\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\r\n\t\t\t} else {\r\n\t\t\t\tn1 = Math.floor(n1 * precision);\r\n\t\t\t\tn1 += up ? precision : -precision;\r\n\t\t\t\treturn String(n1 / precision);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate readonly _defaultValueSet: string[][] = [\r\n\t\t['true', 'false'],\r\n\t\t['True', 'False'],\r\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\r\n\t\t['public', 'protected', 'private'],\r\n\t];\r\n\r\n\tprivate textReplace(value: string, up: boolean): string | null {\r\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\r\n\t}\r\n\r\n\tprivate valueSetsReplace(valueSets: string[][], value: string, up: boolean): string | null {\r\n\t\tlet result: string | null = null;\r\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\r\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate valueSetReplace(valueSet: string[], value: string, up: boolean): string | null {\r\n\t\tlet idx = valueSet.indexOf(value);\r\n\t\tif (idx >= 0) {\r\n\t\t\tidx += up ? +1 : -1;\r\n\t\t\tif (idx < 0) {\r\n\t\t\t\tidx = valueSet.length - 1;\r\n\t\t\t} else {\r\n\t\t\t\tidx %= valueSet.length;\r\n\t\t\t}\r\n\t\t\treturn valueSet[idx];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\r\n\r\n\r\nexport enum AccessibilitySupport {\r\n\t/**\r\n\t * This should be the browser case where it is not known if a screen reader is attached or no.\r\n\t */\r\n\tUnknown = 0,\r\n\tDisabled = 1,\r\n\tEnabled = 2\r\n}\r\n\r\nexport enum CompletionItemInsertTextRule {\r\n\t/**\r\n\t * Adjust whitespace/indentation of multiline insert texts to\r\n\t * match the current line indentation.\r\n\t */\r\n\tKeepWhitespace = 1,\r\n\t/**\r\n\t * `insertText` is a snippet.\r\n\t */\r\n\tInsertAsSnippet = 4\r\n}\r\n\r\nexport enum CompletionItemKind {\r\n\tMethod = 0,\r\n\tFunction = 1,\r\n\tConstructor = 2,\r\n\tField = 3,\r\n\tVariable = 4,\r\n\tClass = 5,\r\n\tStruct = 6,\r\n\tInterface = 7,\r\n\tModule = 8,\r\n\tProperty = 9,\r\n\tEvent = 10,\r\n\tOperator = 11,\r\n\tUnit = 12,\r\n\tValue = 13,\r\n\tConstant = 14,\r\n\tEnum = 15,\r\n\tEnumMember = 16,\r\n\tKeyword = 17,\r\n\tText = 18,\r\n\tColor = 19,\r\n\tFile = 20,\r\n\tReference = 21,\r\n\tCustomcolor = 22,\r\n\tFolder = 23,\r\n\tTypeParameter = 24,\r\n\tUser = 25,\r\n\tIssue = 26,\r\n\tSnippet = 27\r\n}\r\n\r\nexport enum CompletionItemTag {\r\n\tDeprecated = 1\r\n}\r\n\r\n/**\r\n * How a suggest provider was triggered.\r\n */\r\nexport enum CompletionTriggerKind {\r\n\tInvoke = 0,\r\n\tTriggerCharacter = 1,\r\n\tTriggerForIncompleteCompletions = 2\r\n}\r\n\r\n/**\r\n * A positioning preference for rendering content widgets.\r\n */\r\nexport enum ContentWidgetPositionPreference {\r\n\t/**\r\n\t * Place the content widget exactly at a position\r\n\t */\r\n\tEXACT = 0,\r\n\t/**\r\n\t * Place the content widget above a position\r\n\t */\r\n\tABOVE = 1,\r\n\t/**\r\n\t * Place the content widget below a position\r\n\t */\r\n\tBELOW = 2\r\n}\r\n\r\n/**\r\n * Describes the reason the cursor has changed its position.\r\n */\r\nexport enum CursorChangeReason {\r\n\t/**\r\n\t * Unknown or not set.\r\n\t */\r\n\tNotSet = 0,\r\n\t/**\r\n\t * A `model.setValue()` was called.\r\n\t */\r\n\tContentFlush = 1,\r\n\t/**\r\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\r\n\t */\r\n\tRecoverFromMarkers = 2,\r\n\t/**\r\n\t * There was an explicit user gesture.\r\n\t */\r\n\tExplicit = 3,\r\n\t/**\r\n\t * There was a Paste.\r\n\t */\r\n\tPaste = 4,\r\n\t/**\r\n\t * There was an Undo.\r\n\t */\r\n\tUndo = 5,\r\n\t/**\r\n\t * There was a Redo.\r\n\t */\r\n\tRedo = 6\r\n}\r\n\r\n/**\r\n * The default end of line to use when instantiating models.\r\n */\r\nexport enum DefaultEndOfLine {\r\n\t/**\r\n\t * Use line feed (\\n) as the end of line character.\r\n\t */\r\n\tLF = 1,\r\n\t/**\r\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n\t */\r\n\tCRLF = 2\r\n}\r\n\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport enum DocumentHighlightKind {\r\n\t/**\r\n\t * A textual occurrence.\r\n\t */\r\n\tText = 0,\r\n\t/**\r\n\t * Read-access of a symbol, like reading a variable.\r\n\t */\r\n\tRead = 1,\r\n\t/**\r\n\t * Write-access of a symbol, like writing to a variable.\r\n\t */\r\n\tWrite = 2\r\n}\r\n\r\n/**\r\n * Configuration options for auto indentation in the editor\r\n */\r\nexport enum EditorAutoIndentStrategy {\r\n\tNone = 0,\r\n\tKeep = 1,\r\n\tBrackets = 2,\r\n\tAdvanced = 3,\r\n\tFull = 4\r\n}\r\n\r\nexport enum EditorOption {\r\n\tacceptSuggestionOnCommitCharacter = 0,\r\n\tacceptSuggestionOnEnter = 1,\r\n\taccessibilitySupport = 2,\r\n\taccessibilityPageSize = 3,\r\n\tariaLabel = 4,\r\n\tautoClosingBrackets = 5,\r\n\tautoClosingOvertype = 6,\r\n\tautoClosingQuotes = 7,\r\n\tautoIndent = 8,\r\n\tautomaticLayout = 9,\r\n\tautoSurround = 10,\r\n\tcodeLens = 11,\r\n\tcodeLensFontFamily = 12,\r\n\tcodeLensFontSize = 13,\r\n\tcolorDecorators = 14,\r\n\tcolumnSelection = 15,\r\n\tcomments = 16,\r\n\tcontextmenu = 17,\r\n\tcopyWithSyntaxHighlighting = 18,\r\n\tcursorBlinking = 19,\r\n\tcursorSmoothCaretAnimation = 20,\r\n\tcursorStyle = 21,\r\n\tcursorSurroundingLines = 22,\r\n\tcursorSurroundingLinesStyle = 23,\r\n\tcursorWidth = 24,\r\n\tdisableLayerHinting = 25,\r\n\tdisableMonospaceOptimizations = 26,\r\n\tdragAndDrop = 27,\r\n\temptySelectionClipboard = 28,\r\n\textraEditorClassName = 29,\r\n\tfastScrollSensitivity = 30,\r\n\tfind = 31,\r\n\tfixedOverflowWidgets = 32,\r\n\tfolding = 33,\r\n\tfoldingStrategy = 34,\r\n\tfoldingHighlight = 35,\r\n\tunfoldOnClickAfterEndOfLine = 36,\r\n\tfontFamily = 37,\r\n\tfontInfo = 38,\r\n\tfontLigatures = 39,\r\n\tfontSize = 40,\r\n\tfontWeight = 41,\r\n\tformatOnPaste = 42,\r\n\tformatOnType = 43,\r\n\tglyphMargin = 44,\r\n\tgotoLocation = 45,\r\n\thideCursorInOverviewRuler = 46,\r\n\thighlightActiveIndentGuide = 47,\r\n\thover = 48,\r\n\tinDiffEditor = 49,\r\n\tletterSpacing = 50,\r\n\tlightbulb = 51,\r\n\tlineDecorationsWidth = 52,\r\n\tlineHeight = 53,\r\n\tlineNumbers = 54,\r\n\tlineNumbersMinChars = 55,\r\n\tlinkedEditing = 56,\r\n\tlinks = 57,\r\n\tmatchBrackets = 58,\r\n\tminimap = 59,\r\n\tmouseStyle = 60,\r\n\tmouseWheelScrollSensitivity = 61,\r\n\tmouseWheelZoom = 62,\r\n\tmultiCursorMergeOverlapping = 63,\r\n\tmultiCursorModifier = 64,\r\n\tmultiCursorPaste = 65,\r\n\toccurrencesHighlight = 66,\r\n\toverviewRulerBorder = 67,\r\n\toverviewRulerLanes = 68,\r\n\tpadding = 69,\r\n\tparameterHints = 70,\r\n\tpeekWidgetDefaultFocus = 71,\r\n\tdefinitionLinkOpensInPeek = 72,\r\n\tquickSuggestions = 73,\r\n\tquickSuggestionsDelay = 74,\r\n\treadOnly = 75,\r\n\trenameOnType = 76,\r\n\trenderControlCharacters = 77,\r\n\trenderIndentGuides = 78,\r\n\trenderFinalNewline = 79,\r\n\trenderLineHighlight = 80,\r\n\trenderLineHighlightOnlyWhenFocus = 81,\r\n\trenderValidationDecorations = 82,\r\n\trenderWhitespace = 83,\r\n\trevealHorizontalRightPadding = 84,\r\n\troundedSelection = 85,\r\n\trulers = 86,\r\n\tscrollbar = 87,\r\n\tscrollBeyondLastColumn = 88,\r\n\tscrollBeyondLastLine = 89,\r\n\tscrollPredominantAxis = 90,\r\n\tselectionClipboard = 91,\r\n\tselectionHighlight = 92,\r\n\tselectOnLineNumbers = 93,\r\n\tshowFoldingControls = 94,\r\n\tshowUnused = 95,\r\n\tsnippetSuggestions = 96,\r\n\tsmartSelect = 97,\r\n\tsmoothScrolling = 98,\r\n\tstickyTabStops = 99,\r\n\tstopRenderingLineAfter = 100,\r\n\tsuggest = 101,\r\n\tsuggestFontSize = 102,\r\n\tsuggestLineHeight = 103,\r\n\tsuggestOnTriggerCharacters = 104,\r\n\tsuggestSelection = 105,\r\n\ttabCompletion = 106,\r\n\ttabIndex = 107,\r\n\tunusualLineTerminators = 108,\r\n\tuseTabStops = 109,\r\n\twordSeparators = 110,\r\n\twordWrap = 111,\r\n\twordWrapBreakAfterCharacters = 112,\r\n\twordWrapBreakBeforeCharacters = 113,\r\n\twordWrapColumn = 114,\r\n\twordWrapOverride1 = 115,\r\n\twordWrapOverride2 = 116,\r\n\twrappingIndent = 117,\r\n\twrappingStrategy = 118,\r\n\tshowDeprecated = 119,\r\n\tinlineHints = 120,\r\n\teditorClassName = 121,\r\n\tpixelRatio = 122,\r\n\ttabFocusMode = 123,\r\n\tlayoutInfo = 124,\r\n\twrappingInfo = 125\r\n}\r\n\r\n/**\r\n * End of line character preference.\r\n */\r\nexport enum EndOfLinePreference {\r\n\t/**\r\n\t * Use the end of line character identified in the text buffer.\r\n\t */\r\n\tTextDefined = 0,\r\n\t/**\r\n\t * Use line feed (\\n) as the end of line character.\r\n\t */\r\n\tLF = 1,\r\n\t/**\r\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n\t */\r\n\tCRLF = 2\r\n}\r\n\r\n/**\r\n * End of line character preference.\r\n */\r\nexport enum EndOfLineSequence {\r\n\t/**\r\n\t * Use line feed (\\n) as the end of line character.\r\n\t */\r\n\tLF = 0,\r\n\t/**\r\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n\t */\r\n\tCRLF = 1\r\n}\r\n\r\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\r\nexport enum IndentAction {\r\n\t/**\r\n\t * Insert new line and copy the previous line's indentation.\r\n\t */\r\n\tNone = 0,\r\n\t/**\r\n\t * Insert new line and indent once (relative to the previous line's indentation).\r\n\t */\r\n\tIndent = 1,\r\n\t/**\r\n\t * Insert two new lines:\r\n\t *  - the first one indented which will hold the cursor\r\n\t *  - the second one at the same indentation level\r\n\t */\r\n\tIndentOutdent = 2,\r\n\t/**\r\n\t * Insert new line and outdent once (relative to the previous line's indentation).\r\n\t */\r\n\tOutdent = 3\r\n}\r\n\r\nexport enum InlineHintKind {\r\n\tOther = 0,\r\n\tType = 1,\r\n\tParameter = 2\r\n}\r\n\r\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\r\nexport enum KeyCode {\r\n\t/**\r\n\t * Placed first to cover the 0 value of the enum.\r\n\t */\r\n\tUnknown = 0,\r\n\tBackspace = 1,\r\n\tTab = 2,\r\n\tEnter = 3,\r\n\tShift = 4,\r\n\tCtrl = 5,\r\n\tAlt = 6,\r\n\tPauseBreak = 7,\r\n\tCapsLock = 8,\r\n\tEscape = 9,\r\n\tSpace = 10,\r\n\tPageUp = 11,\r\n\tPageDown = 12,\r\n\tEnd = 13,\r\n\tHome = 14,\r\n\tLeftArrow = 15,\r\n\tUpArrow = 16,\r\n\tRightArrow = 17,\r\n\tDownArrow = 18,\r\n\tInsert = 19,\r\n\tDelete = 20,\r\n\tKEY_0 = 21,\r\n\tKEY_1 = 22,\r\n\tKEY_2 = 23,\r\n\tKEY_3 = 24,\r\n\tKEY_4 = 25,\r\n\tKEY_5 = 26,\r\n\tKEY_6 = 27,\r\n\tKEY_7 = 28,\r\n\tKEY_8 = 29,\r\n\tKEY_9 = 30,\r\n\tKEY_A = 31,\r\n\tKEY_B = 32,\r\n\tKEY_C = 33,\r\n\tKEY_D = 34,\r\n\tKEY_E = 35,\r\n\tKEY_F = 36,\r\n\tKEY_G = 37,\r\n\tKEY_H = 38,\r\n\tKEY_I = 39,\r\n\tKEY_J = 40,\r\n\tKEY_K = 41,\r\n\tKEY_L = 42,\r\n\tKEY_M = 43,\r\n\tKEY_N = 44,\r\n\tKEY_O = 45,\r\n\tKEY_P = 46,\r\n\tKEY_Q = 47,\r\n\tKEY_R = 48,\r\n\tKEY_S = 49,\r\n\tKEY_T = 50,\r\n\tKEY_U = 51,\r\n\tKEY_V = 52,\r\n\tKEY_W = 53,\r\n\tKEY_X = 54,\r\n\tKEY_Y = 55,\r\n\tKEY_Z = 56,\r\n\tMeta = 57,\r\n\tContextMenu = 58,\r\n\tF1 = 59,\r\n\tF2 = 60,\r\n\tF3 = 61,\r\n\tF4 = 62,\r\n\tF5 = 63,\r\n\tF6 = 64,\r\n\tF7 = 65,\r\n\tF8 = 66,\r\n\tF9 = 67,\r\n\tF10 = 68,\r\n\tF11 = 69,\r\n\tF12 = 70,\r\n\tF13 = 71,\r\n\tF14 = 72,\r\n\tF15 = 73,\r\n\tF16 = 74,\r\n\tF17 = 75,\r\n\tF18 = 76,\r\n\tF19 = 77,\r\n\tNumLock = 78,\r\n\tScrollLock = 79,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the ';:' key\r\n\t */\r\n\tUS_SEMICOLON = 80,\r\n\t/**\r\n\t * For any country/region, the '+' key\r\n\t * For the US standard keyboard, the '=+' key\r\n\t */\r\n\tUS_EQUAL = 81,\r\n\t/**\r\n\t * For any country/region, the ',' key\r\n\t * For the US standard keyboard, the ',<' key\r\n\t */\r\n\tUS_COMMA = 82,\r\n\t/**\r\n\t * For any country/region, the '-' key\r\n\t * For the US standard keyboard, the '-_' key\r\n\t */\r\n\tUS_MINUS = 83,\r\n\t/**\r\n\t * For any country/region, the '.' key\r\n\t * For the US standard keyboard, the '.>' key\r\n\t */\r\n\tUS_DOT = 84,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '/?' key\r\n\t */\r\n\tUS_SLASH = 85,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '`~' key\r\n\t */\r\n\tUS_BACKTICK = 86,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '[{' key\r\n\t */\r\n\tUS_OPEN_SQUARE_BRACKET = 87,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the '\\|' key\r\n\t */\r\n\tUS_BACKSLASH = 88,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the ']}' key\r\n\t */\r\n\tUS_CLOSE_SQUARE_BRACKET = 89,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t * For the US standard keyboard, the ''\"' key\r\n\t */\r\n\tUS_QUOTE = 90,\r\n\t/**\r\n\t * Used for miscellaneous characters; it can vary by keyboard.\r\n\t */\r\n\tOEM_8 = 91,\r\n\t/**\r\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n\t */\r\n\tOEM_102 = 92,\r\n\tNUMPAD_0 = 93,\r\n\tNUMPAD_1 = 94,\r\n\tNUMPAD_2 = 95,\r\n\tNUMPAD_3 = 96,\r\n\tNUMPAD_4 = 97,\r\n\tNUMPAD_5 = 98,\r\n\tNUMPAD_6 = 99,\r\n\tNUMPAD_7 = 100,\r\n\tNUMPAD_8 = 101,\r\n\tNUMPAD_9 = 102,\r\n\tNUMPAD_MULTIPLY = 103,\r\n\tNUMPAD_ADD = 104,\r\n\tNUMPAD_SEPARATOR = 105,\r\n\tNUMPAD_SUBTRACT = 106,\r\n\tNUMPAD_DECIMAL = 107,\r\n\tNUMPAD_DIVIDE = 108,\r\n\t/**\r\n\t * Cover all key codes when IME is processing input.\r\n\t */\r\n\tKEY_IN_COMPOSITION = 109,\r\n\tABNT_C1 = 110,\r\n\tABNT_C2 = 111,\r\n\t/**\r\n\t * Placed last to cover the length of the enum.\r\n\t * Please do not depend on this value!\r\n\t */\r\n\tMAX_VALUE = 112\r\n}\r\n\r\nexport enum MarkerSeverity {\r\n\tHint = 1,\r\n\tInfo = 2,\r\n\tWarning = 4,\r\n\tError = 8\r\n}\r\n\r\nexport enum MarkerTag {\r\n\tUnnecessary = 1,\r\n\tDeprecated = 2\r\n}\r\n\r\n/**\r\n * Position in the minimap to render the decoration.\r\n */\r\nexport enum MinimapPosition {\r\n\tInline = 1,\r\n\tGutter = 2\r\n}\r\n\r\n/**\r\n * Type of hit element with the mouse in the editor.\r\n */\r\nexport enum MouseTargetType {\r\n\t/**\r\n\t * Mouse is on top of an unknown element.\r\n\t */\r\n\tUNKNOWN = 0,\r\n\t/**\r\n\t * Mouse is on top of the textarea used for input.\r\n\t */\r\n\tTEXTAREA = 1,\r\n\t/**\r\n\t * Mouse is on top of the glyph margin\r\n\t */\r\n\tGUTTER_GLYPH_MARGIN = 2,\r\n\t/**\r\n\t * Mouse is on top of the line numbers\r\n\t */\r\n\tGUTTER_LINE_NUMBERS = 3,\r\n\t/**\r\n\t * Mouse is on top of the line decorations\r\n\t */\r\n\tGUTTER_LINE_DECORATIONS = 4,\r\n\t/**\r\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n\t */\r\n\tGUTTER_VIEW_ZONE = 5,\r\n\t/**\r\n\t * Mouse is on top of text in the content.\r\n\t */\r\n\tCONTENT_TEXT = 6,\r\n\t/**\r\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n\t */\r\n\tCONTENT_EMPTY = 7,\r\n\t/**\r\n\t * Mouse is on top of a view zone in the content.\r\n\t */\r\n\tCONTENT_VIEW_ZONE = 8,\r\n\t/**\r\n\t * Mouse is on top of a content widget.\r\n\t */\r\n\tCONTENT_WIDGET = 9,\r\n\t/**\r\n\t * Mouse is on top of the decorations overview ruler.\r\n\t */\r\n\tOVERVIEW_RULER = 10,\r\n\t/**\r\n\t * Mouse is on top of a scrollbar.\r\n\t */\r\n\tSCROLLBAR = 11,\r\n\t/**\r\n\t * Mouse is on top of an overlay widget.\r\n\t */\r\n\tOVERLAY_WIDGET = 12,\r\n\t/**\r\n\t * Mouse is outside of the editor.\r\n\t */\r\n\tOUTSIDE_EDITOR = 13\r\n}\r\n\r\n/**\r\n * A positioning preference for rendering overlay widgets.\r\n */\r\nexport enum OverlayWidgetPositionPreference {\r\n\t/**\r\n\t * Position the overlay widget in the top right corner\r\n\t */\r\n\tTOP_RIGHT_CORNER = 0,\r\n\t/**\r\n\t * Position the overlay widget in the bottom right corner\r\n\t */\r\n\tBOTTOM_RIGHT_CORNER = 1,\r\n\t/**\r\n\t * Position the overlay widget in the top center\r\n\t */\r\n\tTOP_CENTER = 2\r\n}\r\n\r\n/**\r\n * Vertical Lane in the overview ruler of the editor.\r\n */\r\nexport enum OverviewRulerLane {\r\n\tLeft = 1,\r\n\tCenter = 2,\r\n\tRight = 4,\r\n\tFull = 7\r\n}\r\n\r\nexport enum RenderLineNumbersType {\r\n\tOff = 0,\r\n\tOn = 1,\r\n\tRelative = 2,\r\n\tInterval = 3,\r\n\tCustom = 4\r\n}\r\n\r\nexport enum RenderMinimap {\r\n\tNone = 0,\r\n\tText = 1,\r\n\tBlocks = 2\r\n}\r\n\r\nexport enum ScrollType {\r\n\tSmooth = 0,\r\n\tImmediate = 1\r\n}\r\n\r\nexport enum ScrollbarVisibility {\r\n\tAuto = 1,\r\n\tHidden = 2,\r\n\tVisible = 3\r\n}\r\n\r\n/**\r\n * The direction of a selection.\r\n */\r\nexport enum SelectionDirection {\r\n\t/**\r\n\t * The selection starts above where it ends.\r\n\t */\r\n\tLTR = 0,\r\n\t/**\r\n\t * The selection starts below where it ends.\r\n\t */\r\n\tRTL = 1\r\n}\r\n\r\nexport enum SignatureHelpTriggerKind {\r\n\tInvoke = 1,\r\n\tTriggerCharacter = 2,\r\n\tContentChange = 3\r\n}\r\n\r\n/**\r\n * A symbol kind.\r\n */\r\nexport enum SymbolKind {\r\n\tFile = 0,\r\n\tModule = 1,\r\n\tNamespace = 2,\r\n\tPackage = 3,\r\n\tClass = 4,\r\n\tMethod = 5,\r\n\tProperty = 6,\r\n\tField = 7,\r\n\tConstructor = 8,\r\n\tEnum = 9,\r\n\tInterface = 10,\r\n\tFunction = 11,\r\n\tVariable = 12,\r\n\tConstant = 13,\r\n\tString = 14,\r\n\tNumber = 15,\r\n\tBoolean = 16,\r\n\tArray = 17,\r\n\tObject = 18,\r\n\tKey = 19,\r\n\tNull = 20,\r\n\tEnumMember = 21,\r\n\tStruct = 22,\r\n\tEvent = 23,\r\n\tOperator = 24,\r\n\tTypeParameter = 25\r\n}\r\n\r\nexport enum SymbolTag {\r\n\tDeprecated = 1\r\n}\r\n\r\n/**\r\n * The kind of animation in which the editor's cursor should be rendered.\r\n */\r\nexport enum TextEditorCursorBlinkingStyle {\r\n\t/**\r\n\t * Hidden\r\n\t */\r\n\tHidden = 0,\r\n\t/**\r\n\t * Blinking\r\n\t */\r\n\tBlink = 1,\r\n\t/**\r\n\t * Blinking with smooth fading\r\n\t */\r\n\tSmooth = 2,\r\n\t/**\r\n\t * Blinking with prolonged filled state and smooth fading\r\n\t */\r\n\tPhase = 3,\r\n\t/**\r\n\t * Expand collapse animation on the y axis\r\n\t */\r\n\tExpand = 4,\r\n\t/**\r\n\t * No-Blinking\r\n\t */\r\n\tSolid = 5\r\n}\r\n\r\n/**\r\n * The style in which the editor's cursor should be rendered.\r\n */\r\nexport enum TextEditorCursorStyle {\r\n\t/**\r\n\t * As a vertical line (sitting between two characters).\r\n\t */\r\n\tLine = 1,\r\n\t/**\r\n\t * As a block (sitting on top of a character).\r\n\t */\r\n\tBlock = 2,\r\n\t/**\r\n\t * As a horizontal line (sitting under a character).\r\n\t */\r\n\tUnderline = 3,\r\n\t/**\r\n\t * As a thin vertical line (sitting between two characters).\r\n\t */\r\n\tLineThin = 4,\r\n\t/**\r\n\t * As an outlined block (sitting on top of a character).\r\n\t */\r\n\tBlockOutline = 5,\r\n\t/**\r\n\t * As a thin horizontal line (sitting under a character).\r\n\t */\r\n\tUnderlineThin = 6\r\n}\r\n\r\n/**\r\n * Describes the behavior of decorations when typing/editing near their edges.\r\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\r\n */\r\nexport enum TrackedRangeStickiness {\r\n\tAlwaysGrowsWhenTypingAtEdges = 0,\r\n\tNeverGrowsWhenTypingAtEdges = 1,\r\n\tGrowsOnlyWhenTypingBefore = 2,\r\n\tGrowsOnlyWhenTypingAfter = 3\r\n}\r\n\r\n/**\r\n * Describes how to indent wrapped lines.\r\n */\r\nexport enum WrappingIndent {\r\n\t/**\r\n\t * No indentation => wrapped lines begin at column 1.\r\n\t */\r\n\tNone = 0,\r\n\t/**\r\n\t * Same => wrapped lines get the same indentation as the parent.\r\n\t */\r\n\tSame = 1,\r\n\t/**\r\n\t * Indent => wrapped lines get +1 indentation toward the parent.\r\n\t */\r\n\tIndent = 2,\r\n\t/**\r\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\r\n\t */\r\n\tDeepIndent = 3\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\r\nimport { Emitter } from 'vs/base/common/event';\r\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\r\nimport { URI } from 'vs/base/common/uri';\r\nimport { Position } from 'vs/editor/common/core/position';\r\nimport { Range } from 'vs/editor/common/core/range';\r\nimport { Selection } from 'vs/editor/common/core/selection';\r\nimport { Token } from 'vs/editor/common/core/token';\r\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\r\n\r\nexport class KeyMod {\r\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\r\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\r\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\r\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\r\n\r\n\tpublic static chord(firstPart: number, secondPart: number): number {\r\n\t\treturn KeyChord(firstPart, secondPart);\r\n\t}\r\n}\r\n\r\nexport function createMonacoBaseAPI(): typeof monaco {\r\n\treturn {\r\n\t\teditor: undefined!, // undefined override expected here\r\n\t\tlanguages: undefined!, // undefined override expected here\r\n\t\tCancellationTokenSource: CancellationTokenSource,\r\n\t\tEmitter: Emitter,\r\n\t\tKeyCode: standaloneEnums.KeyCode,\r\n\t\tKeyMod: KeyMod,\r\n\t\tPosition: Position,\r\n\t\tRange: Range,\r\n\t\tSelection: <any>Selection,\r\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\r\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\r\n\t\tMarkerTag: standaloneEnums.MarkerTag,\r\n\t\tUri: <any>URI,\r\n\t\tToken: Token\r\n\t};\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { toUint32 } from 'vs/base/common/uint';\r\n\r\nexport class PrefixSumIndexOfResult {\r\n\t_prefixSumIndexOfResultBrand: void;\r\n\r\n\tindex: number;\r\n\tremainder: number;\r\n\r\n\tconstructor(index: number, remainder: number) {\r\n\t\tthis.index = index;\r\n\t\tthis.remainder = remainder;\r\n\t}\r\n}\r\n\r\nexport class PrefixSumComputer {\r\n\r\n\t/**\r\n\t * values[i] is the value at index i\r\n\t */\r\n\tprivate values: Uint32Array;\r\n\r\n\t/**\r\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\r\n\t */\r\n\tprivate prefixSum: Uint32Array;\r\n\r\n\t/**\r\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\r\n\t */\r\n\tprivate readonly prefixSumValidIndex: Int32Array;\r\n\r\n\tconstructor(values: Uint32Array) {\r\n\t\tthis.values = values;\r\n\t\tthis.prefixSum = new Uint32Array(values.length);\r\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\r\n\t\tthis.prefixSumValidIndex[0] = -1;\r\n\t}\r\n\r\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\r\n\t\tinsertIndex = toUint32(insertIndex);\r\n\t\tconst oldValues = this.values;\r\n\t\tconst oldPrefixSum = this.prefixSum;\r\n\t\tconst insertValuesLen = insertValues.length;\r\n\r\n\t\tif (insertValuesLen === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\r\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\r\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\r\n\t\tthis.values.set(insertValues, insertIndex);\r\n\r\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\r\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\r\n\t\t}\r\n\r\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\r\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\r\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic changeValue(index: number, value: number): boolean {\r\n\t\tindex = toUint32(index);\r\n\t\tvalue = toUint32(value);\r\n\r\n\t\tif (this.values[index] === value) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.values[index] = value;\r\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\r\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\r\n\t\tstartIndex = toUint32(startIndex);\r\n\t\tcnt = toUint32(cnt);\r\n\r\n\t\tconst oldValues = this.values;\r\n\t\tconst oldPrefixSum = this.prefixSum;\r\n\r\n\t\tif (startIndex >= oldValues.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet maxCnt = oldValues.length - startIndex;\r\n\t\tif (cnt >= maxCnt) {\r\n\t\t\tcnt = maxCnt;\r\n\t\t}\r\n\r\n\t\tif (cnt === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\r\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\r\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\r\n\r\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\r\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\r\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\r\n\t\t}\r\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\r\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic getTotalValue(): number {\r\n\t\tif (this.values.length === 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\r\n\t}\r\n\r\n\tpublic getAccumulatedValue(index: number): number {\r\n\t\tif (index < 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tindex = toUint32(index);\r\n\t\treturn this._getAccumulatedValue(index);\r\n\t}\r\n\r\n\tprivate _getAccumulatedValue(index: number): number {\r\n\t\tif (index <= this.prefixSumValidIndex[0]) {\r\n\t\t\treturn this.prefixSum[index];\r\n\t\t}\r\n\r\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\r\n\t\tif (startIndex === 0) {\r\n\t\t\tthis.prefixSum[0] = this.values[0];\r\n\t\t\tstartIndex++;\r\n\t\t}\r\n\r\n\t\tif (index >= this.values.length) {\r\n\t\t\tindex = this.values.length - 1;\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i <= index; i++) {\r\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\r\n\t\t}\r\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\r\n\t\treturn this.prefixSum[index];\r\n\t}\r\n\r\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\r\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\r\n\r\n\t\t// Compute all sums (to get a fully valid prefixSum)\r\n\t\tthis.getTotalValue();\r\n\r\n\t\tlet low = 0;\r\n\t\tlet high = this.values.length - 1;\r\n\t\tlet mid = 0;\r\n\t\tlet midStop = 0;\r\n\t\tlet midStart = 0;\r\n\r\n\t\twhile (low <= high) {\r\n\t\t\tmid = low + ((high - low) / 2) | 0;\r\n\r\n\t\t\tmidStop = this.prefixSum[mid];\r\n\t\t\tmidStart = midStop - this.values[mid];\r\n\r\n\t\t\tif (accumulatedValue < midStart) {\r\n\t\t\t\thigh = mid - 1;\r\n\t\t\t} else if (accumulatedValue >= midStop) {\r\n\t\t\t\tlow = mid + 1;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { splitLines } from 'vs/base/common/strings';\r\nimport { URI } from 'vs/base/common/uri';\r\nimport { Position } from 'vs/editor/common/core/position';\r\nimport { IRange } from 'vs/editor/common/core/range';\r\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\r\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\r\n\r\nexport interface IModelChangedEvent {\r\n\t/**\r\n\t * The actual changes.\r\n\t */\r\n\treadonly changes: IModelContentChange[];\r\n\t/**\r\n\t * The (new) end-of-line character.\r\n\t */\r\n\treadonly eol: string;\r\n\t/**\r\n\t * The new version id the model has transitioned to.\r\n\t */\r\n\treadonly versionId: number;\r\n}\r\n\r\nexport class MirrorTextModel {\r\n\r\n\tprotected _uri: URI;\r\n\tprotected _lines: string[];\r\n\tprotected _eol: string;\r\n\tprotected _versionId: number;\r\n\tprotected _lineStarts: PrefixSumComputer | null;\r\n\tprivate _cachedTextValue: string | null;\r\n\r\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\r\n\t\tthis._uri = uri;\r\n\t\tthis._lines = lines;\r\n\t\tthis._eol = eol;\r\n\t\tthis._versionId = versionId;\r\n\t\tthis._lineStarts = null;\r\n\t\tthis._cachedTextValue = null;\r\n\t}\r\n\r\n\tdispose(): void {\r\n\t\tthis._lines.length = 0;\r\n\t}\r\n\r\n\tgetText(): string {\r\n\t\tif (this._cachedTextValue === null) {\r\n\t\t\tthis._cachedTextValue = this._lines.join(this._eol);\r\n\t\t}\r\n\t\treturn this._cachedTextValue;\r\n\t}\r\n\r\n\tonEvents(e: IModelChangedEvent): void {\r\n\t\tif (e.eol && e.eol !== this._eol) {\r\n\t\t\tthis._eol = e.eol;\r\n\t\t\tthis._lineStarts = null;\r\n\t\t}\r\n\r\n\t\t// Update my lines\r\n\t\tconst changes = e.changes;\r\n\t\tfor (const change of changes) {\r\n\t\t\tthis._acceptDeleteRange(change.range);\r\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\r\n\t\t}\r\n\r\n\t\tthis._versionId = e.versionId;\r\n\t\tthis._cachedTextValue = null;\r\n\t}\r\n\r\n\tprotected _ensureLineStarts(): void {\r\n\t\tif (!this._lineStarts) {\r\n\t\t\tconst eolLength = this._eol.length;\r\n\t\t\tconst linesLength = this._lines.length;\r\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\r\n\t\t\tfor (let i = 0; i < linesLength; i++) {\r\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\r\n\t\t\t}\r\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * All changes to a line's text go through this method\r\n\t */\r\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\r\n\t\tthis._lines[lineIndex] = newValue;\r\n\t\tif (this._lineStarts) {\r\n\t\t\t// update prefix sum\r\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _acceptDeleteRange(range: IRange): void {\r\n\r\n\t\tif (range.startLineNumber === range.endLineNumber) {\r\n\t\t\tif (range.startColumn === range.endColumn) {\r\n\t\t\t\t// Nothing to delete\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Delete text on the affected line\r\n\t\t\tthis._setLineText(range.startLineNumber - 1,\r\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take remaining text on last line and append it to remaining text on first line\r\n\t\tthis._setLineText(range.startLineNumber - 1,\r\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\r\n\t\t);\r\n\r\n\t\t// Delete middle lines\r\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n\t\tif (this._lineStarts) {\r\n\t\t\t// update prefix sum\r\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\r\n\t\tif (insertText.length === 0) {\r\n\t\t\t// Nothing to insert\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet insertLines = splitLines(insertText);\r\n\t\tif (insertLines.length === 1) {\r\n\t\t\t// Inserting text on one line\r\n\t\t\tthis._setLineText(position.lineNumber - 1,\r\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n\t\t\t\t+ insertLines[0]\r\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Append overflowing text from first line to the end of text to insert\r\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n\r\n\t\t// Delete overflowing text from first line and insert text on first line\r\n\t\tthis._setLineText(position.lineNumber - 1,\r\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n\t\t\t+ insertLines[0]\r\n\t\t);\r\n\r\n\t\t// Insert new lines & store lengths\r\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\r\n\t\tfor (let i = 1; i < insertLines.length; i++) {\r\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n\t\t}\r\n\r\n\t\tif (this._lineStarts) {\r\n\t\t\t// update prefix sum\r\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\r\n\t\t}\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport { mergeSort } from 'vs/base/common/arrays';\r\nimport { stringDiff } from 'vs/base/common/diff/diff';\r\nimport { IDisposable } from 'vs/base/common/lifecycle';\r\nimport { globals } from 'vs/base/common/platform';\r\nimport { URI } from 'vs/base/common/uri';\r\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\r\nimport { IPosition, Position } from 'vs/editor/common/core/position';\r\nimport { IRange, Range } from 'vs/editor/common/core/range';\r\nimport { DiffComputer } from 'vs/editor/common/diff/diffComputer';\r\nimport { EndOfLineSequence, IWordAtPosition } from 'vs/editor/common/model';\r\nimport { IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\r\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\r\nimport { IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/modes';\r\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/modes/linkComputer';\r\nimport { BasicInplaceReplace } from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\r\nimport { IDiffComputationResult } from 'vs/editor/common/services/editorWorkerService';\r\nimport { createMonacoBaseAPI } from 'vs/editor/common/standalone/standaloneBase';\r\nimport * as types from 'vs/base/common/types';\r\nimport { EditorWorkerHost } from 'vs/editor/common/services/editorWorkerServiceImpl';\r\nimport { StopWatch } from 'vs/base/common/stopwatch';\r\n\r\nexport interface IMirrorModel {\r\n\treadonly uri: URI;\r\n\treadonly version: number;\r\n\tgetValue(): string;\r\n}\r\n\r\nexport interface IWorkerContext<H = undefined> {\r\n\t/**\r\n\t * A proxy to the main thread host object.\r\n\t */\r\n\thost: H;\r\n\t/**\r\n\t * Get all available mirror models in this worker.\r\n\t */\r\n\tgetMirrorModels(): IMirrorModel[];\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface IRawModelData {\r\n\turl: string;\r\n\tversionId: number;\r\n\tlines: string[];\r\n\tEOL: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ICommonModel extends ILinkComputerTarget, IMirrorModel {\r\n\teol: string;\r\n\r\n\tgetLinesContent(): string[];\r\n\tgetLineCount(): number;\r\n\tgetLineContent(lineNumber: number): string;\r\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\r\n\twords(wordDefinition: RegExp): Iterable<string>;\r\n\tgetValueInRange(range: IRange): string;\r\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\r\n\toffsetAt(position: IPosition): number;\r\n\tpositionAt(offset: number): IPosition;\r\n}\r\n\r\n/**\r\n * Range of a word inside a model.\r\n * @internal\r\n */\r\ninterface IWordRange {\r\n\t/**\r\n\t * The index where the word starts.\r\n\t */\r\n\treadonly start: number;\r\n\t/**\r\n\t * The index where the word ends.\r\n\t */\r\n\treadonly end: number;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nclass MirrorModel extends BaseMirrorModel implements ICommonModel {\r\n\r\n\tpublic get uri(): URI {\r\n\t\treturn this._uri;\r\n\t}\r\n\r\n\tpublic get version(): number {\r\n\t\treturn this._versionId;\r\n\t}\r\n\r\n\tpublic get eol(): string {\r\n\t\treturn this._eol;\r\n\t}\r\n\r\n\tpublic getValue(): string {\r\n\t\treturn this.getText();\r\n\t}\r\n\r\n\tpublic getLinesContent(): string[] {\r\n\t\treturn this._lines.slice(0);\r\n\t}\r\n\r\n\tpublic getLineCount(): number {\r\n\t\treturn this._lines.length;\r\n\t}\r\n\r\n\tpublic getLineContent(lineNumber: number): string {\r\n\t\treturn this._lines[lineNumber - 1];\r\n\t}\r\n\r\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\r\n\r\n\t\tlet wordAtText = getWordAtText(\r\n\t\t\tposition.column,\r\n\t\t\tensureValidWordDefinition(wordDefinition),\r\n\t\t\tthis._lines[position.lineNumber - 1],\r\n\t\t\t0\r\n\t\t);\r\n\r\n\t\tif (wordAtText) {\r\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\tpublic words(wordDefinition: RegExp): Iterable<string> {\r\n\r\n\t\tconst lines = this._lines;\r\n\t\tconst wordenize = this._wordenize.bind(this);\r\n\r\n\t\tlet lineNumber = 0;\r\n\t\tlet lineText = '';\r\n\t\tlet wordRangesIdx = 0;\r\n\t\tlet wordRanges: IWordRange[] = [];\r\n\r\n\t\treturn {\r\n\t\t\t*[Symbol.iterator]() {\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tif (wordRangesIdx < wordRanges.length) {\r\n\t\t\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\r\n\t\t\t\t\t\twordRangesIdx += 1;\r\n\t\t\t\t\t\tyield value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (lineNumber < lines.length) {\r\n\t\t\t\t\t\t\tlineText = lines[lineNumber];\r\n\t\t\t\t\t\t\twordRanges = wordenize(lineText, wordDefinition);\r\n\t\t\t\t\t\t\twordRangesIdx = 0;\r\n\t\t\t\t\t\t\tlineNumber += 1;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\r\n\t\tlet content = this._lines[lineNumber - 1];\r\n\t\tlet ranges = this._wordenize(content, wordDefinition);\r\n\t\tlet words: IWordAtPosition[] = [];\r\n\t\tfor (const range of ranges) {\r\n\t\t\twords.push({\r\n\t\t\t\tword: content.substring(range.start, range.end),\r\n\t\t\t\tstartColumn: range.start + 1,\r\n\t\t\t\tendColumn: range.end + 1\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn words;\r\n\t}\r\n\r\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\r\n\t\tconst result: IWordRange[] = [];\r\n\t\tlet match: RegExpExecArray | null;\r\n\r\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\r\n\r\n\t\twhile (match = wordDefinition.exec(content)) {\r\n\t\t\tif (match[0].length === 0) {\r\n\t\t\t\t// it did match the empty string\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic getValueInRange(range: IRange): string {\r\n\t\trange = this._validateRange(range);\r\n\r\n\t\tif (range.startLineNumber === range.endLineNumber) {\r\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\r\n\t\t}\r\n\r\n\t\tlet lineEnding = this._eol;\r\n\t\tlet startLineIndex = range.startLineNumber - 1;\r\n\t\tlet endLineIndex = range.endLineNumber - 1;\r\n\t\tlet resultLines: string[] = [];\r\n\r\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\r\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\r\n\t\t\tresultLines.push(this._lines[i]);\r\n\t\t}\r\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\r\n\r\n\t\treturn resultLines.join(lineEnding);\r\n\t}\r\n\r\n\tpublic offsetAt(position: IPosition): number {\r\n\t\tposition = this._validatePosition(position);\r\n\t\tthis._ensureLineStarts();\r\n\t\treturn this._lineStarts!.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\r\n\t}\r\n\r\n\tpublic positionAt(offset: number): IPosition {\r\n\t\toffset = Math.floor(offset);\r\n\t\toffset = Math.max(0, offset);\r\n\r\n\t\tthis._ensureLineStarts();\r\n\t\tlet out = this._lineStarts!.getIndexOf(offset);\r\n\t\tlet lineLength = this._lines[out.index].length;\r\n\r\n\t\t// Ensure we return a valid position\r\n\t\treturn {\r\n\t\t\tlineNumber: 1 + out.index,\r\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _validateRange(range: IRange): IRange {\r\n\r\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\r\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\r\n\r\n\t\tif (start.lineNumber !== range.startLineNumber\r\n\t\t\t|| start.column !== range.startColumn\r\n\t\t\t|| end.lineNumber !== range.endLineNumber\r\n\t\t\t|| end.column !== range.endColumn) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstartLineNumber: start.lineNumber,\r\n\t\t\t\tstartColumn: start.column,\r\n\t\t\t\tendLineNumber: end.lineNumber,\r\n\t\t\t\tendColumn: end.column\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn range;\r\n\t}\r\n\r\n\tprivate _validatePosition(position: IPosition): IPosition {\r\n\t\tif (!Position.isIPosition(position)) {\r\n\t\t\tthrow new Error('bad position');\r\n\t\t}\r\n\t\tlet { lineNumber, column } = position;\r\n\t\tlet hasChanged = false;\r\n\r\n\t\tif (lineNumber < 1) {\r\n\t\t\tlineNumber = 1;\r\n\t\t\tcolumn = 1;\r\n\t\t\thasChanged = true;\r\n\r\n\t\t} else if (lineNumber > this._lines.length) {\r\n\t\t\tlineNumber = this._lines.length;\r\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\r\n\t\t\thasChanged = true;\r\n\r\n\t\t} else {\r\n\t\t\tlet maxCharacter = this._lines[lineNumber - 1].length + 1;\r\n\t\t\tif (column < 1) {\r\n\t\t\t\tcolumn = 1;\r\n\t\t\t\thasChanged = true;\r\n\t\t\t}\r\n\t\t\telse if (column > maxCharacter) {\r\n\t\t\t\tcolumn = maxCharacter;\r\n\t\t\t\thasChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!hasChanged) {\r\n\t\t\treturn position;\r\n\t\t} else {\r\n\t\t\treturn { lineNumber, column };\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface IForeignModuleFactory {\r\n\t(ctx: IWorkerContext, createData: any): any;\r\n}\r\n\r\ndeclare const require: any;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class EditorSimpleWorker implements IRequestHandler, IDisposable {\r\n\t_requestHandlerBrand: any;\r\n\r\n\tprivate readonly _host: EditorWorkerHost;\r\n\tprivate _models: { [uri: string]: MirrorModel; };\r\n\tprivate readonly _foreignModuleFactory: IForeignModuleFactory | null;\r\n\tprivate _foreignModule: any;\r\n\r\n\tconstructor(host: EditorWorkerHost, foreignModuleFactory: IForeignModuleFactory | null) {\r\n\t\tthis._host = host;\r\n\t\tthis._models = Object.create(null);\r\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\r\n\t\tthis._foreignModule = null;\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tthis._models = Object.create(null);\r\n\t}\r\n\r\n\tprotected _getModel(uri: string): ICommonModel {\r\n\t\treturn this._models[uri];\r\n\t}\r\n\r\n\tprivate _getModels(): ICommonModel[] {\r\n\t\tlet all: MirrorModel[] = [];\r\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\r\n\t\treturn all;\r\n\t}\r\n\r\n\tpublic acceptNewModel(data: IRawModelData): void {\r\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\r\n\t}\r\n\r\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\r\n\t\tif (!this._models[strURL]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet model = this._models[strURL];\r\n\t\tmodel.onEvents(e);\r\n\t}\r\n\r\n\tpublic acceptRemovedModel(strURL: string): void {\r\n\t\tif (!this._models[strURL]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdelete this._models[strURL];\r\n\t}\r\n\r\n\t// ---- BEGIN diff --------------------------------------------------------------------------\r\n\r\n\tpublic async computeDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean, maxComputationTime: number): Promise<IDiffComputationResult | null> {\r\n\t\tconst original = this._getModel(originalUrl);\r\n\t\tconst modified = this._getModel(modifiedUrl);\r\n\t\tif (!original || !modified) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst originalLines = original.getLinesContent();\r\n\t\tconst modifiedLines = modified.getLinesContent();\r\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\r\n\t\t\tshouldComputeCharChanges: true,\r\n\t\t\tshouldPostProcessCharChanges: true,\r\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\r\n\t\t\tshouldMakePrettyDiff: true,\r\n\t\t\tmaxComputationTime: maxComputationTime\r\n\t\t});\r\n\r\n\t\tconst diffResult = diffComputer.computeDiff();\r\n\t\tconst identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\r\n\t\treturn {\r\n\t\t\tquitEarly: diffResult.quitEarly,\r\n\t\t\tidentical: identical,\r\n\t\t\tchanges: diffResult.changes\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _modelsAreIdentical(original: ICommonModel, modified: ICommonModel): boolean {\r\n\t\tconst originalLineCount = original.getLineCount();\r\n\t\tconst modifiedLineCount = modified.getLineCount();\r\n\t\tif (originalLineCount !== modifiedLineCount) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\r\n\t\t\tconst originalLine = original.getLineContent(line);\r\n\t\t\tconst modifiedLine = modified.getLineContent(line);\r\n\t\t\tif (originalLine !== modifiedLine) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// ---- END diff --------------------------------------------------------------------------\r\n\r\n\r\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\r\n\r\n\tprivate static readonly _diffLimit = 100000;\r\n\r\n\tpublic async computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[]): Promise<TextEdit[]> {\r\n\t\tconst model = this._getModel(modelUrl);\r\n\t\tif (!model) {\r\n\t\t\treturn edits;\r\n\t\t}\r\n\r\n\t\tconst result: TextEdit[] = [];\r\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\r\n\r\n\t\tedits = mergeSort(edits, (a, b) => {\r\n\t\t\tif (a.range && b.range) {\r\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\r\n\t\t\t}\r\n\t\t\t// eol only changes should go to the end\r\n\t\t\tlet aRng = a.range ? 0 : 1;\r\n\t\t\tlet bRng = b.range ? 0 : 1;\r\n\t\t\treturn aRng - bRng;\r\n\t\t});\r\n\r\n\t\tfor (let { range, text, eol } of edits) {\r\n\r\n\t\t\tif (typeof eol === 'number') {\r\n\t\t\t\tlastEol = eol;\r\n\t\t\t}\r\n\r\n\t\t\tif (Range.isEmpty(range) && !text) {\r\n\t\t\t\t// empty change\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst original = model.getValueInRange(range);\r\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\r\n\r\n\t\t\tif (original === text) {\r\n\t\t\t\t// noop\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// make sure diff won't take too long\r\n\t\t\tif (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\r\n\t\t\t\tresult.push({ range, text });\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// compute diff between original and edit.text\r\n\t\t\tconst changes = stringDiff(original, text, false);\r\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\r\n\r\n\t\t\tfor (const change of changes) {\r\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\r\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\r\n\t\t\t\tconst newEdit: TextEdit = {\r\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\r\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\r\n\t\t\t\t\tresult.push(newEdit);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (typeof lastEol === 'number') {\r\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// ---- END minimal edits ---------------------------------------------------------------\r\n\r\n\tpublic async computeLinks(modelUrl: string): Promise<ILink[] | null> {\r\n\t\tlet model = this._getModel(modelUrl);\r\n\t\tif (!model) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn computeLinks(model);\r\n\t}\r\n\r\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\r\n\r\n\tprivate static readonly _suggestionsLimit = 10000;\r\n\r\n\tpublic async textualSuggest(modelUrls: string[], leadingWord: string | undefined, wordDef: string, wordDefFlags: string): Promise<{ words: string[], duration: number } | null> {\r\n\r\n\t\tconst sw = new StopWatch(true);\r\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n\t\tconst seen = new Set<string>();\r\n\r\n\t\touter: for (let url of modelUrls) {\r\n\t\t\tconst model = this._getModel(url);\r\n\t\t\tif (!model) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let word of model.words(wordDefRegExp)) {\r\n\t\t\t\tif (word === leadingWord || !isNaN(Number(word))) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tseen.add(word);\r\n\t\t\t\tif (seen.size > EditorSimpleWorker._suggestionsLimit) {\r\n\t\t\t\t\tbreak outer;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { words: Array.from(seen), duration: sw.elapsed() };\r\n\t}\r\n\r\n\r\n\t// ---- END suggest --------------------------------------------------------------------------\r\n\r\n\t//#region -- word ranges --\r\n\r\n\tpublic async computeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\r\n\t\tlet model = this._getModel(modelUrl);\r\n\t\tif (!model) {\r\n\t\t\treturn Object.create(null);\r\n\t\t}\r\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\r\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\r\n\t\t\tlet words = model.getLineWords(line, wordDefRegExp);\r\n\t\t\tfor (const word of words) {\r\n\t\t\t\tif (!isNaN(Number(word.word))) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlet array = result[word.word];\r\n\t\t\t\tif (!array) {\r\n\t\t\t\t\tarray = [];\r\n\t\t\t\t\tresult[word.word] = array;\r\n\t\t\t\t}\r\n\t\t\t\tarray.push({\r\n\t\t\t\t\tstartLineNumber: line,\r\n\t\t\t\t\tstartColumn: word.startColumn,\r\n\t\t\t\t\tendLineNumber: line,\r\n\t\t\t\t\tendColumn: word.endColumn\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t//#endregion\r\n\r\n\tpublic async navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\r\n\t\tlet model = this._getModel(modelUrl);\r\n\t\tif (!model) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n\r\n\t\tif (range.startColumn === range.endColumn) {\r\n\t\t\trange = {\r\n\t\t\t\tstartLineNumber: range.startLineNumber,\r\n\t\t\t\tstartColumn: range.startColumn,\r\n\t\t\t\tendLineNumber: range.endLineNumber,\r\n\t\t\t\tendColumn: range.endColumn + 1\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tlet selectionText = model.getValueInRange(range);\r\n\r\n\t\tlet wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\r\n\t\tif (!wordRange) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet word = model.getValueInRange(wordRange);\r\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\r\n\r\n\tpublic loadForeignModule(moduleId: string, createData: any, foreignHostMethods: string[]): Promise<string[]> {\r\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\r\n\t\t\treturn this._host.fhr(method, args);\r\n\t\t};\r\n\r\n\t\tconst foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\r\n\r\n\t\tlet ctx: IWorkerContext<any> = {\r\n\t\t\thost: foreignHost,\r\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\r\n\t\t\t\treturn this._getModels();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (this._foreignModuleFactory) {\r\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\r\n\t\t\t// static foreing module\r\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._foreignModule));\r\n\t\t}\r\n\t\t// ESM-comment-begin\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\r\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\r\n\r\n\t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\r\n\r\n\t\t\t}, reject);\r\n\t\t});\r\n\t\t// ESM-comment-end\r\n\r\n\t\t// ESM-uncomment-begin\r\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\r\n\t\t// ESM-uncomment-end\r\n\t}\r\n\r\n\t// foreign method request\r\n\tpublic fmr(method: string, args: any[]): Promise<any> {\r\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\r\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\r\n\t\t} catch (e) {\r\n\t\t\treturn Promise.reject(e);\r\n\t\t}\r\n\t}\r\n\r\n\t// ---- END foreign module support --------------------------------------------------------------------------\r\n}\r\n\r\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\r\nexport function create(host: EditorWorkerHost): IRequestHandler {\r\n\treturn new EditorSimpleWorker(host, null);\r\n}\r\n\r\n// This is only available in a Web Worker\r\ndeclare function importScripts(...urls: string[]): void;\r\n\r\nif (typeof importScripts === 'function') {\r\n\t// Running in a web worker\r\n\tglobals.monaco = createMonacoBaseAPI();\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n(function () {\r\n\r\n\tconst MonacoEnvironment = (<any>self).MonacoEnvironment;\r\n\tconst monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\r\n\r\n\tconst trustedTypesPolicy = (\r\n\t\ttypeof self.trustedTypes?.createPolicy === 'function'\r\n\t\t\t? self.trustedTypes?.createPolicy('amdLoader', { createScriptURL: value => value })\r\n\t\t\t: undefined\r\n\t);\r\n\r\n\tif (typeof (<any>self).define !== 'function' || !(<any>self).define.amd) {\r\n\t\tlet loaderSrc: string | TrustedScriptURL = monacoBaseUrl + 'vs/loader.js';\r\n\t\tif (trustedTypesPolicy) {\r\n\t\t\tloaderSrc = trustedTypesPolicy.createScriptURL(loaderSrc);\r\n\t\t}\r\n\t\timportScripts(loaderSrc as string);\r\n\t}\r\n\r\n\trequire.config({\r\n\t\tbaseUrl: monacoBaseUrl,\r\n\t\tcatchError: true,\r\n\t\ttrustedTypesPolicy,\r\n\t});\r\n\r\n\tlet loadCode = function (moduleId: string) {\r\n\t\trequire([moduleId], function (ws) {\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tlet messageHandler = ws.create((msg: any, transfer?: Transferable[]) => {\r\n\t\t\t\t\t(<any>self).postMessage(msg, transfer);\r\n\t\t\t\t}, null);\r\n\r\n\t\t\t\tself.onmessage = (e: MessageEvent) => messageHandler.onmessage(e.data);\r\n\t\t\t\twhile (beforeReadyMessages.length > 0) {\r\n\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\r\n\t\t\t\t}\r\n\t\t\t}, 0);\r\n\t\t});\r\n\t};\r\n\r\n\tlet isFirstMessage = true;\r\n\tlet beforeReadyMessages: MessageEvent[] = [];\r\n\tself.onmessage = (message: MessageEvent) => {\r\n\t\tif (!isFirstMessage) {\r\n\t\t\tbeforeReadyMessages.push(message);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisFirstMessage = false;\r\n\t\tloadCode(message.data);\r\n\t};\r\n})();\r\n"],"mappings":"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","names":[],"file":"workerMain.js"}