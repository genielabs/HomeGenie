{
" ": "--------------- SETUP WIZ -----------------",
    "welcome_to_homegenie":
        "Welcome to HomeGenie!",
    "welcome_subtitle":
        "The programmable automation intelligence",
    "not_configured_yet":
        "System is not configured yet. This setup wizard will help you in getting your system up and running in a few steps.",
    "system_config_start_with_base_and_backup":
        "Restore from backup file",
    "system_config_start_with_default_setup":
        "Default setup",
    "system_config_include_demo":
        "Include demo with simulated device activity",
    "system_config_additional_features":
        "Additional features",
    "system_config_manual_setup":
        "Manual setup",
" ": "-------------- INTERFACES ----------------",
    "interfaces":
        "Interfaces",
    "Protocols.UPnP":
        "UPnP controller",
    "HomeAutomation.X10":
        "X10 controller",
    "HomeAutomation.ZWave":
        "Z-Wave controller",
    "HomeAutomation.ZigBee":
        "ZigBee controller",
    "device_port":
        "Device port",
    "device_driver":
        "Driver",
    "flow_control":
      "Flow control",
    "controller":
        "Controller",
" ":"--------------- PROGRAMS ------------------",
    "programs":
        "Programs",
    "repositories":
        "Repositories",
    "packages":
        "Packages",
    "installed_packages":
        "Installed packages",
    "upload_package":
        "Upload package",
    "create_package":
        "Create new package",
    "programs_version":
        "Programs version",
" ":"---------- MAINTENANCE -------------",
    "http_settings":
        "HTTP settings",
" ":"---------- MODULES AND GROUPS -------------",
    "modules_groups":
        "Groups and modules",
    "groups":
      "Groups",
    "add_group":
      "Add group",
    "edit_group":
      "Edit group",
    "delete_group":
      "Delete group",
    "dashboard_from_group":
      "Create a dashboard from this group",
    "group_modules":
      "Modules in this group",
    "modules":
        "Modules",
    "empty_group":
        "No modules in this group.",
" ":"---------- SCHEDULER -------------",
    "scheduler_wizard":
        "Scheduler Wizard",
    "schedule_event":
        "Event",
    "schedule_type_standard":
        "Standard",
    "schedule_type_range":
        "Date range",
    "schedule_type_cron":
        "Cron expression",
    "schedule_action":
        "Action",
    "schedule_occurrence_preview":
        "Occurrence preview",
    "time_schedule":
        "Schedule",
    "occurrence":
        "Occurrence",
    "cronwizard_description_on":
        "on",
    "cronwizard_description_from":
        "from",
    "cronwizard_description_to":
        "to",
    "cronwizard_description_starting":
        "from",
    "cronwizard_description_ending":
        "to",
    "cronwizard_description_at":
        "at",
    "cronwizard_add_time_slot":
        "Add time slot",
    "cronwizard_add_exact_time":
        "Add exact time",
    "cronwizard_start_time":
        "Start time",
    "cronwizard_end_time":
        "End time",
    "cronwizard_minutes":
        "Minutes",
    "cronwizard_hours":
        "Hours",
    "cronwizard_days":
        "Days",
    "cronwizard_months":
        "Months",
    "cronwizard_minuteselect_everyminute":
        "Every minute",
    "cronwizard_minuteselect_everynthminute":
        "Every given minutes",
    "cronwizard_minuteselect_selectedminutes":
        "Selected minutes",
    "cronwizard_hourselect_everyhour":
        "Every hour",
    "cronwizard_hourselect_everynthhour":
        "Every given hours",
    "cronwizard_hourselect_selectedhours":
        "Selected hours",
    "cronwizard_dayselect_everyday":
        "Every day",
    "cronwizard_dayselect_selecteddays":
        "Selected days",
    "cronwizard_dayowselect_selecteddaysow":
        "Selected days of week",
    "cronwizard_monthselect_everymonth":
        "Every month",
    "cronwizard_monthselect_selectedmonths":
        "Selected months",
    "cronwizard_schedule_set_exact_time":
      "Set event time.",
    "cronwizard_schedule_set_slot_start":
      "Set time slot start.",
    "cronwizard_schedule_set_slot_end":
      "Starting at {{start}}.<span class=\"notranslate\"><br/></span>\nSet time slot end.",
    "cronwizard_bindings_define_types_and_modules":
        "Define types and modules that are subject to this schedule (optional)",
    "cronwizard_bindings_select_types":
        "Select types",
    "cronwizard_action_set_action_to_execute":
        "Set action to execute on occurrences of this event",
    "cronwizard_action_preset_actions":
        "Preset actions",
    "cronwizard_action_preset_every_occurrence":
        "On every occurrence",
    "cronwizard_action_preset_slot_start":
        "At start of a time slot",
    "cronwizard_action_preset_slot_end":
        "At end of a time slot",
    "cronwizard_action_custom_script":
        "Custom action script",
    "cronwizard_action_no_action":
        "No action",
    "cronwizard_action_schedule_variable_hint":
        "Use <span class=\"notranslate color-primary\">@{{name}}</span> as a variable in cron expressions or use <span class=\"notranslate color-primary\">Scheduler.IsScheduling(\"@{{name}}\")</span> in automation programs to reference this event.",
" ":"--------------- SCHEDULER WIZARD ----------------",
    "scheduler_preset_action_command_turn_on":
        "Turn on",
    "scheduler_preset_action_command_turn_off":
        "Turn off",
    "scheduler_preset_action_command_set_level":
        "Set level",
    "scheduler_preset_action_config_level":
        "Level",
    "scheduler_preset_action_command_set_color":
        "Set color",
    "scheduler_preset_action_config_color":
        "Color",
    "scheduler_preset_action_command_thermostat_mode":
        "Thermostat mode",
    "scheduler_preset_action_config_mode":
        "Mode",
    "scheduler_preset_action_config_mode_on":
        "On",
    "scheduler_preset_action_config_mode_off":
        "Off",
    "scheduler_preset_action_config_mode_heat":
        "Heat",
    "scheduler_preset_action_config_mode_heat_eco":
        "Heat economy",
    "scheduler_preset_action_config_mode_cool":
        "Cool",
    "scheduler_preset_action_config_mode_cool_eco":
        "Cool economy",
    "scheduler_preset_action_program_run":
        "Run program",
    "scheduler_preset_action_config_program":
        "Program",
    "scheduler_preset_action_config_options":
        "Options",
    "scheduler_preset_action_program_say":
        "Say",
    "scheduler_preset_action_config_message":
        "Message",
" ":"---------------- PROGRAM EDITOR -----------------",
  "save_and_build":
    "Save and build",
  "toggle_widgets_preview":
    "Toggle widgets preview",
  "stop_program":
    "Stop program",
  "run_program":
    "Run program",
  "enable_to_run_program":
    "Enable program in order to run it",
  "program_status_added":
    "Added",
  "program_status_idle":
    "Idle",
  "program_status_setup":
    "Setup",
  "program_status_running":
    "Running",
  "program_status_background":
    "Background",
  "program_status_stopping":
    "Stopping",
  "program_status_stopped":
    "Stopped",
  "program_status_interrupted":
    "Interrupted",
  "program_status_disabled":
    "Disabled",
  "program_status_enabled":
    "Enabled",
  "program_status_broken":
    "Broken",
  "program_status_compile":
    "Compile",
  "automation_programming_guide":
    "Programming guide'",
  "tap_to_disable":
    "Click to disable",
  "tap_to_enable":
    "Click to enable",
  "program_data":
    "Program data",
  "visual_code":
    "Visual code",
  "generated_code":
    "Generated code",
  "setup_code":
    "Setup",
  "main_code":
    "Main",
  "context_code":
    "Context",
  "main_code_empty_note":
    "\"Main\" code is empty.\n\nUse the \"Visual code\" editor to generate this code:\n- Open the category \"Program\" from the command palette on the left\n- Drag a block of type \"Main\" in the visual code workspace\n- Add inside it other code blocks to implement actions and logic of this program\n\nThe program \"Main\" can be either run manually or auto-started based on conditions eventually given in the Setup code.",
  "setup_code_empty_note":
    "\"Setup\" code is empty.\n\nUse the \"Visual code\" editor to generate this code:\n- Open the category \"Program\" from the command palette on the left\n- Drag a block of type \"Setup\" in the visual code workspace\n- Add inside it other code blocks to determine the conditions that will trigger \"Main\" code execution\n\nThis code gets evaluated everytime a new event occurs and at least once a minute.",
  "capture_commands":
    "Capture commands",
  "capture_commands_description":
    "Add all commands performed manually on widgets to the program.",
  "capture_commands_pause":
    "Pause between commands",
  "capture_pause_none":
    "None",
  "capture_pause_asis":
    "As is",
" ": "------------------------------------------",
  "$options": {

    "16": {
      "Title":
      "Level Memory",
      "Description":
      "Store and recall last dimmer level.",
      "HomeGenie.LevelMemory":
      "Recall last light level when switched on",
      "HomeGenie.LevelMemory.SimulateOnly":
      "Simulate only"
    },

    "26": {
      "Title":
        "Color lights",
      "Description":
        "Example Philips Hue lights integration using HTTP API (V1).\nThe default user to connect to the bridge is \"newdeveloper\" and it should be already enabled.",
      "ConfigureOptions.BridgeAddress":
        "Philips Hue Bridge (V1) IP address",
      "ConfigureOptions.BridgeUsername":
        "Username",
      "ConfigureOptions.LightsCount":
        "Number of lights"
    },

    "34": {
      "Title":
      "Weather Forecast",
      "Description":
      "Weather and forecast information from Open Weather Map service.\nTo activate this widget enter a valid API key.\nFollow instructions at https://openweathermap.org/appid to get a free API key.",
      "ConfigureOptions.Location":
      "City name",
      "ConfigureOptions.Language":
      "Language (eg. EN, IT, FR, DE, ...)",
      "ConfigureOptions.UpdateInterval":
      "Update interval (minutes)",
      "ConfigureOptions.ApiKey":
      "OpenWeatherMap API key (APPID)"
    },

    "77": {
      "Title": "Network MQTT",
      "Description": "Connect to an MQTT broker to use HomeGenie Panel app from anywhere via Internet or to interconnect HomeGenie devices on the same MQTT network.",
      "MQTT.SensorPublish": "Publish events emitted by this module",
      "ConfigureOptions.ClientId": "Client Id.",
      "ConfigureOptions.ServerAddress": "Server address",
      "ConfigureOptions.ServerPort": "Server port",
      "ConfigureOptions.Encryption": "Enable end-to-end encryption (E2EE)",
      "ConfigureOptions.WebSockets": "Use WebSockets",
      "ConfigureOptions.TLS": "Enable TLS/SSL",
      "ConfigureOptions.Username": "Username (optional)",
      "ConfigureOptions.Password": "Password (optional)",
      "ConfigureOptions.ImportExternal": "Import external modules"
    },

    "78": {
      "Title": "Smart Thermostat",
      "Description": "Use any temperature sensor and smart switch to implement thermostat functionality.",
      "VirtualThermostat.TemperatureModule": "Temperature sensor",
      "VirtualThermostat.HeatingSwitchModule": "Heating switch",
      "VirtualThermostat.CoolingSwitchModule": "Cooling switch",
      "ConfigureOptions.ThermostatsCount": "Number of thermostats"
    },

    "81": {
        "Title":
            "Energy Monitor",
        "Description":
            "Generate statistics on energy consumption and usage of devices.",
        "EnergyManagement.MonitorStatus":
            "Monitor status",
        "EnergyManagement.MonitorWatts":
            "Monitor energy consumption"
    },

    "82": {
        "Title":
            "Energy Saving Mode",
        "Description":
            "Keep the light level below a configurable percentage.",
        "EnergyManagement.EnergySavingLevel":
            "Max light level (%)",
        "EnergyManagement.EnergySavingMode":
            "Enable"
    },

    "88": {
      "Title":
          "Generic IP camera",
      "Description":
          "Display/route image feed from an IP camera.",
      "IpCamera.ImageURL":
          "Camera image API URL (see your camera docs)",
      "IpCamera.Username":
          "Username (optional)",
      "IpCamera.Password":
          "Password (optional)",
      "Widget.Config.fps":
          "Frames per second",
      "Widget.Config.size":
          "Widget size"
    },

    "90": {
        "Title":
            "Security Alarm System",
        "Description":
            "Use sensors and other devices to implement a security alarm system.",
        "HomeGenie.SecurityAlarm":
            "Use as alarm/strobe",
        "HomeGenie.SecurityTriggerHome":
            "Also triggers when armed Home",
        "HomeGenie.SecuritySensor":
            "Use as security sensor",
        "ConfigureOptions.Email.Recipients":
            "Comma separated list of recipients e-mails for alarm notifications",
        "ConfigureOptions.System.ArmDelay":
            "Arm delay (seconds)",
        "ConfigureOptions.System.SirenStartTime":
            "Sirens Start Delay (seconds)",
        "ConfigureOptions.System.SirenMaxTime":
            "Sirens max Time (seconds, 0=infinite)",
        "ConfigureOptions.Trigger.ArmedProgram":
            "Program to run when armed",
        "ConfigureOptions.Trigger.DisarmedProgram":
            "Program to run when disarmed",
        "ConfigureOptions.Trigger.TriggeredProgram":
            "Program to run when triggered"
    },

    "95": {
      "Title": "Events logging",
      "Description": "Record device activity.",
      "EventsLogger.EnableLogging": "Enable"
    },

    "111": {
      "Title": "Client configuration",
      "Description": "Implements API for managing client's configuration profiles that are used to store UI and dashboards settings."
    },

    "400": {
      "Title": "Virtual Modules Demo",
      "Description": "Manually set values of the virtual device.",
      "Sensor.Temperature": "Temperature value",
      "Sensor.Luminance": "Luminance value",
      "Sensor.MotionDetect": "Motion detection status",
      "Status.Battery": "Battery level",
      "Sensor.DoorWindow": "Door/Window sensor status (open/closed)",
      "Status.Level": "Switch status (on/off)"
    },

    "401": {
      "Title": "Demo - Toggle Door",
      "Description": "Simulates door open/closed of demo door-window sensor."
    },

    "402": {
      "Title": "Demo - Motion Detected",
      "Description": "Simulates motion detection of demo multi-sensor."
    },

    "410": {
      "Title": "Sensor simulator",
      "Description": "Emit random sensor values.",
      "Simulator.Sensor.Temperature": "Temperature sensor",
      "Simulator.Sensor.Humidity": "Humidity sensor",
      "Simulator.Sensor.Luminance": "Light sensor",
      "Simulator.Meter.Watts": "Watts meter",
      "Simulator.Meter.Watts.Max": "Max Watt power",
      "Simulator.Sensor.DataFrequency": "Simulator emit frequency"
    },

    "505": {
      "Title": "Remote Control",
      "Description": "Control the device using a remote (IR or RF).",
      "HomeGenie.RemoteControl.Enable": "Enable",
      "HomeGenie.RemoteControl.IRCode": "Toggle button",
      "ConfigureOptions.DimmerUpCode": "Brightness increase button",
      "ConfigureOptions.DimmerDownCode": "Brightness decrease button",
      "ConfigureOptions.DimmerInterval": "Dimming step"
    },

    "142": {
        "Title":
            "E-Mail account",
        "Description":
            "Stores e-mail account info used by system programs for sending/receiving emails.",
        "ConfigureOptions.Email.Sender":
            "1. E-Mail address",
        "ConfigureOptions.Email.SmtpServer":
            "2. SMTP server address",
        "ConfigureOptions.Email.SmtpUserName":
            "3. SMTP username (optional)",
        "ConfigureOptions.Email.SmtpPassword":
            "4. SMTP password (optional)",
        "ConfigureOptions.Email.SmtpPort":
            "5. SMTP server port",
        "ConfigureOptions.Email.SmtpUseSsl":
            "6. SMTP server use SSL"
    },

    "145": {
        "Title":
            "Smart Device",
        "Description":
            "Turn on/off the device based on motion detection and ambient light.",
        "HomeGenie.SmartLights.Enable":
            "Enable 'Smart Device'",
        "HomeGenie.SmartLights.OnMotionDetect":
            "Controlled by sensor (optional)",
        "HomeGenie.SmartLights.CheckLuminosity":
            "Controlled by light sensor (optional)",
        "HomeGenie.SmartLights.SwitchOffTimeout":
            "Turn off after inactivity timeout (seconds)",
        "HomeGenie.SmartLights.MinLuminance":
            "Turn on if luminance is below:"
    },

    "8": {
        "Title":
            "Sunrise Colors Scenario",
        "Description":
            "Example \"Sunrise\" scenario for color changing LED lights.",
        "Scenarios.SunriseColors":
            "Link to Sunrise Colors scenario"
    },

    "910": {
      "Title":
        "Object detection",
      "Description":
        "Detect objects using a pre-trained YOLO11 model.",
      "ML.ObjectDetection":
        "Enable objects detection",
      "ML.ObjectDetection.TriggerDetect":
        "Comma-separated list of things (in English) that will trigger the alarm. (e.g.: cat, dog, person, backpack, suitcase)",
      "ConfigureOptions.Yolo.ModelPath":
        "Path of YOLO11 model file (.onnx)"
    },

    "911": {
      "Title":
        "Pose estimation",
      "Description":
        "Keypoint detection via pose estimation, using custom ONNX models or the default pre-trained YOLOv11 model (human pose-specific).",
      "ML.PoseEstimation":
        "Enable pose estimation",
      "ConfigureOptions.Yolo.ModelPath":
        "Path of YOLO11 model file (.onnx)"
    },

    "912": {
      "Title":
        "Instance segmentation",
      "Description":
        "Detect objects and their outlines using a pre-trained YOLO11 model.",
      "ML.InstanceSegmentation":
        "Enable instance segmentation",
      "ConfigureOptions.Yolo.ModelPath":
        "Path of YOLO11 model file (.onnx)"
    }

  }
}
